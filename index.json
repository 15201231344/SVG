{
  "api/Svg.SvgHorizontalKern.html": {
    "href": "api/Svg.SvgHorizontalKern.html",
    "title": "Class SvgHorizontalKern | SVG.NET API",
    "keywords": "Class SvgHorizontalKern Inheritance Object SvgElement SvgKern SvgHorizontalKern Implements ISvgTransformable ICloneable ISvgNode Inherited Members SvgKern.Glyph1 SvgKern.Glyph2 SvgKern.Unicode1 SvgKern.Unicode2 SvgKern.Kerning SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.Render(ISvgRenderer) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.DeepCopy<T>() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"hkern\")] public class SvgHorizontalKern : SvgKern, ISvgElement, ISvgTransformable, ICloneable, ISvgNode Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() Implements ISvgTransformable System.ICloneable ISvgNode"
  },
  "api/Svg.SvgGroup.html": {
    "href": "api/Svg.SvgGroup.html",
    "title": "Class SvgGroup | SVG.NET API",
    "keywords": "Class SvgGroup An element used to group SVG shapes. Inheritance Object SvgElement SvgVisualElement SvgPathBasedElement SvgMarkerElement SvgGroup Implements ISvgTransformable ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable Inherited Members SvgMarkerElement.MarkerEnd SvgMarkerElement.MarkerMid SvgMarkerElement.MarkerStart SvgMarkerElement.RenderStroke(ISvgRenderer) SvgVisualElement.ISvgBoundable.Location SvgVisualElement.ISvgBoundable.Size SvgVisualElement.Clip SvgVisualElement.ClipPath SvgVisualElement.ClipRule SvgVisualElement.Filter SvgVisualElement.RequiresSmoothRendering SvgVisualElement.RenderFillAndStroke(ISvgRenderer) SvgVisualElement.RenderFill(ISvgRenderer) SvgVisualElement.SetClip(ISvgRenderer) SvgVisualElement.ResetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.SetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.ResetClip(ISvgRenderer) SvgVisualElement.Visible SvgVisualElement.Display SvgVisualElement.Displayable SvgVisualElement.EnableBackground SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"g\")] public class SvgGroup : SvgMarkerElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode, ISvgBoundable, ISvgStylable, ISvgClipable Properties Bounds Gets the bounds of the element. Declaration public override RectangleF Bounds { get; } Property Value Type Description RectangleF The bounds. Overrides SvgPathBasedElement.Bounds Renderable Declaration protected override bool Renderable { get; } Property Value Type Description Boolean Overrides SvgVisualElement.Renderable Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgVisualElement.DeepCopy<T>() Path(ISvgRenderer) Gets the for this element. Declaration public override GraphicsPath Path(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer Returns Type Description GraphicsPath Overrides SvgVisualElement.Path(ISvgRenderer) Render(ISvgRenderer) Add group markers to children before rendering them. This is only done on first rendering. Declaration protected override void Render(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The ISvgRenderer to render the child SvgElement s to. Overrides SvgVisualElement.Render(ISvgRenderer) Implements ISvgTransformable System.ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable"
  },
  "api/Svg.SvgGradientStop.html": {
    "href": "api/Svg.SvgGradientStop.html",
    "title": "Class SvgGradientStop | SVG.NET API",
    "keywords": "Class SvgGradientStop Represents a colour stop in a gradient. Inheritance Object SvgElement SvgGradientStop Implements ISvgTransformable ICloneable ISvgNode Inherited Members SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.Render(ISvgRenderer) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"stop\")] public class SvgGradientStop : SvgElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode Constructors SvgGradientStop() Initializes a new instance of the SvgGradientStop class. Declaration public SvgGradientStop() SvgGradientStop(SvgUnit, Color) Initializes a new instance of the SvgGradientStop class. Declaration public SvgGradientStop(SvgUnit offset, Color colour) Parameters Type Name Description SvgUnit offset The offset. Color colour The colour. Properties Offset Gets or sets the offset, i.e. where the stop begins from the beginning, of the gradient stop. Declaration public SvgUnit Offset { get; set; } Property Value Type Description SvgUnit Opacity Gets or sets the opacity of the gradient stop (0-1). Declaration public override float Opacity { get; set; } Property Value Type Description Single Overrides SvgElement.Opacity StopColor Gets or sets the colour of the gradient stop. Declaration public override SvgPaintServer StopColor { get; set; } Property Value Type Description SvgPaintServer Overrides SvgElement.StopColor Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgElement.DeepCopy<T>() GetColor(SvgElement) Declaration public Color GetColor(SvgElement parent) Parameters Type Name Description SvgElement parent Returns Type Description Color Implements ISvgTransformable System.ICloneable ISvgNode"
  },
  "api/Svg.SvgGradientSpreadMethodConverter.html": {
    "href": "api/Svg.SvgGradientSpreadMethodConverter.html",
    "title": "Class SvgGradientSpreadMethodConverter | SVG.NET API",
    "keywords": "Class SvgGradientSpreadMethodConverter Inheritance Object BaseConverter EnumBaseConverter < SvgGradientSpreadMethod > SvgGradientSpreadMethodConverter Inherited Members EnumBaseConverter<SvgGradientSpreadMethod>.CaseHandlingMode EnumBaseConverter<SvgGradientSpreadMethod>.DefaultValue EnumBaseConverter<SvgGradientSpreadMethod>.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) EnumBaseConverter<SvgGradientSpreadMethod>.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type) BaseConverter.CanConvertFrom(ITypeDescriptorContext, Type) BaseConverter.CanConvertTo(ITypeDescriptorContext, Type) Namespace : Svg Assembly : cs.temp.dll.dll Syntax public sealed class SvgGradientSpreadMethodConverter : EnumBaseConverter<SvgGradientSpreadMethod> Constructors SvgGradientSpreadMethodConverter() Declaration public SvgGradientSpreadMethodConverter()"
  },
  "api/Svg.SvgGradientSpreadMethod.html": {
    "href": "api/Svg.SvgGradientSpreadMethod.html",
    "title": "Enum SvgGradientSpreadMethod | SVG.NET API",
    "keywords": "Enum SvgGradientSpreadMethod Indicates what happens if the gradient starts or ends inside the bounds of the target rectangle. Namespace : Svg Assembly : cs.temp.dll.dll Syntax public enum SvgGradientSpreadMethod Remarks Possible values are: 'pad', which says to use the terminal colors of the gradient to fill the remainder of the target region, 'reflect', which says to reflect the gradient pattern start-to-end, end-to-start, start-to-end, etc. continuously until the target rectangle is filled, and repeat, which says to repeat the gradient pattern start-to-end, start-to-end, start-to-end, etc. continuously until the target region is filled. If the attribute is not specified, the effect is as if a value of 'pad' were specified. Fields Name Description Pad Use the terminal colors of the gradient to fill the remainder of the target region. Reflect Reflect the gradient pattern start-to-end, end-to-start, start-to-end, etc. continuously until the target rectangle is filled. Repeat Repeat the gradient pattern start-to-end, start-to-end, start-to-end, etc. continuously until the target region is filled."
  },
  "api/Svg.SvgFontVariant.html": {
    "href": "api/Svg.SvgFontVariant.html",
    "title": "Enum SvgFontVariant | SVG.NET API",
    "keywords": "Enum SvgFontVariant Namespace : Svg Assembly : cs.temp.dll.dll Syntax public enum SvgFontVariant Fields Name Description Inherit Normal Smallcaps"
  },
  "api/Svg.SvgFontStyleConverter.html": {
    "href": "api/Svg.SvgFontStyleConverter.html",
    "title": "Class SvgFontStyleConverter | SVG.NET API",
    "keywords": "Class SvgFontStyleConverter Inheritance Object BaseConverter EnumBaseConverter < SvgFontStyle > SvgFontStyleConverter Inherited Members EnumBaseConverter<SvgFontStyle>.CaseHandlingMode EnumBaseConverter<SvgFontStyle>.DefaultValue EnumBaseConverter<SvgFontStyle>.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) EnumBaseConverter<SvgFontStyle>.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type) BaseConverter.CanConvertFrom(ITypeDescriptorContext, Type) BaseConverter.CanConvertTo(ITypeDescriptorContext, Type) Namespace : Svg Assembly : cs.temp.dll.dll Syntax public sealed class SvgFontStyleConverter : EnumBaseConverter<SvgFontStyle> Constructors SvgFontStyleConverter() Declaration public SvgFontStyleConverter()"
  },
  "api/Svg.SvgFontStyle.html": {
    "href": "api/Svg.SvgFontStyle.html",
    "title": "Enum SvgFontStyle | SVG.NET API",
    "keywords": "Enum SvgFontStyle This is the descriptor for the style of a font and takes the same values as the 'font-style' property, except that a comma-separated list is permitted. Namespace : Svg Assembly : cs.temp.dll.dll Syntax [Flags] public enum SvgFontStyle Fields Name Description All Indicates that the font-face supplies all styles (normal, oblique and italic). Italic Specifies a font that is classified as 'italic' in the UA's font database, or, if that is not available, one labeled 'oblique'. Fonts with Italic, Cursive, or Kursiv in their names will typically be labeled 'italic' Normal Specifies a font that is classified as 'normal' in the UA's font database. Oblique Specifies a font that is classified as 'oblique' in the UA's font database. Fonts with Oblique, Slanted, or Incline in their names will typically be labeled 'oblique' in the font database. A font that is labeled 'oblique' in the UA's font database may actually have been generated by electronically slanting a normal font."
  },
  "api/Svg.SvgFontManager.html": {
    "href": "api/Svg.SvgFontManager.html",
    "title": "Class SvgFontManager | SVG.NET API",
    "keywords": "Class SvgFontManager Manages access to Svg.SvgFontManager.SystemFonts and any privately loaded fonts. When a font is requested in the render process, if the font is not found as an embedded SvgFont, the render process will SvgFontManager.FindFont method. Inheritance Object SvgFontManager Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public static class SvgFontManager Fields FontLoaderCallback Declaration public static Func<string, FontFamily> FontLoaderCallback Field Value Type Description Func < String , FontFamily > Methods FindFont(String) This method searches a dictionary of fonts (pre loaded with the system fonts). If a font can't be found and a callback has been provided - then the callback should perform any validation and return a font (or null if not found/error). Where a font can't be located it is the responsibility of the caller to perform any exception handling. Declaration public static FontFamily FindFont(string name) Parameters Type Name Description String name A String containing the FamilyName of the font. Returns Type Description FontFamily An of the loaded font or null is not located. LoadFontFamily(String) Loads a font from the given path. Declaration public static FontFamily LoadFontFamily(string path) Parameters Type Name Description String path A String containing the full path to the font file. Returns Type Description FontFamily An of the loaded font."
  },
  "api/Svg.SvgFontFaceUri.html": {
    "href": "api/Svg.SvgFontFaceUri.html",
    "title": "Class SvgFontFaceUri | SVG.NET API",
    "keywords": "Class SvgFontFaceUri Inheritance Object SvgElement SvgFontFaceUri Implements ISvgTransformable ICloneable ISvgNode Inherited Members SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.Render(ISvgRenderer) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"font-face-uri\")] public class SvgFontFaceUri : SvgElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode Properties ReferencedElement Declaration [SvgAttribute(\"href\", \"http://www.w3.org/1999/xlink\")] public virtual Uri ReferencedElement { get; set; } Property Value Type Description Uri Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgElement.DeepCopy<T>() Implements ISvgTransformable System.ICloneable ISvgNode"
  },
  "api/Svg.SvgFontFaceSrc.html": {
    "href": "api/Svg.SvgFontFaceSrc.html",
    "title": "Class SvgFontFaceSrc | SVG.NET API",
    "keywords": "Class SvgFontFaceSrc Inheritance Object SvgElement SvgFontFaceSrc Implements ISvgTransformable ICloneable ISvgNode Inherited Members SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.Render(ISvgRenderer) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.DeepCopy<T>() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"font-face-src\")] public class SvgFontFaceSrc : SvgElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() Implements ISvgTransformable System.ICloneable ISvgNode"
  },
  "api/Svg.SvgFontFace.html": {
    "href": "api/Svg.SvgFontFace.html",
    "title": "Class SvgFontFace | SVG.NET API",
    "keywords": "Class SvgFontFace Inheritance Object SvgElement SvgFontFace Implements ISvgTransformable ICloneable ISvgNode Inherited Members SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.Render(ISvgRenderer) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.DeepCopy<T>() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"font-face\")] public class SvgFontFace : SvgElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode Properties Alphabetic Declaration public float Alphabetic { get; set; } Property Value Type Description Single Ascent Declaration public float Ascent { get; set; } Property Value Type Description Single AscentHeight Declaration public float AscentHeight { get; set; } Property Value Type Description Single Descent Declaration public float Descent { get; set; } Property Value Type Description Single Panose1 Declaration public string Panose1 { get; set; } Property Value Type Description String UnitsPerEm Declaration public float UnitsPerEm { get; set; } Property Value Type Description Single XHeight Declaration public float XHeight { get; set; } Property Value Type Description Single Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() Implements ISvgTransformable System.ICloneable ISvgNode"
  },
  "api/Svg.SvgFontDefn.html": {
    "href": "api/Svg.SvgFontDefn.html",
    "title": "Class SvgFontDefn | SVG.NET API",
    "keywords": "Class SvgFontDefn Inheritance Object SvgFontDefn Implements IFontDefn IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class SvgFontDefn : IFontDefn, IDisposable Constructors SvgFontDefn(SvgFont, Single, Single) Declaration public SvgFontDefn(SvgFont font, float size, float ppi) Parameters Type Name Description SvgFont font Single size Single ppi Properties Size Declaration public float Size { get; } Property Value Type Description Single SizeInPoints Declaration public float SizeInPoints { get; } Property Value Type Description Single Methods AddStringToPath(ISvgRenderer, GraphicsPath, String, PointF) Declaration public void AddStringToPath(ISvgRenderer renderer, GraphicsPath path, string text, PointF location) Parameters Type Name Description ISvgRenderer renderer GraphicsPath path String text PointF location Ascent(ISvgRenderer) Declaration public float Ascent(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer Returns Type Description Single Dispose() Declaration public void Dispose() MeasureCharacters(ISvgRenderer, String) Declaration public IList<Drawing.RectangleF> MeasureCharacters(ISvgRenderer renderer, string text) Parameters Type Name Description ISvgRenderer renderer String text Returns Type Description IList < Drawing.RectangleF > MeasureString(ISvgRenderer, String) Declaration public Drawing.SizeF MeasureString(ISvgRenderer renderer, string text) Parameters Type Name Description ISvgRenderer renderer String text Returns Type Description Drawing.SizeF Implements IFontDefn System.IDisposable"
  },
  "api/Svg.SvgElementIdManager.html": {
    "href": "api/Svg.SvgElementIdManager.html",
    "title": "Class SvgElementIdManager | SVG.NET API",
    "keywords": "Class SvgElementIdManager Provides methods to ensure element ID's are valid and unique. Inheritance Object SvgElementIdManager Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class SvgElementIdManager Constructors SvgElementIdManager(SvgDocument) Initialises a new instance of an SvgElementIdManager . Declaration public SvgElementIdManager(SvgDocument document) Parameters Type Name Description SvgDocument document The SvgDocument containing the SvgElement s to manage. Methods Add(SvgElement) Adds the specified SvgElement for ID management. Declaration public virtual void Add(SvgElement element) Parameters Type Name Description SvgElement element The SvgElement to be managed. AddAndForceUniqueID(SvgElement, SvgElement, Boolean, Action<SvgElement, String, String>) Adds the specified SvgElement for ID management. And can auto fix the ID if it already exists or it starts with a number. Declaration public virtual bool AddAndForceUniqueID(SvgElement element, SvgElement sibling, bool autoForceUniqueID = true, Action<SvgElement, string, string> logElementOldIDNewID = null) Parameters Type Name Description SvgElement element The SvgElement to be managed. SvgElement sibling Not used. Boolean autoForceUniqueID Pass true here, if you want the ID to be fixed Action < SvgElement , String , String > logElementOldIDNewID If not null, the action is called before the id is fixed Returns Type Description Boolean true, if ID was altered EnsureValidId(String, Boolean) Ensures that the specified ID is unique within the containing SvgDocument . Declaration public string EnsureValidId(string id, bool autoForceUniqueID = false) Parameters Type Name Description String id A String containing the ID to validate. Boolean autoForceUniqueID Creates a new unique id String . Returns Type Description String Exceptions Type Condition SvgException An element with the same ID already exists within the containing SvgDocument . GetElementById(String) Retrieves the SvgElement with the specified ID. Declaration public virtual SvgElement GetElementById(string id) Parameters Type Name Description String id A String containing the ID of the element to find. Returns Type Description SvgElement An SvgElement of one exists with the specified ID; otherwise false. GetElementById(Uri) Declaration public virtual SvgElement GetElementById(Uri uri) Parameters Type Name Description Uri uri Returns Type Description SvgElement OnAdded(SvgElement) Declaration protected void OnAdded(SvgElement element) Parameters Type Name Description SvgElement element OnRemoved(SvgElement) Declaration protected void OnRemoved(SvgElement element) Parameters Type Name Description SvgElement element Remove(SvgElement) Removed the specified SvgElement from ID management. Declaration public virtual void Remove(SvgElement element) Parameters Type Name Description SvgElement element The SvgElement to be removed from ID management. Events ElementAdded Declaration public event EventHandler<SvgElementEventArgs> ElementAdded Event Type Type Description EventHandler < SvgElementEventArgs > ElementRemoved Declaration public event EventHandler<SvgElementEventArgs> ElementRemoved Event Type Type Description EventHandler < SvgElementEventArgs >"
  },
  "api/Svg.SvgElementEventArgs.html": {
    "href": "api/Svg.SvgElementEventArgs.html",
    "title": "Class SvgElementEventArgs | SVG.NET API",
    "keywords": "Class SvgElementEventArgs Inheritance Object EventArgs SvgElementEventArgs Inherited Members EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class SvgElementEventArgs : EventArgs Fields Element Declaration public SvgElement Element Field Value Type Description SvgElement"
  },
  "api/Svg.SvgElementCollection.html": {
    "href": "api/Svg.SvgElementCollection.html",
    "title": "Class SvgElementCollection | SVG.NET API",
    "keywords": "Class SvgElementCollection Represents a collection of SvgElement s. Inheritance Object SvgElementCollection Implements IList < SvgElement > ICollection < SvgElement > IEnumerable < SvgElement > IEnumerable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public sealed class SvgElementCollection : IList<SvgElement>, ICollection<SvgElement>, IEnumerable<SvgElement>, IEnumerable Properties Count Declaration public int Count { get; } Property Value Type Description Int32 IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description Boolean Item[Int32] Declaration public SvgElement this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description SvgElement Methods Add(SvgElement) Declaration public void Add(SvgElement item) Parameters Type Name Description SvgElement item AddAndForceUniqueID(SvgElement, Boolean, Boolean, Action<SvgElement, String, String>) Declaration public void AddAndForceUniqueID(SvgElement item, bool autoForceUniqueID = true, bool autoFixChildrenID = true, Action<SvgElement, string, string> logElementOldIDNewID = null) Parameters Type Name Description SvgElement item Boolean autoForceUniqueID Boolean autoFixChildrenID Action < SvgElement , String , String > logElementOldIDNewID Clear() Declaration public void Clear() Contains(SvgElement) Declaration public bool Contains(SvgElement item) Parameters Type Name Description SvgElement item Returns Type Description Boolean CopyTo(SvgElement[], Int32) Declaration public void CopyTo(SvgElement[] array, int arrayIndex) Parameters Type Name Description SvgElement [] array Int32 arrayIndex FindSvgElementOf<T>() expensive recursive search for first node of type T Declaration public T FindSvgElementOf<T>() where T : SvgElement Returns Type Description T Type Parameters Name Description T FindSvgElementsOf<T>() expensive recursive search for nodes of type T Declaration public IEnumerable<T> FindSvgElementsOf<T>() where T : SvgElement Returns Type Description IEnumerable <T> Type Parameters Name Description T GetEnumerator() Declaration public IEnumerator<SvgElement> GetEnumerator() Returns Type Description IEnumerator < SvgElement > GetSvgElementOf<T>() Declaration public T GetSvgElementOf<T>() where T : SvgElement Returns Type Description T Type Parameters Name Description T IndexOf(SvgElement) Returns the index of the specified SvgElement in the collection. Declaration public int IndexOf(SvgElement item) Parameters Type Name Description SvgElement item The SvgElement to search for. Returns Type Description Int32 The index of the element if it is present; otherwise -1. Insert(Int32, SvgElement) Inserts the given SvgElement to the collection at the specified index. Declaration public void Insert(int index, SvgElement item) Parameters Type Name Description Int32 index The index that the item should be added at. SvgElement item The SvgElement to be added. InsertAndForceUniqueID(Int32, SvgElement, Boolean, Boolean, Action<SvgElement, String, String>) Declaration public void InsertAndForceUniqueID(int index, SvgElement item, bool autoForceUniqueID = true, bool autoFixChildrenID = true, Action<SvgElement, string, string> logElementOldIDNewID = null) Parameters Type Name Description Int32 index SvgElement item Boolean autoForceUniqueID Boolean autoFixChildrenID Action < SvgElement , String , String > logElementOldIDNewID Remove(SvgElement) Declaration public bool Remove(SvgElement item) Parameters Type Name Description SvgElement item Returns Type Description Boolean RemoveAt(Int32) Declaration public void RemoveAt(int index) Parameters Type Name Description Int32 index Explicit Interface Implementations IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/Svg.SvgElementAttribute.html": {
    "href": "api/Svg.SvgElementAttribute.html",
    "title": "Class SvgElementAttribute | SVG.NET API",
    "keywords": "Class SvgElementAttribute Specifies the SVG name of an SvgElement . Inheritance Object Attribute SvgElementAttribute Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [AttributeUsage(AttributeTargets.Class)] public sealed class SvgElementAttribute : Attribute, _Attribute Constructors SvgElementAttribute(String) Initializes a new instance of the SvgElementAttribute class with the specified element name; Declaration public SvgElementAttribute(string elementName) Parameters Type Name Description String elementName The name of the SVG element. Properties ElementName Gets the name of the SVG element. Declaration public string ElementName { get; } Property Value Type Description String Implements System.Runtime.InteropServices._Attribute"
  },
  "api/Svg.SvgElement.html": {
    "href": "api/Svg.SvgElement.html",
    "title": "Class SvgElement | SVG.NET API",
    "keywords": "Class SvgElement The base class of which all SVG elements are derived from. Inheritance Object SvgElement SvgFilter SvgFilterPrimitive SvgMergeNode NonSvgElement SvgClipPath SvgDefinitionList SvgDescription SvgDocumentMetadata SvgFont SvgFontFace SvgFontFaceSrc SvgFontFaceUri SvgFragment SvgGradientStop SvgKern SvgMask SvgPaintServer SvgScript SvgTitle SvgUnknownElement SvgVisualElement Implements ISvgTransformable ICloneable ISvgNode Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public abstract class SvgElement : ISvgElement, ISvgTransformable, ICloneable, ISvgNode Constructors SvgElement() Initializes a new instance of the SvgElement class. Declaration public SvgElement() Fields AutoPublishEvents Declaration public bool AutoPublishEvents Field Value Type Description Boolean PrivateFonts Declaration public static Drawing.Text.PrivateFontCollection PrivateFonts Field Value Type Description Drawing.Text.PrivateFontCollection Properties Attributes Gets a collection of element attributes. Declaration protected virtual SvgAttributeCollection Attributes { get; } Property Value Type Description SvgAttributeCollection BaselineShift Specifies dominant-baseline positioning of text. Declaration public virtual string BaselineShift { get; set; } Property Value Type Description String Children Gets a collection of all child SvgElement objects. Declaration public virtual SvgElementCollection Children { get; } Property Value Type Description SvgElementCollection Color Gets or sets the color SvgPaintServer of this element which drives the currentColor property. Declaration public virtual SvgPaintServer Color { get; set; } Property Value Type Description SvgPaintServer Content Declaration public virtual string Content { get; set; } Property Value Type Description String CustomAttributes Gets a collection of custom attributes Declaration public SvgCustomAttributeCollection CustomAttributes { get; } Property Value Type Description SvgCustomAttributeCollection ElementName Gets the name of the element. Declaration protected string ElementName { get; } Property Value Type Description String Events Gets an of all events belonging to the element. Declaration protected virtual EventHandlerList Events { get; } Property Value Type Description EventHandlerList Fill Gets or sets the fill SvgPaintServer of this element. Declaration public virtual SvgPaintServer Fill { get; set; } Property Value Type Description SvgPaintServer FillOpacity Gets or sets the opacity of this element's Fill . Declaration public virtual float FillOpacity { get; set; } Property Value Type Description Single FillRule Declaration public virtual SvgFillRule FillRule { get; set; } Property Value Type Description SvgFillRule Font Set all font information. Declaration public virtual string Font { get; set; } Property Value Type Description String FontFamily Indicates which font family is to be used to render the text. Declaration public virtual string FontFamily { get; set; } Property Value Type Description String FontSize Refers to the size of the font from baseline to baseline when multiple lines of text are set solid in a multiline layout environment. Declaration public virtual SvgUnit FontSize { get; set; } Property Value Type Description SvgUnit FontStyle Refers to the style of the font. Declaration public virtual SvgFontStyle FontStyle { get; set; } Property Value Type Description SvgFontStyle FontVariant Refers to the varient of the font. Declaration public virtual SvgFontVariant FontVariant { get; set; } Property Value Type Description SvgFontVariant FontWeight Refers to the boldness of the font. Declaration public virtual SvgFontWeight FontWeight { get; set; } Property Value Type Description SvgFontWeight ID Gets or sets the ID of the element. Declaration public string ID { get; set; } Property Value Type Description String Exceptions Type Condition SvgException The ID is already used within the SvgDocument . Inherited Declaration protected bool Inherited { get; set; } Property Value Type Description Boolean IsPathDirty Gets or sets a value indicating whether this element's 'Path' is dirty. Declaration protected virtual bool IsPathDirty { get; set; } Property Value Type Description Boolean true if the path is dirty; otherwise, false . Nodes Declaration public IList<ISvgNode> Nodes { get; } Property Value Type Description IList < ISvgNode > Opacity Gets or sets the opacity of the element. 1.0 is fully opaque; 0.0 is transparent. Declaration public virtual float Opacity { get; set; } Property Value Type Description Single OwnerDocument Gets the owner SvgDocument . Declaration public virtual SvgDocument OwnerDocument { get; } Property Value Type Description SvgDocument Parent Gets the parent SvgElement . Declaration public virtual SvgElement Parent { get; } Property Value Type Description SvgElement An SvgElement if one exists; otherwise null. Parents Declaration public IEnumerable<SvgElement> Parents { get; } Property Value Type Description IEnumerable < SvgElement > ParentsAndSelf Declaration public IEnumerable<SvgElement> ParentsAndSelf { get; } Property Value Type Description IEnumerable < SvgElement > ShapeRendering Refers to the AnitAlias rendering of shapes. Declaration public virtual SvgShapeRendering ShapeRendering { get; set; } Property Value Type Description SvgShapeRendering SpaceHandling Gets or sets the space handling. Declaration [SvgAttribute(\"space\", \"http://www.w3.org/XML/1998/namespace\")] public virtual XmlSpaceHandling SpaceHandling { get; set; } Property Value Type Description XmlSpaceHandling The space handling. StopColor Gets or sets the colour of the gradient stop. Declaration public virtual SvgPaintServer StopColor { get; set; } Property Value Type Description SvgPaintServer Remarks Apparently this can be set on non-sensical elements. Don't ask; just check the tests. Stroke Gets or sets the SvgPaintServer to be used when rendering a stroke around this element. Declaration public virtual SvgPaintServer Stroke { get; set; } Property Value Type Description SvgPaintServer StrokeDashArray Declaration public virtual SvgUnitCollection StrokeDashArray { get; set; } Property Value Type Description SvgUnitCollection StrokeDashOffset Declaration public virtual SvgUnit StrokeDashOffset { get; set; } Property Value Type Description SvgUnit StrokeLineCap Declaration public virtual SvgStrokeLineCap StrokeLineCap { get; set; } Property Value Type Description SvgStrokeLineCap StrokeLineJoin Declaration public virtual SvgStrokeLineJoin StrokeLineJoin { get; set; } Property Value Type Description SvgStrokeLineJoin StrokeMiterLimit Declaration public virtual float StrokeMiterLimit { get; set; } Property Value Type Description Single StrokeOpacity Gets or sets the opacity of the stroke, if the Stroke property has been specified. 1.0 is fully opaque; 0.0 is transparent. Declaration public virtual float StrokeOpacity { get; set; } Property Value Type Description Single StrokeWidth Gets or sets the width of the stroke (if the Stroke property has a valid value specified. Declaration public virtual SvgUnit StrokeWidth { get; set; } Property Value Type Description SvgUnit TextAnchor Gets or sets the text anchor. Declaration public virtual SvgTextAnchor TextAnchor { get; set; } Property Value Type Description SvgTextAnchor TextDecoration Refers to the boldness of the font. Declaration public virtual SvgTextDecoration TextDecoration { get; set; } Property Value Type Description SvgTextDecoration TextTransformation Refers to the text transformation. Declaration public virtual SvgTextTransformation TextTransformation { get; set; } Property Value Type Description SvgTextTransformation Transforms Gets or sets the element transforms. Declaration public SvgTransformCollection Transforms { get; set; } Property Value Type Description SvgTransformCollection The transforms. Methods AddElement(SvgElement, Int32) Called by the underlying SvgElement when an element has been added to the Children collection. Declaration protected virtual void AddElement(SvgElement child, int index) Parameters Type Name Description SvgElement child The SvgElement that has been added. Int32 index An Int32 representing the index where the element was added to the collection. AddPaths(SvgElement, GraphicsPath) Recursive method to add up the paths of all children Declaration protected void AddPaths(SvgElement elem, GraphicsPath path) Parameters Type Name Description SvgElement elem GraphicsPath path AddStyle(String, String, Int32) Add style. Declaration public void AddStyle(string name, string value, int specificity) Parameters Type Name Description String name The style name. String value The style value. Int32 specificity The specificity value. Clone() Creates a new object that is a copy of the current instance. Declaration public virtual object Clone() Returns Type Description Object A new object that is a copy of this instance. ContainsAttribute(String) Declaration public bool ContainsAttribute(string name) Parameters Type Name Description String name Returns Type Description Boolean DeepCopy() Declaration public abstract SvgElement DeepCopy() Returns Type Description SvgElement DeepCopy<T>() Declaration public virtual SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Descendants() Declaration public IEnumerable<SvgElement> Descendants() Returns Type Description IEnumerable < SvgElement > FixOpacityValue(Single) Declaration protected static float FixOpacityValue(float value) Parameters Type Name Description Single value Returns Type Description Single FlushStyles(Boolean) Flush styles. Declaration public void FlushStyles(bool children = false) Parameters Type Name Description Boolean children If true, flush styles to the children. GetAttribute<TAttributeType>(String, Boolean, TAttributeType) Declaration protected TAttributeType GetAttribute<TAttributeType>(string attributeName, bool inherit, TAttributeType defaultValue = null) Parameters Type Name Description String attributeName Boolean inherit TAttributeType defaultValue Returns Type Description TAttributeType Type Parameters Name Description TAttributeType GetPaths(SvgElement, ISvgRenderer) Recursive method to add up the paths of all children Declaration protected GraphicsPath GetPaths(SvgElement elem, ISvgRenderer renderer) Parameters Type Name Description SvgElement elem ISvgRenderer renderer Returns Type Description GraphicsPath HasChildren() Gets a value to determine whether the element has children. Declaration public virtual bool HasChildren() Returns Type Description Boolean InitialiseFromXML(XmlTextReader, SvgDocument) Declaration public virtual void InitialiseFromXML(XmlTextReader reader, SvgDocument document) Parameters Type Name Description XmlTextReader reader SvgDocument document InvalidateChildPaths() Force recreation of the paths for the element and it's children. Declaration public void InvalidateChildPaths() OnAttributeChanged(AttributeEventArgs) Declaration protected void OnAttributeChanged(AttributeEventArgs args) Parameters Type Name Description AttributeEventArgs args OnContentChanged(ContentEventArgs) Declaration protected void OnContentChanged(ContentEventArgs args) Parameters Type Name Description ContentEventArgs args OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) Declaration protected void OnMouseScroll(int scroll, bool ctrlKey, bool shiftKey, bool altKey, string sessionID) Parameters Type Name Description Int32 scroll Boolean ctrlKey Boolean shiftKey Boolean altKey String sessionID PopTransforms(ISvgRenderer) Removes any previously applied transforms from the specified ISvgRenderer . Declaration protected virtual void PopTransforms(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The ISvgRenderer that should have transforms removed. PushTransforms(ISvgRenderer) Applies the required transforms to ISvgRenderer . Declaration protected virtual bool PushTransforms(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The ISvgRenderer to be transformed. Returns Type Description Boolean RaiseMouseClick(Object, MouseArg) Declaration protected void RaiseMouseClick(object sender, MouseArg e) Parameters Type Name Description Object sender MouseArg e RaiseMouseDown(Object, MouseArg) Declaration protected void RaiseMouseDown(object sender, MouseArg e) Parameters Type Name Description Object sender MouseArg e RaiseMouseMove(Object, MouseArg) Declaration protected void RaiseMouseMove(object sender, MouseArg e) Parameters Type Name Description Object sender MouseArg e RaiseMouseOut(Object, MouseArg) Declaration protected void RaiseMouseOut(object sender, MouseArg args) Parameters Type Name Description Object sender MouseArg args RaiseMouseOver(Object, MouseArg) Declaration protected void RaiseMouseOver(object sender, MouseArg args) Parameters Type Name Description Object sender MouseArg args RaiseMouseScroll(Object, MouseScrollArg) Declaration protected void RaiseMouseScroll(object sender, MouseScrollArg e) Parameters Type Name Description Object sender MouseScrollArg e RaiseMouseUp(Object, MouseArg) Declaration protected void RaiseMouseUp(object sender, MouseArg e) Parameters Type Name Description Object sender MouseArg e RemoveElement(SvgElement) Called by the underlying SvgElement when an element has been removed from the Children collection. Declaration protected virtual void RemoveElement(SvgElement child) Parameters Type Name Description SvgElement child The SvgElement that has been removed. Render(ISvgRenderer) Renders the SvgElement and contents to the specified ISvgRenderer object. Declaration protected virtual void Render(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The ISvgRenderer object to render to. RenderChildren(ISvgRenderer) Renders the children of this SvgElement . Declaration protected virtual void RenderChildren(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The ISvgRenderer to render the child SvgElement s to. RenderElement(ISvgRenderer) Renders this element to the ISvgRenderer . Declaration public void RenderElement(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The ISvgRenderer that the element should use to render itself. SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) Declaration public void SetAndForceUniqueID(string value, bool autoForceUniqueID = true, Action<SvgElement, string, string> logElementOldIDNewID = null) Parameters Type Name Description String value Boolean autoForceUniqueID Action < SvgElement , String , String > logElementOldIDNewID ShouldWriteElement() Derrived classes may decide that the element should not be written. For example, the text element shouldn't be written if it's empty. Declaration public virtual bool ShouldWriteElement() Returns Type Description Boolean TransformedBounds(RectangleF) Transforms the given rectangle with the set transformation, if any. Can be applied to bounds calculated without considering the element transformation. Declaration protected RectangleF TransformedBounds(RectangleF bounds) Parameters Type Name Description RectangleF bounds The rectangle to be transformed. Returns Type Description RectangleF The transformed rectangle, or the original rectangle if no transformation exists. TryGetAttribute(String, out String) Declaration public bool TryGetAttribute(string name, out string value) Parameters Type Name Description String name String value Returns Type Description Boolean ValidateFontFamily(String, SvgDocument) Declaration public static object ValidateFontFamily(string fontFamilyList, SvgDocument doc) Parameters Type Name Description String fontFamilyList SvgDocument doc Returns Type Description Object Write(XmlTextWriter) Declaration public virtual void Write(XmlTextWriter writer) Parameters Type Name Description XmlTextWriter writer WriteAttributes(XmlTextWriter) Declaration protected virtual void WriteAttributes(XmlTextWriter writer) Parameters Type Name Description XmlTextWriter writer WriteChildren(XmlTextWriter) Declaration protected virtual void WriteChildren(XmlTextWriter writer) Parameters Type Name Description XmlTextWriter writer WriteEndElement(XmlTextWriter) Declaration protected virtual void WriteEndElement(XmlTextWriter writer) Parameters Type Name Description XmlTextWriter writer WriteStartElement(XmlTextWriter) Declaration protected virtual void WriteStartElement(XmlTextWriter writer) Parameters Type Name Description XmlTextWriter writer Events AttributeChanged Fired when an Atrribute of this Element has changed Declaration public event EventHandler<AttributeEventArgs> AttributeChanged Event Type Type Description EventHandler < AttributeEventArgs > ChildAdded Fired when an Element was added to the children of this Element Declaration public event EventHandler<ChildAddedEventArgs> ChildAdded Event Type Type Description EventHandler < ChildAddedEventArgs > Click Declaration public event EventHandler<MouseArg> Click Event Type Type Description EventHandler < MouseArg > ContentChanged Fired when an Atrribute of this Element has changed Declaration public event EventHandler<ContentEventArgs> ContentChanged Event Type Type Description EventHandler < ContentEventArgs > Load Occurs when the element is loaded. Declaration public event EventHandler Load Event Type Type Description EventHandler MouseDown Declaration public event EventHandler<MouseArg> MouseDown Event Type Type Description EventHandler < MouseArg > MouseMove Declaration public event EventHandler<MouseArg> MouseMove Event Type Type Description EventHandler < MouseArg > MouseOut Declaration public event EventHandler<MouseArg> MouseOut Event Type Type Description EventHandler < MouseArg > MouseOver Declaration public event EventHandler<MouseArg> MouseOver Event Type Type Description EventHandler < MouseArg > MouseScroll Declaration public event EventHandler<MouseScrollArg> MouseScroll Event Type Type Description EventHandler < MouseScrollArg > MouseUp Declaration public event EventHandler<MouseArg> MouseUp Event Type Type Description EventHandler < MouseArg > Explicit Interface Implementations ISvgNode.DeepCopy() Declaration ISvgNode ISvgNode.DeepCopy() Returns Type Description ISvgNode ISvgTransformable.PopTransforms(ISvgRenderer) Removes any previously applied transforms from the specified ISvgRenderer . Declaration void ISvgTransformable.PopTransforms(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The ISvgRenderer that should have transforms removed. ISvgTransformable.PushTransforms(ISvgRenderer) Applies the required transforms to ISvgRenderer . Declaration void ISvgTransformable.PushTransforms(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The ISvgRenderer to be transformed. Implements ISvgTransformable System.ICloneable ISvgNode"
  },
  "api/Svg.SvgElement.PropertyAttributeTuple.html": {
    "href": "api/Svg.SvgElement.PropertyAttributeTuple.html",
    "title": "Class SvgElement.PropertyAttributeTuple | SVG.NET API",
    "keywords": "Class SvgElement.PropertyAttributeTuple Inheritance Object SvgElement.PropertyAttributeTuple Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax protected class PropertyAttributeTuple Fields Attribute Declaration public SvgAttributeAttribute Attribute Field Value Type Description SvgAttributeAttribute Property Declaration public PropertyDescriptor Property Field Value Type Description PropertyDescriptor"
  },
  "api/Fizzler.HumanReadableSelectorGenerator.html": {
    "href": "api/Fizzler.HumanReadableSelectorGenerator.html",
    "title": "Class HumanReadableSelectorGenerator | SVG.NET API",
    "keywords": "Class HumanReadableSelectorGenerator An ISelectorGenerator implementation that generates human-readable description of the selector. Inheritance Object HumanReadableSelectorGenerator Implements ISelectorGenerator Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Fizzler Assembly : cs.temp.dll.dll Syntax public class HumanReadableSelectorGenerator : ISelectorGenerator Properties Text Gets the generated human-readable description text. Declaration public string Text { get; } Property Value Type Description String Methods Add(String) Adds to the generated human-readable text. Declaration protected void Add(string selector) Parameters Type Name Description String selector Adjacent() Generates human-readable text of this combinator. Declaration public void Adjacent() AttributeDashMatch(NamespacePrefix, String, String) Generates human-readable text of this attribute selector. Declaration public void AttributeDashMatch(NamespacePrefix prefix, string name, string value) Parameters Type Name Description NamespacePrefix prefix String name String value AttributeExact(NamespacePrefix, String, String) Generates human-readable text of this attribute selector. Declaration public void AttributeExact(NamespacePrefix prefix, string name, string value) Parameters Type Name Description NamespacePrefix prefix String name String value AttributeExists(NamespacePrefix, String) Generates human-readable text of this attribute selector. Declaration public void AttributeExists(NamespacePrefix prefix, string name) Parameters Type Name Description NamespacePrefix prefix String name AttributeIncludes(NamespacePrefix, String, String) Generates human-readable text of this attribute selector. Declaration public void AttributeIncludes(NamespacePrefix prefix, string name, string value) Parameters Type Name Description NamespacePrefix prefix String name String value AttributePrefixMatch(NamespacePrefix, String, String) Generates human-readable text of this attribute selector. Declaration public void AttributePrefixMatch(NamespacePrefix prefix, string name, string value) Parameters Type Name Description NamespacePrefix prefix String name String value AttributeSubstring(NamespacePrefix, String, String) Generates human-readable text of this attribute selector. Declaration public void AttributeSubstring(NamespacePrefix prefix, string name, string value) Parameters Type Name Description NamespacePrefix prefix String name String value AttributeSuffixMatch(NamespacePrefix, String, String) Generates human-readable text of this attribute selector. Declaration public void AttributeSuffixMatch(NamespacePrefix prefix, string name, string value) Parameters Type Name Description NamespacePrefix prefix String name String value Child() Generates human-readable text of this combinator. Declaration public void Child() Descendant() Generates human-readable text of this combinator. Declaration public void Descendant() Empty() Generates human-readable text of this pseudo-class selector. Declaration public void Empty() FirstChild() Generates human-readable text of this pseudo-class selector. Declaration public void FirstChild() GeneralSibling() Generates a combinator , which separates two sequences of simple selectors. The elements represented by the two sequences share the same parent in the document tree and the element represented by the first sequence precedes (not necessarily immediately) the element represented by the second one. Declaration public void GeneralSibling() Id(String) Generates human-readable text of this ID selector. Declaration public void Id(string id) Parameters Type Name Description String id LastChild() Generates human-readable text of this pseudo-class selector. Declaration public void LastChild() NthChild(Int32, Int32) Generates human-readable text of this pseudo-class selector. Declaration public void NthChild(int a, int b) Parameters Type Name Description Int32 a Int32 b NthLastChild(Int32, Int32) Generates human-readable text of this combinator. Declaration public void NthLastChild(int a, int b) Parameters Type Name Description Int32 a Int32 b OnClose() Concludes the text. Declaration public virtual void OnClose() OnInit() Initializes the text. Declaration public virtual void OnInit() OnlyChild() Generates human-readable text of this pseudo-class selector. Declaration public void OnlyChild() OnSelector() Generates human-readable for a selector in a group. Declaration public virtual void OnSelector() Type(NamespacePrefix, String) Generates human-readable text of this type selector. Declaration public void Type(NamespacePrefix prefix, string type) Parameters Type Name Description NamespacePrefix prefix String type Universal(NamespacePrefix) Generates human-readable text of this universal selector. Declaration public void Universal(NamespacePrefix prefix) Parameters Type Name Description NamespacePrefix prefix Explicit Interface Implementations ISelectorGenerator.Class(String) Generates human-readable text of this class selector. Declaration void ISelectorGenerator.Class(string clazz) Parameters Type Name Description String clazz Implements ISelectorGenerator"
  },
  "api/ExCSS.Parser.html": {
    "href": "api/ExCSS.Parser.html",
    "title": "Class Parser | SVG.NET API",
    "keywords": "Class Parser Inheritance Object Parser Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : ExCSS Assembly : cs.temp.dll.dll Syntax public class Parser Methods Parse(String, StylesheetContext) Declaration public void Parse(string value, StylesheetContext context) Parameters Type Name Description String value StylesheetContext context"
  },
  "api/Svg.Text.html": {
    "href": "api/Svg.Text.html",
    "title": "Namespace Svg.Text | SVG.NET API",
    "keywords": "Namespace Svg.Text Classes FontFamily http://stackoverflow.com/questions/3633000/net-enumerate-winforms-font-styles Structs FontFamily.TT_NAME_RECORD FontFamily.TT_NAME_TABLE_HEADER FontFamily.TT_OFFSET_TABLE FontFamily.TT_TABLE_DIRECTORY"
  },
  "api/Svg.Text.FontFamily.html": {
    "href": "api/Svg.Text.FontFamily.html",
    "title": "Class FontFamily | SVG.NET API",
    "keywords": "Class FontFamily http://stackoverflow.com/questions/3633000/net-enumerate-winforms-font-styles Inheritance Object FontFamily Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.Text Assembly : cs.temp.dll.dll Syntax public class FontFamily Properties FontName Declaration public string FontName { get; set; } Property Value Type Description String FontPath Declaration public string FontPath { get; set; } Property Value Type Description String FontSubFamily Declaration public string FontSubFamily { get; set; } Property Value Type Description String Methods FromPath(String) Declaration public static FontFamily FromPath(string fontFilePath) Parameters Type Name Description String fontFilePath Returns Type Description FontFamily"
  },
  "api/Svg.Text.FontFamily.TT_TABLE_DIRECTORY.html": {
    "href": "api/Svg.Text.FontFamily.TT_TABLE_DIRECTORY.html",
    "title": "Struct FontFamily.TT_TABLE_DIRECTORY | SVG.NET API",
    "keywords": "Struct FontFamily.TT_TABLE_DIRECTORY Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : Svg.Text Assembly : cs.temp.dll.dll Syntax [CLSCompliant(false)] public struct TT_TABLE_DIRECTORY Fields szTag Declaration public byte[] szTag Field Value Type Description Byte [] uCheckSum Declaration public uint uCheckSum Field Value Type Description UInt32 uLength Declaration public uint uLength Field Value Type Description UInt32 uOffset Declaration public uint uOffset Field Value Type Description UInt32 Methods Initialize() Declaration public void Initialize()"
  },
  "api/Svg.Text.FontFamily.TT_OFFSET_TABLE.html": {
    "href": "api/Svg.Text.FontFamily.TT_OFFSET_TABLE.html",
    "title": "Struct FontFamily.TT_OFFSET_TABLE | SVG.NET API",
    "keywords": "Struct FontFamily.TT_OFFSET_TABLE Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : Svg.Text Assembly : cs.temp.dll.dll Syntax [CLSCompliant(false)] public struct TT_OFFSET_TABLE Fields uEntrySelector Declaration public ushort uEntrySelector Field Value Type Description UInt16 uMajorVersion Declaration public ushort uMajorVersion Field Value Type Description UInt16 uMinorVersion Declaration public ushort uMinorVersion Field Value Type Description UInt16 uNumOfTables Declaration public ushort uNumOfTables Field Value Type Description UInt16 uRangeShift Declaration public ushort uRangeShift Field Value Type Description UInt16 uSearchRange Declaration public ushort uSearchRange Field Value Type Description UInt16"
  },
  "api/Svg.Text.FontFamily.TT_NAME_TABLE_HEADER.html": {
    "href": "api/Svg.Text.FontFamily.TT_NAME_TABLE_HEADER.html",
    "title": "Struct FontFamily.TT_NAME_TABLE_HEADER | SVG.NET API",
    "keywords": "Struct FontFamily.TT_NAME_TABLE_HEADER Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : Svg.Text Assembly : cs.temp.dll.dll Syntax [CLSCompliant(false)] public struct TT_NAME_TABLE_HEADER Fields uFSelector Declaration public ushort uFSelector Field Value Type Description UInt16 uNRCount Declaration public ushort uNRCount Field Value Type Description UInt16 uStorageOffset Declaration public ushort uStorageOffset Field Value Type Description UInt16"
  },
  "api/Svg.Text.FontFamily.TT_NAME_RECORD.html": {
    "href": "api/Svg.Text.FontFamily.TT_NAME_RECORD.html",
    "title": "Struct FontFamily.TT_NAME_RECORD | SVG.NET API",
    "keywords": "Struct FontFamily.TT_NAME_RECORD Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : Svg.Text Assembly : cs.temp.dll.dll Syntax [CLSCompliant(false)] public struct TT_NAME_RECORD Fields uEncodingID Declaration public ushort uEncodingID Field Value Type Description UInt16 uLanguageID Declaration public ushort uLanguageID Field Value Type Description UInt16 uNameID Declaration public ushort uNameID Field Value Type Description UInt16 uPlatformID Declaration public ushort uPlatformID Field Value Type Description UInt16 uStringLength Declaration public ushort uStringLength Field Value Type Description UInt16 uStringOffset Declaration public ushort uStringOffset Field Value Type Description UInt16"
  },
  "api/Svg.SvgVisualElement.html": {
    "href": "api/Svg.SvgVisualElement.html",
    "title": "Class SvgVisualElement | SVG.NET API",
    "keywords": "Class SvgVisualElement The class that all SVG elements should derive from when they are to be rendered. Inheritance Object SvgElement SvgVisualElement SvgSymbol SvgForeignObject SvgImage SvgPathBasedElement SvgSwitch SvgTextBase SvgUse Implements ISvgTransformable ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable Inherited Members SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.DeepCopy() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public abstract class SvgVisualElement : SvgElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode, ISvgBoundable, ISvgStylable, ISvgClipable Constructors SvgVisualElement() Initializes a new instance of the SvgVisualElement class. Declaration public SvgVisualElement() Properties Bounds Gets the bounds of the element. Declaration public abstract RectangleF Bounds { get; } Property Value Type Description RectangleF The bounds. Clip Gets the associated SvgClipPath if one has been specified. Declaration public virtual string Clip { get; set; } Property Value Type Description String ClipPath Gets the associated SvgClipPath if one has been specified. Declaration public virtual Uri ClipPath { get; set; } Property Value Type Description Uri ClipRule Gets or sets the algorithm which is to be used to determine the clipping region. Declaration public SvgClipRule ClipRule { get; set; } Property Value Type Description SvgClipRule Display Gets or sets a value to determine whether the element will be rendered. Needed to support SVG attribute display=\"none\" Declaration public virtual string Display { get; set; } Property Value Type Description String Displayable Declaration protected virtual bool Displayable { get; } Property Value Type Description Boolean EnableBackground Gets or sets the fill SvgPaintServer of this element. Declaration public virtual string EnableBackground { get; set; } Property Value Type Description String Filter Gets the associated if one has been specified. Declaration public virtual Uri Filter { get; set; } Property Value Type Description Uri Renderable Declaration protected virtual bool Renderable { get; } Property Value Type Description Boolean RequiresSmoothRendering Gets or sets a value to determine if anti-aliasing should occur when the element is being rendered. Declaration protected virtual bool RequiresSmoothRendering { get; } Property Value Type Description Boolean Visible Gets or sets a value to determine whether the element will be rendered. Declaration public virtual bool Visible { get; set; } Property Value Type Description Boolean Methods DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgElement.DeepCopy<T>() Path(ISvgRenderer) Gets the for this element. Declaration public abstract GraphicsPath Path(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer Returns Type Description GraphicsPath Render(ISvgRenderer) Renders the SvgElement and contents to the specified object. Declaration protected override void Render(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The ISvgRenderer object to render to. Overrides SvgElement.Render(ISvgRenderer) RenderFill(ISvgRenderer) Renders the fill of the SvgVisualElement to the specified ISvgRenderer Declaration protected virtual void RenderFill(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The ISvgRenderer object to render to. RenderFillAndStroke(ISvgRenderer) Declaration protected virtual void RenderFillAndStroke(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer RenderStroke(ISvgRenderer) Renders the stroke of the SvgVisualElement to the specified ISvgRenderer Declaration protected virtual bool RenderStroke(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The ISvgRenderer object to render to. Returns Type Description Boolean ResetClip(ISvgRenderer) Resets the clipping region of the specified ISvgRenderer back to where it was before the SetClip(ISvgRenderer) method was called. Declaration protected virtual void ResetClip(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The ISvgRenderer to have its clipping region reset. SetClip(ISvgRenderer) Sets the clipping region of the specified ISvgRenderer . Declaration protected virtual void SetClip(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The ISvgRenderer to have its clipping region set. Explicit Interface Implementations ISvgBoundable.Location Declaration PointF ISvgBoundable.Location { get; } Returns Type Description PointF ISvgBoundable.Size Declaration SizeF ISvgBoundable.Size { get; } Returns Type Description SizeF ISvgClipable.ResetClip(ISvgRenderer) Resets the clipping region of the specified ISvgRenderer back to where it was before the SetClip(ISvgRenderer) method was called. Declaration void ISvgClipable.ResetClip(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The ISvgRenderer to have its clipping region reset. ISvgClipable.SetClip(ISvgRenderer) Sets the clipping region of the specified ISvgRenderer . Declaration void ISvgClipable.SetClip(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The ISvgRenderer to have its clipping region set. Implements ISvgTransformable System.ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable"
  },
  "api/Svg.SvgVisibility.html": {
    "href": "api/Svg.SvgVisibility.html",
    "title": "Enum SvgVisibility | SVG.NET API",
    "keywords": "Enum SvgVisibility Namespace : Svg Assembly : cs.temp.dll.dll Syntax public enum SvgVisibility Fields Name Description Hidden Inherit Visible"
  },
  "api/Svg.SvgViewBox.html": {
    "href": "api/Svg.SvgViewBox.html",
    "title": "Struct SvgViewBox | SVG.NET API",
    "keywords": "Struct SvgViewBox It is often desirable to specify that a given set of graphics stretch to fit a particular container element. The viewBox attribute provides this capability. Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public struct SvgViewBox Constructors SvgViewBox(Single, Single, Single, Single) Initializes a new instance of the SvgViewBox struct. Declaration public SvgViewBox(float minX, float minY, float width, float height) Parameters Type Name Description Single minX The min X. Single minY The min Y. Single width The width. Single height The height. Fields Empty Declaration public static readonly SvgViewBox Empty Field Value Type Description SvgViewBox Properties Height Gets or sets the height of the viewport. Declaration public float Height { get; set; } Property Value Type Description Single MinX Gets or sets the position where the viewport starts horizontally. Declaration public float MinX { get; set; } Property Value Type Description Single MinY Gets or sets the position where the viewport starts vertically. Declaration public float MinY { get; set; } Property Value Type Description Single Width Gets or sets the width of the viewport. Declaration public float Width { get; set; } Property Value Type Description Single Methods AddViewBoxTransform(SvgAspectRatio, ISvgRenderer, SvgFragment) Declaration public void AddViewBoxTransform(SvgAspectRatio aspectRatio, ISvgRenderer renderer, SvgFragment frag) Parameters Type Name Description SvgAspectRatio aspectRatio ISvgRenderer renderer SvgFragment frag Equals(SvgViewBox) Declaration public bool Equals(SvgViewBox other) Parameters Type Name Description SvgViewBox other Returns Type Description Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() Operators Equality(SvgViewBox, SvgViewBox) Declaration public static bool operator ==(SvgViewBox lhs, SvgViewBox rhs) Parameters Type Name Description SvgViewBox lhs SvgViewBox rhs Returns Type Description Boolean Implicit(RectangleF to SvgViewBox) Performs an implicit conversion from to SvgViewBox . Declaration public static implicit operator SvgViewBox(RectangleF value) Parameters Type Name Description RectangleF value The value. Returns Type Description SvgViewBox The result of the conversion. Implicit(SvgViewBox to RectangleF) Performs an implicit conversion from SvgViewBox to . Declaration public static implicit operator RectangleF(SvgViewBox value) Parameters Type Name Description SvgViewBox value The value. Returns Type Description RectangleF The result of the conversion. Inequality(SvgViewBox, SvgViewBox) Declaration public static bool operator !=(SvgViewBox lhs, SvgViewBox rhs) Parameters Type Name Description SvgViewBox lhs SvgViewBox rhs Returns Type Description Boolean"
  },
  "api/Svg.SvgVerticalKern.html": {
    "href": "api/Svg.SvgVerticalKern.html",
    "title": "Class SvgVerticalKern | SVG.NET API",
    "keywords": "Class SvgVerticalKern Inheritance Object SvgElement SvgKern SvgVerticalKern Implements ISvgTransformable ICloneable ISvgNode Inherited Members SvgKern.Glyph1 SvgKern.Glyph2 SvgKern.Unicode1 SvgKern.Unicode2 SvgKern.Kerning SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.Render(ISvgRenderer) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.DeepCopy<T>() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"vkern\")] public class SvgVerticalKern : SvgKern, ISvgElement, ISvgTransformable, ICloneable, ISvgNode Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() Implements ISvgTransformable System.ICloneable ISvgNode"
  },
  "api/Svg.SvgUse.html": {
    "href": "api/Svg.SvgUse.html",
    "title": "Class SvgUse | SVG.NET API",
    "keywords": "Class SvgUse Inheritance Object SvgElement SvgVisualElement SvgUse Implements ISvgTransformable ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable Inherited Members SvgVisualElement.ISvgBoundable.Location SvgVisualElement.ISvgBoundable.Size SvgVisualElement.Clip SvgVisualElement.ClipPath SvgVisualElement.ClipRule SvgVisualElement.Filter SvgVisualElement.RequiresSmoothRendering SvgVisualElement.RenderFillAndStroke(ISvgRenderer) SvgVisualElement.RenderFill(ISvgRenderer) SvgVisualElement.RenderStroke(ISvgRenderer) SvgVisualElement.SetClip(ISvgRenderer) SvgVisualElement.ResetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.SetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.ResetClip(ISvgRenderer) SvgVisualElement.Visible SvgVisualElement.Display SvgVisualElement.Displayable SvgVisualElement.EnableBackground SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"use\")] public class SvgUse : SvgVisualElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode, ISvgBoundable, ISvgStylable, ISvgClipable Properties Bounds Gets the bounds of the element. Declaration public override Drawing.RectangleF Bounds { get; } Property Value Type Description Drawing.RectangleF The bounds. Overrides SvgVisualElement.Bounds Height Declaration public virtual SvgUnit Height { get; set; } Property Value Type Description SvgUnit Location Gets an SvgPoint representing the top left point of the rectangle. Declaration public SvgPoint Location { get; } Property Value Type Description SvgPoint ReferencedElement Declaration [SvgAttribute(\"href\", \"http://www.w3.org/1999/xlink\")] public virtual Uri ReferencedElement { get; set; } Property Value Type Description Uri Renderable Declaration protected override bool Renderable { get; } Property Value Type Description Boolean Overrides SvgVisualElement.Renderable Width Declaration public virtual SvgUnit Width { get; set; } Property Value Type Description SvgUnit X Declaration public virtual SvgUnit X { get; set; } Property Value Type Description SvgUnit Y Declaration public virtual SvgUnit Y { get; set; } Property Value Type Description SvgUnit Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgVisualElement.DeepCopy<T>() Path(ISvgRenderer) Declaration public override Drawing.Drawing2D.GraphicsPath Path(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer Returns Type Description Drawing.Drawing2D.GraphicsPath Overrides SvgVisualElement.Path(ISvgRenderer) PushTransforms(ISvgRenderer) Applies the required transforms to ISvgRenderer . Declaration protected override bool PushTransforms(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The ISvgRenderer to be transformed. Returns Type Description Boolean Overrides SvgElement.PushTransforms(ISvgRenderer) Render(ISvgRenderer) Declaration protected override void Render(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer Overrides SvgVisualElement.Render(ISvgRenderer) Implements ISvgTransformable System.ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable"
  },
  "api/Svg.SvgFont.html": {
    "href": "api/Svg.SvgFont.html",
    "title": "Class SvgFont | SVG.NET API",
    "keywords": "Class SvgFont Inheritance Object SvgElement SvgFont Implements ISvgTransformable ICloneable ISvgNode Inherited Members SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.DeepCopy<T>() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"font\")] public class SvgFont : SvgElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode Properties HorizAdvX Declaration public float HorizAdvX { get; set; } Property Value Type Description Single HorizOriginX Declaration public float HorizOriginX { get; set; } Property Value Type Description Single HorizOriginY Declaration public float HorizOriginY { get; set; } Property Value Type Description Single VertAdvY Declaration public float VertAdvY { get; set; } Property Value Type Description Single VertOriginX Declaration public float VertOriginX { get; set; } Property Value Type Description Single VertOriginY Declaration public float VertOriginY { get; set; } Property Value Type Description Single Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() Render(ISvgRenderer) Declaration protected override void Render(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer Overrides SvgElement.Render(ISvgRenderer) Implements ISvgTransformable System.ICloneable ISvgNode"
  },
  "api/Svg.SvgFillRuleConverter.html": {
    "href": "api/Svg.SvgFillRuleConverter.html",
    "title": "Class SvgFillRuleConverter | SVG.NET API",
    "keywords": "Class SvgFillRuleConverter Inheritance Object BaseConverter EnumBaseConverter < SvgFillRule > SvgFillRuleConverter Inherited Members EnumBaseConverter<SvgFillRule>.CaseHandlingMode EnumBaseConverter<SvgFillRule>.DefaultValue EnumBaseConverter<SvgFillRule>.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) EnumBaseConverter<SvgFillRule>.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type) BaseConverter.CanConvertFrom(ITypeDescriptorContext, Type) BaseConverter.CanConvertTo(ITypeDescriptorContext, Type) Namespace : Svg Assembly : cs.temp.dll.dll Syntax public sealed class SvgFillRuleConverter : EnumBaseConverter<SvgFillRule> Constructors SvgFillRuleConverter() Declaration public SvgFillRuleConverter()"
  },
  "api/Svg.SvgFillRule.html": {
    "href": "api/Svg.SvgFillRule.html",
    "title": "Enum SvgFillRule | SVG.NET API",
    "keywords": "Enum SvgFillRule Namespace : Svg Assembly : cs.temp.dll.dll Syntax public enum SvgFillRule Fields Name Description EvenOdd Inherit NonZero"
  },
  "api/Svg.SvgFallbackPaintServer.html": {
    "href": "api/Svg.SvgFallbackPaintServer.html",
    "title": "Class SvgFallbackPaintServer | SVG.NET API",
    "keywords": "Class SvgFallbackPaintServer A wrapper for a paint server has a fallback if the primary server doesn't work. Inheritance Object SvgElement SvgPaintServer SvgFallbackPaintServer Implements ISvgTransformable ICloneable ISvgNode Inherited Members SvgPaintServer.GetCallback SvgPaintServer.None SvgPaintServer.Render(ISvgRenderer) SvgPaintServer.ToString() SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class SvgFallbackPaintServer : SvgPaintServer, ISvgElement, ISvgTransformable, ICloneable, ISvgNode Constructors SvgFallbackPaintServer() Declaration public SvgFallbackPaintServer() SvgFallbackPaintServer(SvgPaintServer, IEnumerable<SvgPaintServer>) Declaration public SvgFallbackPaintServer(SvgPaintServer primary, IEnumerable<SvgPaintServer> fallbacks) Parameters Type Name Description SvgPaintServer primary IEnumerable < SvgPaintServer > fallbacks Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgElement.DeepCopy<T>() GetBrush(SvgVisualElement, ISvgRenderer, Single, Boolean) Declaration public override Brush GetBrush(SvgVisualElement styleOwner, ISvgRenderer renderer, float opacity, bool forStroke = false) Parameters Type Name Description SvgVisualElement styleOwner ISvgRenderer renderer Single opacity Boolean forStroke Returns Type Description Brush Overrides SvgPaintServer.GetBrush(SvgVisualElement, ISvgRenderer, Single, Boolean) Implements ISvgTransformable System.ICloneable ISvgNode"
  },
  "api/Svg.SvgExtentions.html": {
    "href": "api/Svg.SvgExtentions.html",
    "title": "Class SvgExtentions | SVG.NET API",
    "keywords": "Class SvgExtentions Svg helpers Inheritance Object SvgExtentions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public static class SvgExtentions Methods ApplyRecursive(SvgElement, Action<SvgElement>) Declaration public static void ApplyRecursive(this SvgElement elem, Action<SvgElement> action) Parameters Type Name Description SvgElement elem Action < SvgElement > action ApplyRecursiveDepthFirst(SvgElement, Action<SvgElement>) Declaration public static void ApplyRecursiveDepthFirst(this SvgElement elem, Action<SvgElement> action) Parameters Type Name Description SvgElement elem Action < SvgElement > action GetRectangle(SvgRectangle) Declaration public static RectangleF GetRectangle(this SvgRectangle r) Parameters Type Name Description SvgRectangle r Returns Type Description RectangleF GetXML(SvgDocument) Declaration public static string GetXML(this SvgDocument doc) Parameters Type Name Description SvgDocument doc Returns Type Description String GetXML(SvgElement) Declaration public static string GetXML(this SvgElement elem) Parameters Type Name Description SvgElement elem Returns Type Description String HasNonEmptyCustomAttribute(SvgElement, String) Declaration public static bool HasNonEmptyCustomAttribute(this SvgElement element, string name) Parameters Type Name Description SvgElement element String name Returns Type Description Boolean SetRectangle(SvgRectangle, RectangleF) Declaration public static void SetRectangle(this SvgRectangle r, RectangleF bounds) Parameters Type Name Description SvgRectangle r RectangleF bounds Traverse<T>(T, Func<T, IEnumerable<T>>) Declaration public static IEnumerable<T> Traverse<T>(this T root, Func<T, IEnumerable<T>> childrenSelector) Parameters Type Name Description T root Func <T, IEnumerable <T>> childrenSelector Returns Type Description IEnumerable <T> Type Parameters Name Description T Traverse<T>(IEnumerable<T>, Func<T, IEnumerable<T>>) Declaration public static IEnumerable<T> Traverse<T>(this IEnumerable<T> items, Func<T, IEnumerable<T>> childrenSelector) Parameters Type Name Description IEnumerable <T> items Func <T, IEnumerable <T>> childrenSelector Returns Type Description IEnumerable <T> Type Parameters Name Description T TraverseDepthFirst<T>(T, Func<T, IEnumerable<T>>) Declaration public static IEnumerable<T> TraverseDepthFirst<T>(this T root, Func<T, IEnumerable<T>> childrenSelector) Parameters Type Name Description T root Func <T, IEnumerable <T>> childrenSelector Returns Type Description IEnumerable <T> Type Parameters Name Description T TraverseDepthFirst<T>(IEnumerable<T>, Func<T, IEnumerable<T>>) Declaration public static IEnumerable<T> TraverseDepthFirst<T>(this IEnumerable<T> items, Func<T, IEnumerable<T>> childrenSelector) Parameters Type Name Description IEnumerable <T> items Func <T, IEnumerable <T>> childrenSelector Returns Type Description IEnumerable <T> Type Parameters Name Description T"
  },
  "api/Svg.SvgException.html": {
    "href": "api/Svg.SvgException.html",
    "title": "Class SvgException | SVG.NET API",
    "keywords": "Class SvgException Inheritance Object Exception SystemException FormatException SvgException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class SvgException : FormatException, ISerializable, _Exception Constructors SvgException(String) Declaration public SvgException(string message) Parameters Type Name Description String message Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/Svg.SvgEllipse.html": {
    "href": "api/Svg.SvgEllipse.html",
    "title": "Class SvgEllipse | SVG.NET API",
    "keywords": "Class SvgEllipse Represents and SVG ellipse element. Inheritance Object SvgElement SvgVisualElement SvgPathBasedElement SvgEllipse Implements ISvgTransformable ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable Inherited Members SvgPathBasedElement.Bounds SvgVisualElement.ISvgBoundable.Location SvgVisualElement.ISvgBoundable.Size SvgVisualElement.Clip SvgVisualElement.ClipPath SvgVisualElement.ClipRule SvgVisualElement.Filter SvgVisualElement.RequiresSmoothRendering SvgVisualElement.Renderable SvgVisualElement.RenderFillAndStroke(ISvgRenderer) SvgVisualElement.RenderFill(ISvgRenderer) SvgVisualElement.RenderStroke(ISvgRenderer) SvgVisualElement.SetClip(ISvgRenderer) SvgVisualElement.ResetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.SetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.ResetClip(ISvgRenderer) SvgVisualElement.Visible SvgVisualElement.Display SvgVisualElement.Displayable SvgVisualElement.EnableBackground SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"ellipse\")] public class SvgEllipse : SvgPathBasedElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode, ISvgBoundable, ISvgStylable, ISvgClipable Properties CenterX Declaration public virtual SvgUnit CenterX { get; set; } Property Value Type Description SvgUnit CenterY Declaration public virtual SvgUnit CenterY { get; set; } Property Value Type Description SvgUnit RadiusX Declaration public virtual SvgUnit RadiusX { get; set; } Property Value Type Description SvgUnit RadiusY Declaration public virtual SvgUnit RadiusY { get; set; } Property Value Type Description SvgUnit Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgVisualElement.DeepCopy<T>() Path(ISvgRenderer) Gets the for this element. Declaration public override GraphicsPath Path(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer Returns Type Description GraphicsPath Overrides SvgVisualElement.Path(ISvgRenderer) Render(ISvgRenderer) Renders the SvgElement and contents using the specified ISvgRenderer object. Declaration protected override void Render(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The ISvgRenderer object used for rendering. Overrides SvgVisualElement.Render(ISvgRenderer) Implements ISvgTransformable System.ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable"
  },
  "api/Svg.SvgElementStyle.html": {
    "href": "api/Svg.SvgElementStyle.html",
    "title": "Class SvgElementStyle | SVG.NET API",
    "keywords": "Class SvgElementStyle Inheritance Object SvgElementStyle Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class SvgElementStyle"
  },
  "api/Svg.SvgDocument.html": {
    "href": "api/Svg.SvgDocument.html",
    "title": "Class SvgDocument | SVG.NET API",
    "keywords": "Class SvgDocument The class used to create and load SVG documents. Inheritance Object SvgElement SvgFragment SvgDocument Implements ISvgTransformable ICloneable ISvgNode ISvgViewPort ISvgBoundable ITypeDescriptorContext Inherited Members SvgFragment.Namespace SvgFragment.ISvgBoundable.Location SvgFragment.ISvgBoundable.Size SvgFragment.ISvgBoundable.Bounds SvgFragment.X SvgFragment.Y SvgFragment.Width SvgFragment.Height SvgFragment.Overflow SvgFragment.ViewBox SvgFragment.AspectRatio SvgFragment.FontSize SvgFragment.FontFamily SvgFragment.SpaceHandling SvgFragment.PushTransforms(ISvgRenderer) SvgFragment.Render(ISvgRenderer) SvgFragment.Path SvgFragment.Bounds SvgFragment.GetDimensions() SvgFragment.DeepCopy() SvgFragment.DeepCopy<T>() SvgFragment.WriteStartElement(XmlTextWriter) SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class SvgDocument : SvgFragment, ISvgElement, ISvgTransformable, ICloneable, ISvgNode, ISvgViewPort, ISvgBoundable, ITypeDescriptorContext Constructors SvgDocument() Initializes a new instance of the SvgDocument class. Declaration public SvgDocument() Fields PointsPerInch Declaration public static readonly int PointsPerInch Field Value Type Description Int32 Properties BaseUri Declaration public Uri BaseUri { get; set; } Property Value Type Description Uri ExternalCSSHref Gets or sets an external Cascading Style Sheet (CSS) Declaration public string ExternalCSSHref { get; set; } Property Value Type Description String IdManager Gets an SvgElementIdManager for this document. Declaration protected virtual SvgElementIdManager IdManager { get; } Property Value Type Description SvgElementIdManager Ppi Gets or sets the Pixels Per Inch of the rendered image. Declaration public int Ppi { get; set; } Property Value Type Description Int32 Methods Draw() Renders the SvgDocument and returns the image as a . Declaration public virtual Bitmap Draw() Returns Type Description Bitmap A containing the rendered document. Draw(Bitmap) Renders the SvgDocument into a given Bitmap . Declaration public virtual void Draw(Bitmap bitmap) Parameters Type Name Description Bitmap bitmap Draw(Graphics) Renders the SvgDocument to the specified . Declaration public void Draw(Graphics graphics) Parameters Type Name Description Graphics graphics The to be rendered to. Exceptions Type Condition ArgumentNullException The graphics parameter cannot be null . Draw(Graphics, Nullable<SizeF>) Renders the SvgDocument to the specified . Declaration public void Draw(Graphics graphics, SizeF? size) Parameters Type Name Description Graphics graphics The to be rendered to. Nullable < SizeF > size The to render the document. If null document is rendered at the default document size. Exceptions Type Condition ArgumentNullException The graphics parameter cannot be null . Draw(ISvgRenderer) Renders the SvgDocument to the specified ISvgRenderer . Declaration public void Draw(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The ISvgRenderer to render the document with. Exceptions Type Condition ArgumentNullException The renderer parameter cannot be null . Draw(Int32, Int32) Renders the SvgDocument in given size and returns the image as a . If one of rasterWidth and rasterHeight is zero, the image is scaled preserving aspect ratio, otherwise the aspect ratio is ignored. Declaration public virtual Bitmap Draw(int rasterWidth, int rasterHeight) Parameters Type Name Description Int32 rasterWidth Int32 rasterHeight Returns Type Description Bitmap A containing the rendered document. EnsureSystemIsGdiPlusCapable() Ensure that the running system is GDI capable, if not this will yield a SvgGdiPlusCannotBeLoadedException exception. Declaration public static void EnsureSystemIsGdiPlusCapable() FromSvg<T>(String) Attempts to create an SVG document from the specified string data. Declaration public static T FromSvg<T>(string svg) where T : SvgDocument, new() Parameters Type Name Description String svg The SVG data. Returns Type Description T Type Parameters Name Description T GetElementById(String) Retrieves the SvgElement with the specified ID. Declaration public virtual SvgElement GetElementById(string id) Parameters Type Name Description String id A String containing the ID of the element to find. Returns Type Description SvgElement An SvgElement of one exists with the specified ID; otherwise false. GetElementById<TSvgElement>(String) Retrieves the SvgElement with the specified ID. Declaration public virtual TSvgElement GetElementById<TSvgElement>(string id) where TSvgElement : SvgElement Parameters Type Name Description String id A String containing the ID of the element to find. Returns Type Description TSvgElement An SvgElement of one exists with the specified ID; otherwise false. Type Parameters Name Description TSvgElement Open(String) Opens the document at the specified path and loads the SVG contents. Declaration public static SvgDocument Open(string path) Parameters Type Name Description String path A String containing the path of the file to open. Returns Type Description SvgDocument An SvgDocument with the contents loaded. Open(XmlDocument) Opens an SVG document from the specified . Declaration public static SvgDocument Open(XmlDocument document) Parameters Type Name Description XmlDocument document The containing the SVG document XML. Returns Type Description SvgDocument Exceptions Type Condition ArgumentNullException The document parameter cannot be null . Open<T>(Stream) Attempts to open an SVG document from the specified . Declaration public static T Open<T>(Stream stream) where T : SvgDocument, new() Parameters Type Name Description Stream stream The containing the SVG document to open. Returns Type Description T Type Parameters Name Description T Open<T>(Stream, Dictionary<String, String>) Opens an SVG document from the specified and adds the specified entities. Declaration public static T Open<T>(Stream stream, Dictionary<string, string> entities) where T : SvgDocument, new() Parameters Type Name Description Stream stream The containing the SVG document to open. Dictionary < String , String > entities Custom entity definitions. Returns Type Description T Type Parameters Name Description T Exceptions Type Condition ArgumentNullException The stream parameter cannot be null . Open<T>(String) Opens the document at the specified path and loads the SVG contents. Declaration public static T Open<T>(string path) where T : SvgDocument, new() Parameters Type Name Description String path A String containing the path of the file to open. Returns Type Description T An SvgDocument with the contents loaded. Type Parameters Name Description T Open<T>(String, Dictionary<String, String>) Opens the document at the specified path and loads the SVG contents. Declaration public static T Open<T>(string path, Dictionary<string, string> entities) where T : SvgDocument, new() Parameters Type Name Description String path A String containing the path of the file to open. Dictionary < String , String > entities A dictionary of custom entity definitions to be used when resolving XML entities within the document. Returns Type Description T An SvgDocument with the contents loaded. Type Parameters Name Description T OpenAsBitmap(String) Declaration public static Bitmap OpenAsBitmap(string path) Parameters Type Name Description String path Returns Type Description Bitmap OpenAsBitmap(XmlDocument) Declaration public static Bitmap OpenAsBitmap(XmlDocument document) Parameters Type Name Description XmlDocument document Returns Type Description Bitmap OverwriteIdManager(SvgElementIdManager) Overwrites the current IdManager with a custom implementation. Be careful with this: If elements have been inserted into the document before, you have to take care that the new IdManager also knows of them. Declaration public void OverwriteIdManager(SvgElementIdManager manager) Parameters Type Name Description SvgElementIdManager manager RasterizeDimensions(ref SizeF, Int32, Int32) If both or one of raster height and width is not given (0), calculate that missing value from original SVG size while keeping original SVG size ratio Declaration public virtual void RasterizeDimensions(ref SizeF size, int rasterWidth, int rasterHeight) Parameters Type Name Description SizeF size Int32 rasterWidth Int32 rasterHeight SystemIsGdiPlusCapable() Validate whether the system has GDI+ capabilities (non Windows related). Declaration public static bool SystemIsGdiPlusCapable() Returns Type Description Boolean Boolean whether the system is capable of using GDI+ Write(Stream, Boolean) Declaration public void Write(Stream stream, bool useBom = true) Parameters Type Name Description Stream stream Boolean useBom Write(String, Boolean) Declaration public void Write(string path, bool useBom = true) Parameters Type Name Description String path Boolean useBom Write(XmlTextWriter) Declaration public override void Write(XmlTextWriter writer) Parameters Type Name Description XmlTextWriter writer Overrides SvgElement.Write(XmlTextWriter) Explicit Interface Implementations IServiceProvider.GetService(Type) Declaration object IServiceProvider.GetService(Type serviceType) Parameters Type Name Description Type serviceType Returns Type Description Object Implements ISvgTransformable System.ICloneable ISvgNode ISvgViewPort ISvgBoundable ITypeDescriptorContext"
  },
  "api/Svg.SvgDescription.html": {
    "href": "api/Svg.SvgDescription.html",
    "title": "Class SvgDescription | SVG.NET API",
    "keywords": "Class SvgDescription Inheritance Object SvgElement SvgDescription Implements ISvgTransformable ICloneable ISvgNode ISvgDescriptiveElement Inherited Members SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.Render(ISvgRenderer) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"desc\")] public class SvgDescription : SvgElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode, ISvgDescriptiveElement Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgElement.DeepCopy<T>() ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements ISvgTransformable System.ICloneable ISvgNode ISvgDescriptiveElement"
  },
  "api/Svg.SvgDefinitionList.html": {
    "href": "api/Svg.SvgDefinitionList.html",
    "title": "Class SvgDefinitionList | SVG.NET API",
    "keywords": "Class SvgDefinitionList Represents a list of re-usable SVG components. Inheritance Object SvgElement SvgDefinitionList Implements ISvgTransformable ICloneable ISvgNode Inherited Members SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.DeepCopy<T>() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"defs\")] public class SvgDefinitionList : SvgElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() Render(ISvgRenderer) Renders the SvgElement and contents to the specified ISvgRenderer object. Declaration protected override void Render(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The ISvgRenderer object to render to. Overrides SvgElement.Render(ISvgRenderer) Implements ISvgTransformable System.ICloneable ISvgNode"
  },
  "api/Svg.SvgDeferredPaintServer.html": {
    "href": "api/Svg.SvgDeferredPaintServer.html",
    "title": "Class SvgDeferredPaintServer | SVG.NET API",
    "keywords": "Class SvgDeferredPaintServer A wrapper for a paint server which isn't defined currently in the parse process, but should be defined by the time the image needs to render. Inheritance Object SvgElement SvgPaintServer SvgDeferredPaintServer Implements ISvgTransformable ICloneable ISvgNode Inherited Members SvgPaintServer.GetCallback SvgPaintServer.None SvgPaintServer.Render(ISvgRenderer) SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class SvgDeferredPaintServer : SvgPaintServer, ISvgElement, ISvgTransformable, ICloneable, ISvgNode Constructors SvgDeferredPaintServer() Declaration public SvgDeferredPaintServer() SvgDeferredPaintServer(SvgDocument, String) Declaration public SvgDeferredPaintServer(SvgDocument document, string id) Parameters Type Name Description SvgDocument document String id Properties DeferredId Declaration public string DeferredId { get; set; } Property Value Type Description String Document Declaration public SvgDocument Document { get; set; } Property Value Type Description SvgDocument Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgElement.DeepCopy<T>() EnsureServer(SvgElement) Declaration public void EnsureServer(SvgElement styleOwner) Parameters Type Name Description SvgElement styleOwner Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) GetBrush(SvgVisualElement, ISvgRenderer, Single, Boolean) Declaration public override Brush GetBrush(SvgVisualElement styleOwner, ISvgRenderer renderer, float opacity, bool forStroke = false) Parameters Type Name Description SvgVisualElement styleOwner ISvgRenderer renderer Single opacity Boolean forStroke Returns Type Description Brush Overrides SvgPaintServer.GetBrush(SvgVisualElement, ISvgRenderer, Single, Boolean) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() ToString() Declaration public override string ToString() Returns Type Description String Overrides SvgPaintServer.ToString() TryGet<T>(SvgPaintServer, SvgElement) Declaration public static T TryGet<T>(SvgPaintServer server, SvgElement parent) where T : SvgPaintServer Parameters Type Name Description SvgPaintServer server SvgElement parent Returns Type Description T Type Parameters Name Description T Implements ISvgTransformable System.ICloneable ISvgNode"
  },
  "api/Svg.SvgDefaults.html": {
    "href": "api/Svg.SvgDefaults.html",
    "title": "Class SvgDefaults | SVG.NET API",
    "keywords": "Class SvgDefaults Holds a dictionary of the default values of the SVG specification Inheritance Object SvgDefaults Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public static class SvgDefaults Methods IsDefault(String, String, String) Checks whether the property value is the default value of the svg definition. Declaration public static bool IsDefault(string attributeName, string componentType, string value) Parameters Type Name Description String attributeName Name of the svg attribute String componentType Class name of the svg element String value .NET value of the attribute Returns Type Description Boolean"
  },
  "api/Svg.SvgCustomAttributeCollection.html": {
    "href": "api/Svg.SvgCustomAttributeCollection.html",
    "title": "Class SvgCustomAttributeCollection | SVG.NET API",
    "keywords": "Class SvgCustomAttributeCollection A collection of Custom Attributes Inheritance Object Dictionary < String , String > SvgCustomAttributeCollection Implements IDictionary < String , String > ICollection < KeyValuePair < String , String >> IDictionary ICollection IReadOnlyDictionary < String , String > IReadOnlyCollection < KeyValuePair < String , String >> IEnumerable < KeyValuePair < String , String >> IEnumerable ISerializable IDeserializationCallback Inherited Members Dictionary<String, String>.Add(String, String) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Add(System.Collections.Generic.KeyValuePair<System.String, System.String>) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Contains(System.Collections.Generic.KeyValuePair<System.String, System.String>) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Remove(System.Collections.Generic.KeyValuePair<System.String, System.String>) Dictionary<String, String>.Clear() Dictionary<String, String>.ContainsKey(String) Dictionary<String, String>.ContainsValue(String) Dictionary<String, String>.GetEnumerator() System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>.GetEnumerator() Dictionary<String, String>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<String, String>.OnDeserialization(Object) Dictionary<String, String>.Remove(String) Dictionary<String, String>.TryGetValue(String, String) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, System.String>[], System.Int32) Dictionary<String, String>.ICollection.CopyTo(Array, Int32) Dictionary<String, String>.IEnumerable.GetEnumerator() System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.set_Item(System.Object, System.Object) Dictionary<String, String>.IDictionary.Add(Object, Object) Dictionary<String, String>.IDictionary.Contains(Object) Dictionary<String, String>.IDictionary.GetEnumerator() Dictionary<String, String>.IDictionary.Remove(Object) Dictionary<String, String>.Comparer Dictionary<String, String>.Count Dictionary<String, String>.Keys System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IDictionary<System.String, System.String>.Keys System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>.Keys Dictionary<String, String>.Values System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IDictionary<System.String, System.String>.Values System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>.Values Dictionary<String, String>.Item[String] System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.IsReadOnly Dictionary<String, String>.ICollection.IsSynchronized Dictionary<String, String>.ICollection.SyncRoot Dictionary<String, String>.IDictionary.IsFixedSize Dictionary<String, String>.IDictionary.IsReadOnly Dictionary<String, String>.IDictionary.Keys Dictionary<String, String>.IDictionary.Values Dictionary<String, String>.IDictionary.Item[Object] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public sealed class SvgCustomAttributeCollection : Dictionary<string, string>, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IDictionary, ICollection, IReadOnlyDictionary<string, string>, IReadOnlyCollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, ISerializable, IDeserializationCallback Constructors SvgCustomAttributeCollection(SvgElement) Initialises a new instance of a SvgAttributeCollection with the given SvgElement as the owner. Declaration public SvgCustomAttributeCollection(SvgElement owner) Parameters Type Name Description SvgElement owner The SvgElement owner of the collection. Properties Item[String] Gets the attribute with the specified name. Declaration public string this[string attributeName] { get; set; } Parameters Type Name Description String attributeName A String containing the attribute name. Property Value Type Description String The attribute value associated with the specified name; If there is no attribute the parent's value will be inherited. Events AttributeChanged Fired when an Atrribute has changed Declaration public event EventHandler<AttributeEventArgs> AttributeChanged Event Type Type Description EventHandler < AttributeEventArgs > Implements System.Collections.Generic.IDictionary<TKey,TValue> System.Collections.Generic.ICollection<T> System.Collections.IDictionary System.Collections.ICollection System.Collections.Generic.IReadOnlyDictionary<TKey,TValue> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.Runtime.Serialization.ISerializable System.Runtime.Serialization.IDeserializationCallback"
  },
  "api/Svg.PointFExtensions.html": {
    "href": "api/Svg.PointFExtensions.html",
    "title": "Class PointFExtensions | SVG.NET API",
    "keywords": "Class PointFExtensions Inheritance Object PointFExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public static class PointFExtensions Methods ToSvgString(PointF) Declaration public static string ToSvgString(this PointF p) Parameters Type Name Description PointF p Returns Type Description String"
  },
  "api/Svg.PathStatistics.html": {
    "href": "api/Svg.PathStatistics.html",
    "title": "Class PathStatistics | SVG.NET API",
    "keywords": "Class PathStatistics Inheritance Object PathStatistics Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class PathStatistics Constructors PathStatistics(PathData) Declaration public PathStatistics(PathData data) Parameters Type Name Description PathData data Properties TotalLength Declaration public double TotalLength { get; } Property Value Type Description Double Methods LocationAngleAtOffset(Double, out PointF, out Single) Declaration public void LocationAngleAtOffset(double offset, out PointF point, out float angle) Parameters Type Name Description Double offset PointF point Single angle OffsetOnPath(Double) Declaration public bool OffsetOnPath(double offset) Parameters Type Name Description Double offset Returns Type Description Boolean"
  },
  "api/Svg.Pathing.SvgArcSweep.html": {
    "href": "api/Svg.Pathing.SvgArcSweep.html",
    "title": "Enum SvgArcSweep | SVG.NET API",
    "keywords": "Enum SvgArcSweep Namespace : Svg.Pathing Assembly : cs.temp.dll.dll Syntax [Flags] public enum SvgArcSweep Fields Name Description Negative Positive"
  },
  "api/Svg.Pathing.SvgArcSize.html": {
    "href": "api/Svg.Pathing.SvgArcSize.html",
    "title": "Enum SvgArcSize | SVG.NET API",
    "keywords": "Enum SvgArcSize Namespace : Svg.Pathing Assembly : cs.temp.dll.dll Syntax [Flags] public enum SvgArcSize Fields Name Description Large Small"
  },
  "api/Svg.Pathing.SvgArcSegment.html": {
    "href": "api/Svg.Pathing.SvgArcSegment.html",
    "title": "Class SvgArcSegment | SVG.NET API",
    "keywords": "Class SvgArcSegment Inheritance Object SvgPathSegment SvgArcSegment Inherited Members SvgPathSegment.Start SvgPathSegment.End SvgPathSegment.Clone() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.Pathing Assembly : cs.temp.dll.dll Syntax public sealed class SvgArcSegment : SvgPathSegment Constructors SvgArcSegment(PointF, Single, Single, Single, SvgArcSize, SvgArcSweep, PointF) Declaration public SvgArcSegment(PointF start, float radiusX, float radiusY, float angle, SvgArcSize size, SvgArcSweep sweep, PointF end) Parameters Type Name Description PointF start Single radiusX Single radiusY Single angle SvgArcSize size SvgArcSweep sweep PointF end Properties Angle Declaration public float Angle { get; set; } Property Value Type Description Single RadiusX Declaration public float RadiusX { get; set; } Property Value Type Description Single RadiusY Declaration public float RadiusY { get; set; } Property Value Type Description Single Size Declaration public SvgArcSize Size { get; set; } Property Value Type Description SvgArcSize Sweep Declaration public SvgArcSweep Sweep { get; set; } Property Value Type Description SvgArcSweep Methods AddToPath(GraphicsPath) Declaration public override void AddToPath(GraphicsPath graphicsPath) Parameters Type Name Description GraphicsPath graphicsPath Overrides SvgPathSegment.AddToPath(GraphicsPath) ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/Svg.Pathing.ISvgPathElement.html": {
    "href": "api/Svg.Pathing.ISvgPathElement.html",
    "title": "Interface ISvgPathElement | SVG.NET API",
    "keywords": "Interface ISvgPathElement Namespace : Svg.Pathing Assembly : cs.temp.dll.dll Syntax public interface ISvgPathElement Methods OnPathUpdated() Declaration void OnPathUpdated()"
  },
  "api/Svg.NonSvgElement.html": {
    "href": "api/Svg.NonSvgElement.html",
    "title": "Class NonSvgElement | SVG.NET API",
    "keywords": "Class NonSvgElement Inheritance Object SvgElement NonSvgElement Implements ISvgTransformable ICloneable ISvgNode Inherited Members SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.Render(ISvgRenderer) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.DeepCopy<T>() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class NonSvgElement : SvgElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode Constructors NonSvgElement() Declaration public NonSvgElement() NonSvgElement(String) Declaration public NonSvgElement(string elementName) Parameters Type Name Description String elementName Properties Name Publish the element name to be able to differentiate non-svg elements. Declaration public string Name { get; } Property Value Type Description String Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() Implements ISvgTransformable System.ICloneable ISvgNode"
  },
  "api/Svg.MouseScrollArg.html": {
    "href": "api/Svg.MouseScrollArg.html",
    "title": "Class MouseScrollArg | SVG.NET API",
    "keywords": "Class MouseScrollArg Inheritance Object EventArgs SVGArg MouseScrollArg Inherited Members SVGArg.SessionID EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class MouseScrollArg : SVGArg Fields AltKey Alt modifier key pressed Declaration public bool AltKey Field Value Type Description Boolean CtrlKey Control modifier key pressed Declaration public bool CtrlKey Field Value Type Description Boolean Scroll Declaration public int Scroll Field Value Type Description Int32 ShiftKey Shift modifier key pressed Declaration public bool ShiftKey Field Value Type Description Boolean"
  },
  "api/Svg.MouseArg.html": {
    "href": "api/Svg.MouseArg.html",
    "title": "Class MouseArg | SVG.NET API",
    "keywords": "Class MouseArg Represents the state of the mouse at the moment the event occured. Inheritance Object EventArgs SVGArg MouseArg Inherited Members SVGArg.SessionID EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class MouseArg : SVGArg Fields AltKey Alt modifier key pressed Declaration public bool AltKey Field Value Type Description Boolean Button 1 = left, 2 = middle, 3 = right Declaration public int Button Field Value Type Description Int32 ClickCount Amount of mouse clicks, e.g. 2 for double click Declaration public int ClickCount Field Value Type Description Int32 CtrlKey Control modifier key pressed Declaration public bool CtrlKey Field Value Type Description Boolean ShiftKey Shift modifier key pressed Declaration public bool ShiftKey Field Value Type Description Boolean x Declaration public float x Field Value Type Description Single y Declaration public float y Field Value Type Description Single"
  },
  "api/Svg.ISvgViewPort.html": {
    "href": "api/Svg.ISvgViewPort.html",
    "title": "Interface ISvgViewPort | SVG.NET API",
    "keywords": "Interface ISvgViewPort Provides properties and methods to be implemented by view port elements. Namespace : Svg Assembly : cs.temp.dll.dll Syntax public interface ISvgViewPort Properties AspectRatio Declaration SvgAspectRatio AspectRatio { get; set; } Property Value Type Description SvgAspectRatio Overflow Declaration SvgOverflow Overflow { get; set; } Property Value Type Description SvgOverflow ViewBox Gets or sets the viewport of the element. Declaration SvgViewBox ViewBox { get; set; } Property Value Type Description SvgViewBox"
  },
  "api/Svg.IFontDefn.html": {
    "href": "api/Svg.IFontDefn.html",
    "title": "Interface IFontDefn | SVG.NET API",
    "keywords": "Interface IFontDefn Inherited Members IDisposable.Dispose() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public interface IFontDefn : IDisposable Properties Size Declaration float Size { get; } Property Value Type Description Single SizeInPoints Declaration float SizeInPoints { get; } Property Value Type Description Single Methods AddStringToPath(ISvgRenderer, GraphicsPath, String, PointF) Declaration void AddStringToPath(ISvgRenderer renderer, GraphicsPath path, string text, PointF location) Parameters Type Name Description ISvgRenderer renderer GraphicsPath path String text PointF location Ascent(ISvgRenderer) Declaration float Ascent(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer Returns Type Description Single MeasureCharacters(ISvgRenderer, String) Declaration IList<RectangleF> MeasureCharacters(ISvgRenderer renderer, string text) Parameters Type Name Description ISvgRenderer renderer String text Returns Type Description IList < RectangleF > MeasureString(ISvgRenderer, String) Declaration SizeF MeasureString(ISvgRenderer renderer, string text) Parameters Type Name Description ISvgRenderer renderer String text Returns Type Description SizeF"
  },
  "api/Svg.GdiFontDefn.html": {
    "href": "api/Svg.GdiFontDefn.html",
    "title": "Class GdiFontDefn | SVG.NET API",
    "keywords": "Class GdiFontDefn Inheritance Object GdiFontDefn Implements IFontDefn IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class GdiFontDefn : IFontDefn, IDisposable Constructors GdiFontDefn(Font) Declaration public GdiFontDefn(Font font) Parameters Type Name Description Font font Properties Size Declaration public float Size { get; } Property Value Type Description Single SizeInPoints Declaration public float SizeInPoints { get; } Property Value Type Description Single Methods AddStringToPath(ISvgRenderer, GraphicsPath, String, PointF) Declaration public void AddStringToPath(ISvgRenderer renderer, GraphicsPath path, string text, PointF location) Parameters Type Name Description ISvgRenderer renderer GraphicsPath path String text PointF location Ascent(ISvgRenderer) Declaration public float Ascent(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer Returns Type Description Single Dispose() Declaration public void Dispose() MeasureCharacters(ISvgRenderer, String) Declaration public IList<RectangleF> MeasureCharacters(ISvgRenderer renderer, string text) Parameters Type Name Description ISvgRenderer renderer String text Returns Type Description IList < RectangleF > MeasureString(ISvgRenderer, String) Declaration public SizeF MeasureString(ISvgRenderer renderer, string text) Parameters Type Name Description ISvgRenderer renderer String text Returns Type Description SizeF Implements IFontDefn System.IDisposable"
  },
  "api/Svg.FilterEffects.html": {
    "href": "api/Svg.FilterEffects.html",
    "title": "Namespace Svg.FilterEffects | SVG.NET API",
    "keywords": "Namespace Svg.FilterEffects Classes ImageBuffer SvgColourMatrix Note: this is not used in calculations to bitmap - used only to allow for svg xml output SvgFilter A filter effect consists of a series of graphics operations that are applied to a given source graphic to produce a modified graphical result. SvgFilterPrimitive SvgGaussianBlur SvgMerge SvgMergeNode SvgOffset Note: this is not used in calculations to bitmap - used only to allow for svg xml output Interfaces ISvgFilterable Enums BlurType SvgColourMatrixType"
  },
  "api/Svg.FilterEffects.SvgOffset.html": {
    "href": "api/Svg.FilterEffects.SvgOffset.html",
    "title": "Class SvgOffset | SVG.NET API",
    "keywords": "Class SvgOffset Note: this is not used in calculations to bitmap - used only to allow for svg xml output Inheritance Object SvgElement SvgFilterPrimitive SvgOffset Implements ISvgTransformable ICloneable ISvgNode Inherited Members SvgFilterPrimitive.SourceGraphic SvgFilterPrimitive.SourceAlpha SvgFilterPrimitive.BackgroundImage SvgFilterPrimitive.BackgroundAlpha SvgFilterPrimitive.FillPaint SvgFilterPrimitive.StrokePaint SvgFilterPrimitive.Input SvgFilterPrimitive.Result SvgFilterPrimitive.Owner SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.Render(ISvgRenderer) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.FilterEffects Assembly : cs.temp.dll.dll Syntax [SvgElement(\"feOffset\")] public class SvgOffset : SvgFilterPrimitive, ISvgElement, ISvgTransformable, ICloneable, ISvgNode Properties Dx The amount to offset the input graphic along the x-axis. The offset amount is expressed in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element. If the attribute is not specified, then the effect is as if a value of 0 were specified. Note: this is not used in calculations to bitmap - used only to allow for svg xml output Declaration public SvgUnit Dx { get; set; } Property Value Type Description SvgUnit Dy The amount to offset the input graphic along the y-axis. The offset amount is expressed in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element. If the attribute is not specified, then the effect is as if a value of 0 were specified. Note: this is not used in calculations to bitmap - used only to allow for svg xml output Declaration public SvgUnit Dy { get; set; } Property Value Type Description SvgUnit Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgElement.DeepCopy<T>() Process(ImageBuffer) Declaration public override void Process(ImageBuffer buffer) Parameters Type Name Description ImageBuffer buffer Overrides SvgFilterPrimitive.Process(ImageBuffer) Implements ISvgTransformable System.ICloneable ISvgNode"
  },
  "api/Svg.FilterEffects.SvgMergeNode.html": {
    "href": "api/Svg.FilterEffects.SvgMergeNode.html",
    "title": "Class SvgMergeNode | SVG.NET API",
    "keywords": "Class SvgMergeNode Inheritance Object SvgElement SvgMergeNode Implements ISvgTransformable ICloneable ISvgNode Inherited Members SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.Render(ISvgRenderer) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.DeepCopy<T>() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.FilterEffects Assembly : cs.temp.dll.dll Syntax [SvgElement(\"feMergeNode\")] public class SvgMergeNode : SvgElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode Properties Input Declaration public string Input { get; set; } Property Value Type Description String Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() Implements ISvgTransformable System.ICloneable ISvgNode"
  },
  "api/Svg.FilterEffects.SvgMerge.html": {
    "href": "api/Svg.FilterEffects.SvgMerge.html",
    "title": "Class SvgMerge | SVG.NET API",
    "keywords": "Class SvgMerge Inheritance Object SvgElement SvgFilterPrimitive SvgMerge Implements ISvgTransformable ICloneable ISvgNode Inherited Members SvgFilterPrimitive.SourceGraphic SvgFilterPrimitive.SourceAlpha SvgFilterPrimitive.BackgroundImage SvgFilterPrimitive.BackgroundAlpha SvgFilterPrimitive.FillPaint SvgFilterPrimitive.StrokePaint SvgFilterPrimitive.Input SvgFilterPrimitive.Result SvgFilterPrimitive.Owner SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.Render(ISvgRenderer) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.DeepCopy<T>() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.FilterEffects Assembly : cs.temp.dll.dll Syntax [SvgElement(\"feMerge\")] public class SvgMerge : SvgFilterPrimitive, ISvgElement, ISvgTransformable, ICloneable, ISvgNode Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() Process(ImageBuffer) Declaration public override void Process(ImageBuffer buffer) Parameters Type Name Description ImageBuffer buffer Overrides SvgFilterPrimitive.Process(ImageBuffer) Implements ISvgTransformable System.ICloneable ISvgNode"
  },
  "api/Svg.Extensions.html": {
    "href": "api/Svg.Extensions.html",
    "title": "Class Extensions | SVG.NET API",
    "keywords": "Class Extensions Inheritance Object Extensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public static class Extensions Methods Descendants<T>(IEnumerable<T>) Declaration public static IEnumerable<SvgElement> Descendants<T>(this IEnumerable<T> source) where T : SvgElement Parameters Type Name Description IEnumerable <T> source Returns Type Description IEnumerable < SvgElement > Type Parameters Name Description T"
  },
  "api/Svg.ExtensionMethods.html": {
    "href": "api/Svg.ExtensionMethods.html",
    "title": "Namespace Svg.ExtensionMethods | SVG.NET API",
    "keywords": "Namespace Svg.ExtensionMethods Classes UriExtensions"
  },
  "api/Svg.ExtensionMethods.UriExtensions.html": {
    "href": "api/Svg.ExtensionMethods.UriExtensions.html",
    "title": "Class UriExtensions | SVG.NET API",
    "keywords": "Class UriExtensions Inheritance Object UriExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExtensionMethods Assembly : cs.temp.dll.dll Syntax public static class UriExtensions Methods ReplaceWithNullIfNone(Uri) Declaration public static Uri ReplaceWithNullIfNone(this Uri uri) Parameters Type Name Description Uri uri Returns Type Description Uri"
  },
  "api/Svg.ExCSS.html": {
    "href": "api/Svg.ExCSS.html",
    "title": "Namespace Svg.ExCSS | SVG.NET API",
    "keywords": "Namespace Svg.ExCSS Classes AggregateRule AggregateSelectorList BaseSelector CharacterSetRule ComplexSelector ConditionalRule DocumentRule FontFaceRule GenericFunction GenericRule HtmlColor ImportRule InheritTerm KeyframeRule KeyframesRule MediaRule MediaTypeList MultipleSelectorList NamespaceRule PageRule Parser PrimitiveTerm Property RuleSet SelectorList SimpleSelector StyleDeclaration StyleRule StyleSheet StylesheetParseError SupportsRule Term TermList Structs CombinatorSelector Interfaces IRuleContainer IToString Enums Combinator DirectionMode DocumentFunction ParserError RuleType TermList.TermSeparator exposed enumeration for the adding of separators into term lists UnitType"
  },
  "api/Svg.ExCSS.UnitType.html": {
    "href": "api/Svg.ExCSS.UnitType.html",
    "title": "Enum UnitType | SVG.NET API",
    "keywords": "Enum UnitType Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public enum UnitType Fields Name Description Attribute Centimeter Counter Degree Dimension Ems Exs Grad Hertz Ident Inch KiloHertz Millimeter Millisecond Number Percent Percentage Pixel Point Radian Rect RGB Second String Turn Unknown Uri ViewportHeight ViewportMax ViewportMin ViewportWidth"
  },
  "api/Svg.ExCSS.TermList.html": {
    "href": "api/Svg.ExCSS.TermList.html",
    "title": "Class TermList | SVG.NET API",
    "keywords": "Class TermList Inheritance Object Term TermList Inherited Members Term.Inherit Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public class TermList : Term Constructors TermList() Declaration public TermList() TermList(Term[]) Declaration public TermList(params Term[] terms) Parameters Type Name Description Term [] terms Properties Length Declaration public int Length { get; } Property Value Type Description Int32 Methods AddSeparator(TermList.TermSeparator) Declaration public void AddSeparator(TermList.TermSeparator termSeparator) Parameters Type Name Description TermList.TermSeparator termSeparator AddTerm(Term) Declaration public void AddTerm(Term term) Parameters Type Name Description Term term Item(Int32) Declaration public Term Item(int index) Parameters Type Name Description Int32 index Returns Type Description Term Item(Int32) Declaration public Term Item(int index) Parameters Type Name Description Int32 index Returns Type Description Term ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/Svg.ExCSS.TermList.TermSeparator.html": {
    "href": "api/Svg.ExCSS.TermList.TermSeparator.html",
    "title": "Enum TermList.TermSeparator | SVG.NET API",
    "keywords": "Enum TermList.TermSeparator exposed enumeration for the adding of separators into term lists Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public enum TermSeparator Fields Name Description Comma Space"
  },
  "api/Svg.ExCSS.Term.html": {
    "href": "api/Svg.ExCSS.Term.html",
    "title": "Class Term | SVG.NET API",
    "keywords": "Class Term Inheritance Object Term GenericFunction HtmlColor InheritTerm PrimitiveTerm TermList Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public abstract class Term Fields Inherit Declaration public static readonly InheritTerm Inherit Field Value Type Description InheritTerm"
  },
  "api/Svg.ExCSS.SupportsRule.html": {
    "href": "api/Svg.ExCSS.SupportsRule.html",
    "title": "Class SupportsRule | SVG.NET API",
    "keywords": "Class SupportsRule Inheritance Object RuleSet AggregateRule ConditionalRule SupportsRule Implements ISupportsRuleSets Inherited Members AggregateRule.RuleSets RuleSet.RuleType Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public class SupportsRule : ConditionalRule, ISupportsRuleSets Constructors SupportsRule() Declaration public SupportsRule() Properties Condition Declaration public override string Condition { get; set; } Property Value Type Description String Overrides ConditionalRule.Condition IsSupported Declaration public bool IsSupported { get; set; } Property Value Type Description Boolean Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() ToString(Boolean, Int32) Declaration public override string ToString(bool friendlyFormat, int indentation = 0) Parameters Type Name Description Boolean friendlyFormat Int32 indentation Returns Type Description String Overrides RuleSet.ToString(Boolean, Int32) Implements ISupportsRuleSets"
  },
  "api/Svg.ExCSS.StylesheetParseError.html": {
    "href": "api/Svg.ExCSS.StylesheetParseError.html",
    "title": "Class StylesheetParseError | SVG.NET API",
    "keywords": "Class StylesheetParseError Inheritance Object StylesheetParseError Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public sealed class StylesheetParseError Constructors StylesheetParseError(ParserError, String, Int32, Int32) Declaration public StylesheetParseError(ParserError error, string errorMessage, int line, int column) Parameters Type Name Description ParserError error String errorMessage Int32 line Int32 column Properties Column Declaration public int Column { get; set; } Property Value Type Description Int32 Line Declaration public int Line { get; set; } Property Value Type Description Int32 Message Declaration public string Message { get; } Property Value Type Description String ParserError Declaration public ParserError ParserError { get; set; } Property Value Type Description ParserError Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/Svg.ExCSS.StyleSheet.html": {
    "href": "api/Svg.ExCSS.StyleSheet.html",
    "title": "Class StyleSheet | SVG.NET API",
    "keywords": "Class StyleSheet Inheritance Object StyleSheet Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public sealed class StyleSheet Constructors StyleSheet() Declaration public StyleSheet() Properties CharsetDirectives Declaration public IList<CharacterSetRule> CharsetDirectives { get; } Property Value Type Description IList < CharacterSetRule > Errors Declaration public List<StylesheetParseError> Errors { get; } Property Value Type Description List < StylesheetParseError > FontFaceDirectives Declaration public IList<FontFaceRule> FontFaceDirectives { get; } Property Value Type Description IList < FontFaceRule > ImportDirectives Declaration public IList<ImportRule> ImportDirectives { get; } Property Value Type Description IList < ImportRule > KeyframeDirectives Declaration public IList<KeyframesRule> KeyframeDirectives { get; } Property Value Type Description IList < KeyframesRule > MediaDirectives Declaration public IList<MediaRule> MediaDirectives { get; } Property Value Type Description IList < MediaRule > NamespaceDirectives Declaration public IList<NamespaceRule> NamespaceDirectives { get; } Property Value Type Description IList < NamespaceRule > PageDirectives Declaration public IList<PageRule> PageDirectives { get; } Property Value Type Description IList < PageRule > Rules Declaration public List<RuleSet> Rules { get; } Property Value Type Description List < RuleSet > StyleRules Declaration public IList<StyleRule> StyleRules { get; } Property Value Type Description IList < StyleRule > SupportsDirectives Declaration public IList<SupportsRule> SupportsDirectives { get; } Property Value Type Description IList < SupportsRule > Methods InsertRule(String, Int32) Declaration public StyleSheet InsertRule(string rule, int index) Parameters Type Name Description String rule Int32 index Returns Type Description StyleSheet RemoveRule(Int32) Declaration public StyleSheet RemoveRule(int index) Parameters Type Name Description Int32 index Returns Type Description StyleSheet ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() ToString(Boolean, Int32) Declaration public string ToString(bool friendlyFormat, int indentation = 0) Parameters Type Name Description Boolean friendlyFormat Int32 indentation Returns Type Description String"
  },
  "api/Svg.ExCSS.StyleRule.html": {
    "href": "api/Svg.ExCSS.StyleRule.html",
    "title": "Class StyleRule | SVG.NET API",
    "keywords": "Class StyleRule Inheritance Object RuleSet StyleRule Implements ISupportsSelector ISupportsDeclarations Inherited Members RuleSet.RuleType Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public class StyleRule : RuleSet, ISupportsSelector, ISupportsDeclarations Constructors StyleRule() Declaration public StyleRule() StyleRule(StyleDeclaration) Declaration public StyleRule(StyleDeclaration declarations) Parameters Type Name Description StyleDeclaration declarations Properties Declarations Declaration public StyleDeclaration Declarations { get; } Property Value Type Description StyleDeclaration Selector Declaration public BaseSelector Selector { get; set; } Property Value Type Description BaseSelector Value Declaration public string Value { get; set; } Property Value Type Description String Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() ToString(Boolean, Int32) Declaration public override string ToString(bool friendlyFormat, int indentation = 0) Parameters Type Name Description Boolean friendlyFormat Int32 indentation Returns Type Description String Overrides RuleSet.ToString(Boolean, Int32) Implements ISupportsSelector ISupportsDeclarations"
  },
  "api/Svg.ExCSS.Parser.html": {
    "href": "api/Svg.ExCSS.Parser.html",
    "title": "Class Parser | SVG.NET API",
    "keywords": "Class Parser Inheritance Object Parser Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public sealed class Parser Methods Parse(String) Declaration public StyleSheet Parse(string css) Parameters Type Name Description String css Returns Type Description StyleSheet"
  },
  "api/Svg.ExCSS.PageRule.html": {
    "href": "api/Svg.ExCSS.PageRule.html",
    "title": "Class PageRule | SVG.NET API",
    "keywords": "Class PageRule Inheritance Object RuleSet PageRule Implements ISupportsSelector ISupportsDeclarations Inherited Members RuleSet.RuleType Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public class PageRule : RuleSet, ISupportsSelector, ISupportsDeclarations Constructors PageRule() Declaration public PageRule() Properties Declarations Declaration public StyleDeclaration Declarations { get; } Property Value Type Description StyleDeclaration Selector Declaration public BaseSelector Selector { get; set; } Property Value Type Description BaseSelector Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() ToString(Boolean, Int32) Declaration public override string ToString(bool friendlyFormat, int indentation = 0) Parameters Type Name Description Boolean friendlyFormat Int32 indentation Returns Type Description String Overrides RuleSet.ToString(Boolean, Int32) Implements ISupportsSelector ISupportsDeclarations"
  },
  "api/Svg.ExCSS.NamespaceRule.html": {
    "href": "api/Svg.ExCSS.NamespaceRule.html",
    "title": "Class NamespaceRule | SVG.NET API",
    "keywords": "Class NamespaceRule Inheritance Object RuleSet NamespaceRule Inherited Members RuleSet.RuleType Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public class NamespaceRule : RuleSet Constructors NamespaceRule() Declaration public NamespaceRule() Properties Prefix Declaration public string Prefix { get; set; } Property Value Type Description String Uri Declaration public string Uri { get; set; } Property Value Type Description String Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() ToString(Boolean, Int32) Declaration public override string ToString(bool friendlyFormat, int indentation = 0) Parameters Type Name Description Boolean friendlyFormat Int32 indentation Returns Type Description String Overrides RuleSet.ToString(Boolean, Int32)"
  },
  "api/Svg.ExCSS.MultipleSelectorList.html": {
    "href": "api/Svg.ExCSS.MultipleSelectorList.html",
    "title": "Class MultipleSelectorList | SVG.NET API",
    "keywords": "Class MultipleSelectorList Inheritance Object BaseSelector SelectorList MultipleSelectorList Implements IEnumerable < BaseSelector > IEnumerable IToString Inherited Members SelectorList.Selectors SelectorList.Length SelectorList.Item[Int32] SelectorList.AppendSelector(BaseSelector) SelectorList.RemoveSelector(SimpleSelector) SelectorList.ClearSelectors() SelectorList.GetEnumerator() BaseSelector.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public class MultipleSelectorList : SelectorList, IEnumerable<BaseSelector>, IEnumerable, IToString Methods ToString(Boolean, Int32) Declaration public override string ToString(bool friendlyFormat, int indentation = 0) Parameters Type Name Description Boolean friendlyFormat Int32 indentation Returns Type Description String Overrides SelectorList.ToString(Boolean, Int32) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IToString"
  },
  "api/Svg.ExCSS.HtmlColor.html": {
    "href": "api/Svg.ExCSS.HtmlColor.html",
    "title": "Class HtmlColor | SVG.NET API",
    "keywords": "Class HtmlColor Inheritance Object Term HtmlColor Implements IEquatable < HtmlColor > Inherited Members Term.Inherit Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public class HtmlColor : Term, IEquatable<HtmlColor> Constructors HtmlColor(Byte, Byte, Byte) Declaration public HtmlColor(byte r, byte g, byte b) Parameters Type Name Description Byte r Byte g Byte b HtmlColor(Byte, Byte, Byte, Byte) Declaration public HtmlColor(byte a, byte r, byte g, byte b) Parameters Type Name Description Byte a Byte r Byte g Byte b HtmlColor(Double, Byte, Byte, Byte) Declaration public HtmlColor(double a, byte r, byte g, byte b) Parameters Type Name Description Double a Byte r Byte g Byte b Fields A Declaration public byte A Field Value Type Description Byte B Declaration public byte B Field Value Type Description Byte G Declaration public byte G Field Value Type Description Byte R Declaration public byte R Field Value Type Description Byte Properties Alpha Declaration public double Alpha { get; } Property Value Type Description Double Methods Equals(HtmlColor) Declaration public bool Equals(HtmlColor other) Parameters Type Name Description HtmlColor other Returns Type Description Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) FromHex(String) Declaration public static HtmlColor FromHex(string color) Parameters Type Name Description String color Returns Type Description HtmlColor FromHsl(Single, Single, Single) Declaration public static HtmlColor FromHsl(float h, float s, float l) Parameters Type Name Description Single h Single s Single l Returns Type Description HtmlColor FromRgb(Byte, Byte, Byte) Declaration public static HtmlColor FromRgb(byte r, byte g, byte b) Parameters Type Name Description Byte r Byte g Byte b Returns Type Description HtmlColor FromRgba(Byte, Byte, Byte, Double) Declaration public static HtmlColor FromRgba(byte r, byte g, byte b, double a) Parameters Type Name Description Byte r Byte g Byte b Double a Returns Type Description HtmlColor FromRgba(Byte, Byte, Byte, Single) Declaration public static HtmlColor FromRgba(byte r, byte g, byte b, float a) Parameters Type Name Description Byte r Byte g Byte b Single a Returns Type Description HtmlColor GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() ToString(Boolean, Boolean, Int32) Declaration public string ToString(bool forceLong, bool friendlyFormat, int indentation = 0) Parameters Type Name Description Boolean forceLong Boolean friendlyFormat Int32 indentation Returns Type Description String ToString(Boolean, Int32) Declaration public string ToString(bool friendlyFormat, int indentation = 0) Parameters Type Name Description Boolean friendlyFormat Int32 indentation Returns Type Description String TryFromHex(String, out HtmlColor) Declaration public static bool TryFromHex(string color, out HtmlColor htmlColor) Parameters Type Name Description String color HtmlColor htmlColor Returns Type Description Boolean Operators Equality(HtmlColor, HtmlColor) Declaration public static bool operator ==(HtmlColor a, HtmlColor b) Parameters Type Name Description HtmlColor a HtmlColor b Returns Type Description Boolean Inequality(HtmlColor, HtmlColor) Declaration public static bool operator !=(HtmlColor a, HtmlColor b) Parameters Type Name Description HtmlColor a HtmlColor b Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Svg.ExCSS.GenericRule.html": {
    "href": "api/Svg.ExCSS.GenericRule.html",
    "title": "Class GenericRule | SVG.NET API",
    "keywords": "Class GenericRule Inheritance Object RuleSet AggregateRule GenericRule Implements ISupportsRuleSets Inherited Members AggregateRule.RuleSets RuleSet.RuleType Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public class GenericRule : AggregateRule, ISupportsRuleSets Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() ToString(Boolean, Int32) Declaration public override string ToString(bool friendlyFormat, int indentation = 0) Parameters Type Name Description Boolean friendlyFormat Int32 indentation Returns Type Description String Overrides RuleSet.ToString(Boolean, Int32) Implements ISupportsRuleSets"
  },
  "api/Svg.ExCSS.DocumentRule.html": {
    "href": "api/Svg.ExCSS.DocumentRule.html",
    "title": "Class DocumentRule | SVG.NET API",
    "keywords": "Class DocumentRule Inheritance Object RuleSet AggregateRule DocumentRule Implements ISupportsRuleSets Inherited Members AggregateRule.RuleSets RuleSet.RuleType Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public sealed class DocumentRule : AggregateRule, ISupportsRuleSets Properties ConditionText Declaration public string ConditionText { get; } Property Value Type Description String Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() ToString(Boolean, Int32) Declaration public override string ToString(bool friendlyFormat, int indentation = 0) Parameters Type Name Description Boolean friendlyFormat Int32 indentation Returns Type Description String Overrides RuleSet.ToString(Boolean, Int32) Implements ISupportsRuleSets"
  },
  "api/Svg.ExCSS.DocumentFunction.html": {
    "href": "api/Svg.ExCSS.DocumentFunction.html",
    "title": "Enum DocumentFunction | SVG.NET API",
    "keywords": "Enum DocumentFunction Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public enum DocumentFunction Fields Name Description Domain RegExp Url UrlPrefix"
  },
  "api/Svg.ExCSS.ComplexSelector.html": {
    "href": "api/Svg.ExCSS.ComplexSelector.html",
    "title": "Class ComplexSelector | SVG.NET API",
    "keywords": "Class ComplexSelector Inheritance Object BaseSelector ComplexSelector Implements IEnumerable < CombinatorSelector > IEnumerable Inherited Members BaseSelector.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public class ComplexSelector : BaseSelector, IEnumerable<CombinatorSelector>, IEnumerable Constructors ComplexSelector() Declaration public ComplexSelector() Properties Length Declaration public int Length { get; } Property Value Type Description Int32 Methods AppendSelector(BaseSelector, Combinator) Declaration public ComplexSelector AppendSelector(BaseSelector selector, Combinator combinator) Parameters Type Name Description BaseSelector selector Combinator combinator Returns Type Description ComplexSelector GetEnumerator() Declaration public IEnumerator<CombinatorSelector> GetEnumerator() Returns Type Description IEnumerator < CombinatorSelector > ToString(Boolean, Int32) Declaration public override string ToString(bool friendlyFormat, int indentation = 0) Parameters Type Name Description Boolean friendlyFormat Int32 indentation Returns Type Description String Overrides BaseSelector.ToString(Boolean, Int32) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/Svg.ExCSS.CombinatorSelector.html": {
    "href": "api/Svg.ExCSS.CombinatorSelector.html",
    "title": "Struct CombinatorSelector | SVG.NET API",
    "keywords": "Struct CombinatorSelector Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public struct CombinatorSelector Constructors CombinatorSelector(BaseSelector, Combinator) Declaration public CombinatorSelector(BaseSelector selector, Combinator delimiter) Parameters Type Name Description BaseSelector selector Combinator delimiter Fields Delimiter Declaration public Combinator Delimiter Field Value Type Description Combinator Selector Declaration public BaseSelector Selector Field Value Type Description BaseSelector Properties Character Declaration public char Character { get; } Property Value Type Description Char"
  },
  "api/Svg.ExCSS.BaseSelector.html": {
    "href": "api/Svg.ExCSS.BaseSelector.html",
    "title": "Class BaseSelector | SVG.NET API",
    "keywords": "Class BaseSelector Inheritance Object BaseSelector ComplexSelector SelectorList SimpleSelector Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public abstract class BaseSelector Methods ToString() Declaration public override sealed string ToString() Returns Type Description String Overrides Object.ToString() ToString(Boolean, Int32) Declaration public abstract string ToString(bool friendlyFormat, int indentation = 0) Parameters Type Name Description Boolean friendlyFormat Int32 indentation Returns Type Description String"
  },
  "api/Svg.ExCSS.AggregateSelectorList.html": {
    "href": "api/Svg.ExCSS.AggregateSelectorList.html",
    "title": "Class AggregateSelectorList | SVG.NET API",
    "keywords": "Class AggregateSelectorList Inheritance Object BaseSelector SelectorList AggregateSelectorList Implements IEnumerable < BaseSelector > IEnumerable Inherited Members SelectorList.Selectors SelectorList.Length SelectorList.Item[Int32] SelectorList.AppendSelector(BaseSelector) SelectorList.RemoveSelector(SimpleSelector) SelectorList.ClearSelectors() SelectorList.GetEnumerator() BaseSelector.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public class AggregateSelectorList : SelectorList, IEnumerable<BaseSelector>, IEnumerable Constructors AggregateSelectorList(String) Declaration public AggregateSelectorList(string delimiter) Parameters Type Name Description String delimiter Fields Delimiter Declaration public readonly string Delimiter Field Value Type Description String Methods ToString(Boolean, Int32) Declaration public override string ToString(bool friendlyFormat, int indentation = 0) Parameters Type Name Description Boolean friendlyFormat Int32 indentation Returns Type Description String Overrides SelectorList.ToString(Boolean, Int32) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/Fizzler.Token.html": {
    "href": "api/Fizzler.Token.html",
    "title": "Struct Token | SVG.NET API",
    "keywords": "Struct Token Represent a token and optionally any text associated with it. Implements IEquatable < Token > Inherited Members Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : Fizzler Assembly : cs.temp.dll.dll Syntax public struct Token : IEquatable<Token> Properties Kind Gets the kind/type/class of the token. Declaration public TokenKind Kind { get; } Property Value Type Description TokenKind Text Gets text, if any, associated with the token. Declaration public string Text { get; } Property Value Type Description String Methods Char(Char) Creates an arbitrary character token. Declaration public static Token Char(char ch) Parameters Type Name Description Char ch Returns Type Description Token Colon() Creates a colon token. Declaration public static Token Colon() Returns Type Description Token Comma() Creates a comma token. Declaration public static Token Comma() Returns Type Description Token DashMatch() Creates a dash-match token. Declaration public static Token DashMatch() Returns Type Description Token Dot() Creates a dot token. Declaration public static Token Dot() Returns Type Description Token Eoi() Creates an end-of-input token. Declaration public static Token Eoi() Returns Type Description Token Equals() Creates an equals token. Declaration public static Token Equals() Returns Type Description Token Equals(Token) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(Token other) Parameters Type Name Description Token other Returns Type Description Boolean Equals(Object) Indicates whether this instance and a specified object are equal. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) Function(String) Creates a function token. Declaration public static Token Function(string text) Parameters Type Name Description String text Returns Type Description Token GetHashCode() Returns the hash code for this instance. Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() Greater() Creates a greater token. Declaration public static Token Greater() Returns Type Description Token Hash(String) Creates a hash-name token. Declaration public static Token Hash(string text) Parameters Type Name Description String text Returns Type Description Token Ident(String) Creates an identifier token. Declaration public static Token Ident(string text) Parameters Type Name Description String text Returns Type Description Token Includes() Creates an includes token. Declaration public static Token Includes() Returns Type Description Token Integer(String) Creates an integer token. Declaration public static Token Integer(string text) Parameters Type Name Description String text Returns Type Description Token LeftBracket() Creates a left bracket token. Declaration public static Token LeftBracket() Returns Type Description Token Pipe() Creates a pipe (vertical line) token. Declaration public static Token Pipe() Returns Type Description Token Plus() Creates a plus token. Declaration public static Token Plus() Returns Type Description Token PrefixMatch() Creates a prefix-match token. Declaration public static Token PrefixMatch() Returns Type Description Token RightBracket() Creates a right bracket token. Declaration public static Token RightBracket() Returns Type Description Token RightParenthesis() Creates a right parenthesis token. Declaration public static Token RightParenthesis() Returns Type Description Token Star() Creates a star token. Declaration public static Token Star() Returns Type Description Token String(String) Creates a string token. Declaration public static Token String(string text) Parameters Type Name Description String text Returns Type Description Token SubstringMatch() Creates a substring-match token. Declaration public static Token SubstringMatch() Returns Type Description Token SuffixMatch() Creates a suffix-match token. Declaration public static Token SuffixMatch() Returns Type Description Token Tilde() Creates a general sibling token. Declaration public static Token Tilde() Returns Type Description Token ToString() Gets a string representation of the token. Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() WhiteSpace(String) Creates a white-space token. Declaration public static Token WhiteSpace(string space) Parameters Type Name Description String space Returns Type Description Token Operators Equality(Token, Token) Performs a logical comparison of the two tokens to determine whether they are equal. Declaration public static bool operator ==(Token a, Token b) Parameters Type Name Description Token a Token b Returns Type Description Boolean Inequality(Token, Token) Performs a logical comparison of the two tokens to determine whether they are inequal. Declaration public static bool operator !=(Token a, Token b) Parameters Type Name Description Token a Token b Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Fizzler.SelectorGeneratorTee.html": {
    "href": "api/Fizzler.SelectorGeneratorTee.html",
    "title": "Class SelectorGeneratorTee | SVG.NET API",
    "keywords": "Class SelectorGeneratorTee An ISelectorGenerator implementation that delegates to two other ISelectorGenerator objects, which can be useful for doing work in a single pass. Inheritance Object SelectorGeneratorTee Implements ISelectorGenerator Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Fizzler Assembly : cs.temp.dll.dll Syntax public sealed class SelectorGeneratorTee : ISelectorGenerator Constructors SelectorGeneratorTee(ISelectorGenerator, ISelectorGenerator) Initializes a new instance of SelectorGeneratorTee with the two other ISelectorGenerator objects it delegates to. Declaration public SelectorGeneratorTee(ISelectorGenerator primary, ISelectorGenerator secondary) Parameters Type Name Description ISelectorGenerator primary ISelectorGenerator secondary Properties Primary Gets the first generator used to initialize this generator. Declaration public ISelectorGenerator Primary { get; } Property Value Type Description ISelectorGenerator Secondary Gets the second generator used to initialize this generator. Declaration public ISelectorGenerator Secondary { get; } Property Value Type Description ISelectorGenerator Methods Adjacent() Delegates to Primary then Secondary generator. Declaration public void Adjacent() AttributeDashMatch(NamespacePrefix, String, String) Delegates to Primary then Secondary generator. Declaration public void AttributeDashMatch(NamespacePrefix prefix, string name, string value) Parameters Type Name Description NamespacePrefix prefix String name String value AttributeExact(NamespacePrefix, String, String) Delegates to Primary then Secondary generator. Declaration public void AttributeExact(NamespacePrefix prefix, string name, string value) Parameters Type Name Description NamespacePrefix prefix String name String value AttributeExists(NamespacePrefix, String) Delegates to Primary then Secondary generator. Declaration public void AttributeExists(NamespacePrefix prefix, string name) Parameters Type Name Description NamespacePrefix prefix String name AttributeIncludes(NamespacePrefix, String, String) Delegates to Primary then Secondary generator. Declaration public void AttributeIncludes(NamespacePrefix prefix, string name, string value) Parameters Type Name Description NamespacePrefix prefix String name String value AttributePrefixMatch(NamespacePrefix, String, String) Delegates to Primary then Secondary generator. Declaration public void AttributePrefixMatch(NamespacePrefix prefix, string name, string value) Parameters Type Name Description NamespacePrefix prefix String name String value AttributeSubstring(NamespacePrefix, String, String) Delegates to Primary then Secondary generator. Declaration public void AttributeSubstring(NamespacePrefix prefix, string name, string value) Parameters Type Name Description NamespacePrefix prefix String name String value AttributeSuffixMatch(NamespacePrefix, String, String) Delegates to Primary then Secondary generator. Declaration public void AttributeSuffixMatch(NamespacePrefix prefix, string name, string value) Parameters Type Name Description NamespacePrefix prefix String name String value Child() Delegates to Primary then Secondary generator. Declaration public void Child() Class(String) Delegates to Primary then Secondary generator. Declaration public void Class(string clazz) Parameters Type Name Description String clazz Descendant() Delegates to Primary then Secondary generator. Declaration public void Descendant() Empty() Delegates to Primary then Secondary generator. Declaration public void Empty() FirstChild() Delegates to Primary then Secondary generator. Declaration public void FirstChild() GeneralSibling() Delegates to Primary then Secondary generator. Declaration public void GeneralSibling() Id(String) Delegates to Primary then Secondary generator. Declaration public void Id(string id) Parameters Type Name Description String id LastChild() Delegates to Primary then Secondary generator. Declaration public void LastChild() NthChild(Int32, Int32) Delegates to Primary then Secondary generator. Declaration public void NthChild(int a, int b) Parameters Type Name Description Int32 a Int32 b NthLastChild(Int32, Int32) Delegates to Primary then Secondary generator. Declaration public void NthLastChild(int a, int b) Parameters Type Name Description Int32 a Int32 b OnClose() Delegates to Primary then Secondary generator. Declaration public void OnClose() OnInit() Delegates to Primary then Secondary generator. Declaration public void OnInit() OnlyChild() Delegates to Primary then Secondary generator. Declaration public void OnlyChild() OnSelector() Delegates to Primary then Secondary generator. Declaration public void OnSelector() Type(NamespacePrefix, String) Delegates to Primary then Secondary generator. Declaration public void Type(NamespacePrefix prefix, string type) Parameters Type Name Description NamespacePrefix prefix String type Universal(NamespacePrefix) Delegates to Primary then Secondary generator. Declaration public void Universal(NamespacePrefix prefix) Parameters Type Name Description NamespacePrefix prefix Implements ISelectorGenerator"
  },
  "api/Fizzler.Selector-1.html": {
    "href": "api/Fizzler.Selector-1.html",
    "title": "Delegate Selector<TElement> | SVG.NET API",
    "keywords": "Delegate Selector<TElement> Represents a selector implementation over an arbitrary type of elements. Namespace : Fizzler Assembly : cs.temp.dll.dll Syntax public delegate IEnumerable<TElement> Selector<TElement>(IEnumerable<TElement> elements); Parameters Type Name Description IEnumerable <TElement> elements Returns Type Description IEnumerable <TElement> Type Parameters Name Description TElement"
  },
  "api/Fizzler.NamespacePrefix.html": {
    "href": "api/Fizzler.NamespacePrefix.html",
    "title": "Struct NamespacePrefix | SVG.NET API",
    "keywords": "Struct NamespacePrefix Represent a type or attribute name. Inherited Members Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : Fizzler Assembly : cs.temp.dll.dll Syntax [Serializable] public struct NamespacePrefix Constructors NamespacePrefix(String) Initializes an instance with a namespace prefix specification. Declaration public NamespacePrefix(string text) Parameters Type Name Description String text Fields Any Represents any namespace. Declaration public static readonly NamespacePrefix Any Field Value Type Description NamespacePrefix Empty Represents an empty namespace. Declaration public static readonly NamespacePrefix Empty Field Value Type Description NamespacePrefix None Represents a name from either the default or any namespace in a target document, depending on whether a default namespace is in effect or not. Declaration public static readonly NamespacePrefix None Field Value Type Description NamespacePrefix Properties IsAny Indicates whether this instance represents a name from any namespace (including one without one) in a target document. Declaration public bool IsAny { get; } Property Value Type Description Boolean IsEmpty Indicates whether this instance represents a name without a namespace in a target document. Declaration public bool IsEmpty { get; } Property Value Type Description Boolean IsNone Indicates whether this instance represents a name from either the default or any namespace in a target document, depending on whether a default namespace is in effect or not. Declaration public bool IsNone { get; } Property Value Type Description Boolean IsSpecific Indicates whether this instance represents a name from a specific namespace or not. Declaration public bool IsSpecific { get; } Property Value Type Description Boolean Text Gets the raw text value of this instance. Declaration public string Text { get; } Property Value Type Description String Methods Equals(NamespacePrefix) Indicates whether this instance and another are equal. Declaration public bool Equals(NamespacePrefix other) Parameters Type Name Description NamespacePrefix other Returns Type Description Boolean Equals(Object) Indicates whether this instance and a specified object are equal. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) Format(String) Formats this namespace together with a name. Declaration public string Format(string name) Parameters Type Name Description String name Returns Type Description String GetHashCode() Returns the hash code for this instance. Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() ToString() Returns a string representation of this instance. Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString()"
  },
  "api/ExCSS.CssParser.html": {
    "href": "api/ExCSS.CssParser.html",
    "title": "Class CssParser | SVG.NET API",
    "keywords": "Class CssParser Inheritance Object CssParser Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : ExCSS Assembly : cs.temp.dll.dll Syntax public sealed class CssParser Properties IsAsync Gets if the parser has been started asynchronously. Declaration public bool IsAsync { get; } Property Value Type Description Boolean IsQuirksMode Gets or sets if the quirks-mode is activated. Declaration public bool IsQuirksMode { get; set; } Property Value Type Description Boolean Methods Parse() Parses the given source code. Declaration public void Parse() ParseAsync() Parses the given source asynchronously and creates the stylesheet. Declaration public Task ParseAsync() Returns Type Description Task The task which could be awaited or continued differently. ParseDeclaration(String, Boolean) Takes a string and transforms it into a CSS declaration (CSS property). Declaration public static CSSProperty ParseDeclaration(string declarations, bool quirksMode = false) Parameters Type Name Description String declarations The string to parse. Boolean quirksMode Optional: The status of the quirks mode flag (usually not set). Returns Type Description CSSProperty The CSSProperty object. ParseDeclarations(String, Boolean) Takes a string and transforms it into CSS declarations. Declaration public static CSSStyleDeclaration ParseDeclarations(string declarations, bool quirksMode = false) Parameters Type Name Description String declarations The string to parse. Boolean quirksMode Optional: The status of the quirks mode flag (usually not set). Returns Type Description CSSStyleDeclaration The CSSStyleDeclaration object. ParseRule(String, Boolean) Takes a string and transforms it into a CSS rule. Declaration public static CSSRule ParseRule(string rule, bool quirksMode = false) Parameters Type Name Description String rule The string to parse. Boolean quirksMode Optional: The status of the quirks mode flag (usually not set). Returns Type Description CSSRule The CSSRule object. ParseSelector(String) Takes a string and transforms it into a selector object. Declaration public static Selector ParseSelector(string selector) Parameters Type Name Description String selector The string to parse. Returns Type Description Selector The Selector object. ParseStyleSheet(String, Boolean) Takes a string and transforms it into a CSS stylesheet. Declaration public static CSSStyleSheet ParseStyleSheet(string stylesheet, bool quirksMode = false) Parameters Type Name Description String stylesheet The string to parse. Boolean quirksMode Optional: The status of the quirks mode flag (usually not set). Returns Type Description CSSStyleSheet The CSSStyleSheet object. ParseValue(String, Boolean) Takes a string and transforms it into a CSS value. Declaration public static CSSValue ParseValue(string source, bool quirksMode = false) Parameters Type Name Description String source The string to parse. Boolean quirksMode Optional: The status of the quirks mode flag (usually not set). Returns Type Description CSSValue The CSSValue object."
  },
  "api/Svg.SvgTextRef.html": {
    "href": "api/Svg.SvgTextRef.html",
    "title": "Class SvgTextRef | SVG.NET API",
    "keywords": "Class SvgTextRef Inheritance Object SvgElement SvgVisualElement SvgTextBase SvgTextRef Implements ISvgTransformable ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable Inherited Members SvgTextBase.Text SvgTextBase.SpaceHandling SvgTextBase.X SvgTextBase.Dx SvgTextBase.Y SvgTextBase.Dy SvgTextBase.Rotate SvgTextBase.TextLength SvgTextBase.LengthAdjust SvgTextBase.LetterSpacing SvgTextBase.WordSpacing SvgTextBase.Fill SvgTextBase.ToString() SvgTextBase.Bounds SvgTextBase.RenderFillAndStroke(ISvgRenderer) SvgTextBase.GetBaselinePath(ISvgRenderer) SvgTextBase.GetAuthorPathLength() SvgTextBase.Path(ISvgRenderer) SvgTextBase.PrepareText(String) SvgTextBase.Change SvgTextBase.OnChange(String, String) SvgTextBase.RaiseChange(Object, StringArg) SvgTextBase.ShouldWriteElement() SvgVisualElement.ISvgBoundable.Location SvgVisualElement.ISvgBoundable.Size SvgVisualElement.Clip SvgVisualElement.ClipPath SvgVisualElement.ClipRule SvgVisualElement.Filter SvgVisualElement.RequiresSmoothRendering SvgVisualElement.Renderable SvgVisualElement.Render(ISvgRenderer) SvgVisualElement.RenderFill(ISvgRenderer) SvgVisualElement.RenderStroke(ISvgRenderer) SvgVisualElement.SetClip(ISvgRenderer) SvgVisualElement.ResetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.SetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.ResetClip(ISvgRenderer) SvgVisualElement.Visible SvgVisualElement.Display SvgVisualElement.Displayable SvgVisualElement.EnableBackground SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"tref\")] public class SvgTextRef : SvgTextBase, ISvgElement, ISvgTransformable, ICloneable, ISvgNode, ISvgBoundable, ISvgStylable, ISvgClipable Properties ReferencedElement Declaration [SvgAttribute(\"href\", \"http://www.w3.org/1999/xlink\")] public virtual Uri ReferencedElement { get; set; } Property Value Type Description Uri Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgVisualElement.DeepCopy<T>() Implements ISvgTransformable System.ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable"
  },
  "api/Svg.SvgTextPathSpacingConverter.html": {
    "href": "api/Svg.SvgTextPathSpacingConverter.html",
    "title": "Class SvgTextPathSpacingConverter | SVG.NET API",
    "keywords": "Class SvgTextPathSpacingConverter Inheritance Object BaseConverter EnumBaseConverter < SvgTextPathSpacing > SvgTextPathSpacingConverter Inherited Members EnumBaseConverter<SvgTextPathSpacing>.CaseHandlingMode EnumBaseConverter<SvgTextPathSpacing>.DefaultValue EnumBaseConverter<SvgTextPathSpacing>.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) EnumBaseConverter<SvgTextPathSpacing>.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type) BaseConverter.CanConvertFrom(ITypeDescriptorContext, Type) BaseConverter.CanConvertTo(ITypeDescriptorContext, Type) Namespace : Svg Assembly : cs.temp.dll.dll Syntax public sealed class SvgTextPathSpacingConverter : EnumBaseConverter<SvgTextPathSpacing> Constructors SvgTextPathSpacingConverter() Declaration public SvgTextPathSpacingConverter()"
  },
  "api/Svg.SvgTextPathSpacing.html": {
    "href": "api/Svg.SvgTextPathSpacing.html",
    "title": "Enum SvgTextPathSpacing | SVG.NET API",
    "keywords": "Enum SvgTextPathSpacing Indicates how the user agent should determine the spacing between glyphs that are to be rendered along a path. Namespace : Svg Assembly : cs.temp.dll.dll Syntax public enum SvgTextPathSpacing Fields Name Description Auto Indicates that the user agent should use text-on-a-path layout algorithms to adjust the spacing between glyphs in order to achieve visually appealing results. Exact Indicates that the glyphs should be rendered exactly according to the spacing rules as specified in Text on a path layout rules."
  },
  "api/Svg.SvgTextPathMethodConverter.html": {
    "href": "api/Svg.SvgTextPathMethodConverter.html",
    "title": "Class SvgTextPathMethodConverter | SVG.NET API",
    "keywords": "Class SvgTextPathMethodConverter Inheritance Object BaseConverter EnumBaseConverter < SvgTextPathMethod > SvgTextPathMethodConverter Inherited Members EnumBaseConverter<SvgTextPathMethod>.CaseHandlingMode EnumBaseConverter<SvgTextPathMethod>.DefaultValue EnumBaseConverter<SvgTextPathMethod>.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) EnumBaseConverter<SvgTextPathMethod>.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type) BaseConverter.CanConvertFrom(ITypeDescriptorContext, Type) BaseConverter.CanConvertTo(ITypeDescriptorContext, Type) Namespace : Svg Assembly : cs.temp.dll.dll Syntax public sealed class SvgTextPathMethodConverter : EnumBaseConverter<SvgTextPathMethod> Constructors SvgTextPathMethodConverter() Declaration public SvgTextPathMethodConverter()"
  },
  "api/Svg.SvgTextPathMethod.html": {
    "href": "api/Svg.SvgTextPathMethod.html",
    "title": "Enum SvgTextPathMethod | SVG.NET API",
    "keywords": "Enum SvgTextPathMethod Indicates the method by which text should be rendered along the path. Namespace : Svg Assembly : cs.temp.dll.dll Syntax public enum SvgTextPathMethod Fields Name Description Align Indicates that the glyphs should be rendered using simple 2x3 transformations such that there is no stretching/warping of the glyphs. Typically, supplemental rotation, scaling and translation transformations are done for each glyph to be rendered. As a result, with align, fonts where the glyphs are designed to be connected (e.g., cursive fonts), the connections may not align properly when text is rendered along a path. Stretch Indicates that the glyph outlines will be converted into paths, and then all end points and control points will be adjusted to be along the perpendicular vectors from the path, thereby stretching and possibly warping the glyphs. With this approach, connected glyphs, such as in cursive scripts, will maintain their connections."
  },
  "api/Svg.SvgTextPath.html": {
    "href": "api/Svg.SvgTextPath.html",
    "title": "Class SvgTextPath | SVG.NET API",
    "keywords": "Class SvgTextPath The SvgText element defines a graphics element consisting of text. Inheritance Object SvgElement SvgVisualElement SvgTextBase SvgTextPath Implements ISvgTransformable ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable Inherited Members SvgTextBase.Text SvgTextBase.SpaceHandling SvgTextBase.X SvgTextBase.Y SvgTextBase.Dy SvgTextBase.Rotate SvgTextBase.TextLength SvgTextBase.LengthAdjust SvgTextBase.LetterSpacing SvgTextBase.WordSpacing SvgTextBase.Fill SvgTextBase.ToString() SvgTextBase.Bounds SvgTextBase.RenderFillAndStroke(ISvgRenderer) SvgTextBase.Path(ISvgRenderer) SvgTextBase.PrepareText(String) SvgTextBase.Change SvgTextBase.OnChange(String, String) SvgTextBase.RaiseChange(Object, StringArg) SvgTextBase.ShouldWriteElement() SvgVisualElement.ISvgBoundable.Location SvgVisualElement.ISvgBoundable.Size SvgVisualElement.Clip SvgVisualElement.ClipPath SvgVisualElement.ClipRule SvgVisualElement.Filter SvgVisualElement.RequiresSmoothRendering SvgVisualElement.Renderable SvgVisualElement.Render(ISvgRenderer) SvgVisualElement.RenderFill(ISvgRenderer) SvgVisualElement.RenderStroke(ISvgRenderer) SvgVisualElement.SetClip(ISvgRenderer) SvgVisualElement.ResetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.SetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.ResetClip(ISvgRenderer) SvgVisualElement.DeepCopy<T>() SvgVisualElement.Visible SvgVisualElement.Display SvgVisualElement.Displayable SvgVisualElement.EnableBackground SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"textPath\")] public class SvgTextPath : SvgTextBase, ISvgElement, ISvgTransformable, ICloneable, ISvgNode, ISvgBoundable, ISvgStylable, ISvgClipable Properties Dx Declaration public override SvgUnitCollection Dx { get; set; } Property Value Type Description SvgUnitCollection Overrides SvgTextBase.Dx Method Declaration public virtual SvgTextPathMethod Method { get; set; } Property Value Type Description SvgTextPathMethod ReferencedPath Declaration [SvgAttribute(\"href\", \"http://www.w3.org/1999/xlink\")] public virtual Uri ReferencedPath { get; set; } Property Value Type Description Uri Spacing Declaration public virtual SvgTextPathSpacing Spacing { get; set; } Property Value Type Description SvgTextPathSpacing StartOffset Declaration public virtual SvgUnit StartOffset { get; set; } Property Value Type Description SvgUnit Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() GetAuthorPathLength() Declaration protected override float GetAuthorPathLength() Returns Type Description Single Overrides SvgTextBase.GetAuthorPathLength() GetBaselinePath(ISvgRenderer) Declaration protected override GraphicsPath GetBaselinePath(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer Returns Type Description GraphicsPath Overrides SvgTextBase.GetBaselinePath(ISvgRenderer) Implements ISvgTransformable System.ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable"
  },
  "api/Svg.SvgTextLengthAdjustConverter.html": {
    "href": "api/Svg.SvgTextLengthAdjustConverter.html",
    "title": "Class SvgTextLengthAdjustConverter | SVG.NET API",
    "keywords": "Class SvgTextLengthAdjustConverter Inheritance Object BaseConverter EnumBaseConverter < SvgTextLengthAdjust > SvgTextLengthAdjustConverter Inherited Members EnumBaseConverter<SvgTextLengthAdjust>.CaseHandlingMode EnumBaseConverter<SvgTextLengthAdjust>.DefaultValue EnumBaseConverter<SvgTextLengthAdjust>.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) EnumBaseConverter<SvgTextLengthAdjust>.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type) BaseConverter.CanConvertFrom(ITypeDescriptorContext, Type) BaseConverter.CanConvertTo(ITypeDescriptorContext, Type) Namespace : Svg Assembly : cs.temp.dll.dll Syntax public sealed class SvgTextLengthAdjustConverter : EnumBaseConverter<SvgTextLengthAdjust> Constructors SvgTextLengthAdjustConverter() Declaration public SvgTextLengthAdjustConverter()"
  },
  "api/Svg.SvgTextLengthAdjust.html": {
    "href": "api/Svg.SvgTextLengthAdjust.html",
    "title": "Enum SvgTextLengthAdjust | SVG.NET API",
    "keywords": "Enum SvgTextLengthAdjust Indicates the type of adjustments which the user agent shall make to make the rendered length of the text match the value specified on the ‘textLength’ attribute. Namespace : Svg Assembly : cs.temp.dll.dll Syntax public enum SvgTextLengthAdjust Remarks The user agent is required to achieve correct start and end positions for the text strings, but the locations of intermediate glyphs are not predictable because user agents might employ advanced algorithms to stretch or compress text strings in order to balance correct start and end positioning with optimal typography. Note that, for a text string that contains n characters, the adjustments to the advance values often occur only for n−1 characters (see description of attribute ‘textLength’), whereas stretching or compressing of the glyphs will be applied to all n characters. Fields Name Description Spacing Indicates that only the advance values are adjusted. The glyphs themselves are not stretched or compressed. SpacingAndGlyphs Indicates that the advance values are adjusted and the glyphs themselves stretched or compressed in one axis (i.e., a direction parallel to the inline-progression-direction)."
  },
  "api/Svg.SvgTextDecorationConverter.html": {
    "href": "api/Svg.SvgTextDecorationConverter.html",
    "title": "Class SvgTextDecorationConverter | SVG.NET API",
    "keywords": "Class SvgTextDecorationConverter Inheritance Object BaseConverter EnumBaseConverter < SvgTextDecoration > SvgTextDecorationConverter Inherited Members EnumBaseConverter<SvgTextDecoration>.CaseHandlingMode EnumBaseConverter<SvgTextDecoration>.DefaultValue BaseConverter.CanConvertFrom(ITypeDescriptorContext, Type) BaseConverter.CanConvertTo(ITypeDescriptorContext, Type) Namespace : Svg Assembly : cs.temp.dll.dll Syntax public sealed class SvgTextDecorationConverter : EnumBaseConverter<SvgTextDecoration> Constructors SvgTextDecorationConverter() Declaration public SvgTextDecorationConverter() Methods ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) Declaration public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) Parameters Type Name Description ITypeDescriptorContext context CultureInfo culture Object value Returns Type Description Object Overrides Svg.EnumBaseConverter<Svg.SvgTextDecoration>.ConvertFrom(ITypeDescriptorContext, CultureInfo, System.Object) ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type) Declaration public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType) Parameters Type Name Description ITypeDescriptorContext context CultureInfo culture Object value Type destinationType Returns Type Description Object Overrides Svg.EnumBaseConverter<Svg.SvgTextDecoration>.ConvertTo(ITypeDescriptorContext, CultureInfo, System.Object, System.Type)"
  },
  "api/Svg.SvgTextDecoration.html": {
    "href": "api/Svg.SvgTextDecoration.html",
    "title": "Enum SvgTextDecoration | SVG.NET API",
    "keywords": "Enum SvgTextDecoration This property describes decorations that are added to the text of an element. Conforming SVG Viewers are not required to support the blink value. Namespace : Svg Assembly : cs.temp.dll.dll Syntax [Flags] public enum SvgTextDecoration Fields Name Description Blink The text will blink. Inherit The value is inherited from the parent element. LineThrough The text is struck through. None The text is not decorated Overline The text is overlined. Underline The text is underlined."
  },
  "api/Svg.SvgPolyline.html": {
    "href": "api/Svg.SvgPolyline.html",
    "title": "Class SvgPolyline | SVG.NET API",
    "keywords": "Class SvgPolyline SvgPolyline defines a set of connected straight line segments. Typically, SvgPolyline defines open shapes. Inheritance Object SvgElement SvgVisualElement SvgPathBasedElement SvgMarkerElement SvgPolygon SvgPolyline Implements ISvgTransformable ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable Inherited Members SvgPolygon.Points SvgPolygon.DeepCopy<T>() SvgMarkerElement.MarkerEnd SvgMarkerElement.MarkerMid SvgMarkerElement.MarkerStart SvgMarkerElement.RenderStroke(ISvgRenderer) SvgPathBasedElement.Bounds SvgVisualElement.ISvgBoundable.Location SvgVisualElement.ISvgBoundable.Size SvgVisualElement.Clip SvgVisualElement.ClipPath SvgVisualElement.ClipRule SvgVisualElement.Filter SvgVisualElement.RequiresSmoothRendering SvgVisualElement.Renderable SvgVisualElement.Render(ISvgRenderer) SvgVisualElement.RenderFillAndStroke(ISvgRenderer) SvgVisualElement.RenderFill(ISvgRenderer) SvgVisualElement.SetClip(ISvgRenderer) SvgVisualElement.ResetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.SetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.ResetClip(ISvgRenderer) SvgVisualElement.Visible SvgVisualElement.Display SvgVisualElement.Displayable SvgVisualElement.EnableBackground SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"polyline\")] public class SvgPolyline : SvgPolygon, ISvgElement, ISvgTransformable, ICloneable, ISvgNode, ISvgBoundable, ISvgStylable, ISvgClipable Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgPolygon.DeepCopy() Path(ISvgRenderer) Declaration public override GraphicsPath Path(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer Returns Type Description GraphicsPath Overrides SvgPolygon.Path(ISvgRenderer) Implements ISvgTransformable System.ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable"
  },
  "api/Svg.SvgPolygon.html": {
    "href": "api/Svg.SvgPolygon.html",
    "title": "Class SvgPolygon | SVG.NET API",
    "keywords": "Class SvgPolygon SvgPolygon defines a closed shape consisting of a set of connected straight line segments. Inheritance Object SvgElement SvgVisualElement SvgPathBasedElement SvgMarkerElement SvgPolygon SvgPolyline Implements ISvgTransformable ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable Inherited Members SvgMarkerElement.MarkerEnd SvgMarkerElement.MarkerMid SvgMarkerElement.MarkerStart SvgMarkerElement.RenderStroke(ISvgRenderer) SvgPathBasedElement.Bounds SvgVisualElement.ISvgBoundable.Location SvgVisualElement.ISvgBoundable.Size SvgVisualElement.Clip SvgVisualElement.ClipPath SvgVisualElement.ClipRule SvgVisualElement.Filter SvgVisualElement.RequiresSmoothRendering SvgVisualElement.Renderable SvgVisualElement.Render(ISvgRenderer) SvgVisualElement.RenderFillAndStroke(ISvgRenderer) SvgVisualElement.RenderFill(ISvgRenderer) SvgVisualElement.SetClip(ISvgRenderer) SvgVisualElement.ResetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.SetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.ResetClip(ISvgRenderer) SvgVisualElement.Visible SvgVisualElement.Display SvgVisualElement.Displayable SvgVisualElement.EnableBackground SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"polygon\")] public class SvgPolygon : SvgMarkerElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode, ISvgBoundable, ISvgStylable, ISvgClipable Properties Points The points that make up the SvgPolygon Declaration public SvgPointCollection Points { get; set; } Property Value Type Description SvgPointCollection Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgVisualElement.DeepCopy<T>() Path(ISvgRenderer) Declaration public override GraphicsPath Path(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer Returns Type Description GraphicsPath Overrides SvgVisualElement.Path(ISvgRenderer) Implements ISvgTransformable System.ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable"
  },
  "api/Svg.SvgPointCollection.html": {
    "href": "api/Svg.SvgPointCollection.html",
    "title": "Class SvgPointCollection | SVG.NET API",
    "keywords": "Class SvgPointCollection Represents a list of SvgUnit used with the SvgPolyline and SvgPolygon . Inheritance Object List < SvgUnit > SvgPointCollection Implements IList < SvgUnit > ICollection < SvgUnit > IList ICollection IReadOnlyList < SvgUnit > IReadOnlyCollection < SvgUnit > IEnumerable < SvgUnit > IEnumerable Inherited Members System.Collections.Generic.List<Svg.SvgUnit>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<Svg.SvgUnit>.System.Collections.IList.set_Item(System.Int32, System.Object) List<SvgUnit>.Add(SvgUnit) List<SvgUnit>.IList.Add(Object) List<SvgUnit>.AddRange(IEnumerable<SvgUnit>) List<SvgUnit>.AsReadOnly() List<SvgUnit>.BinarySearch(Int32, Int32, SvgUnit, IComparer<SvgUnit>) List<SvgUnit>.BinarySearch(SvgUnit) List<SvgUnit>.BinarySearch(SvgUnit, IComparer<SvgUnit>) List<SvgUnit>.Clear() List<SvgUnit>.Contains(SvgUnit) List<SvgUnit>.IList.Contains(Object) List<SvgUnit>.ConvertAll<TOutput>(Converter<SvgUnit, TOutput>) List<SvgUnit>.CopyTo(SvgUnit[]) List<SvgUnit>.ICollection.CopyTo(Array, Int32) List<SvgUnit>.CopyTo(Int32, SvgUnit[], Int32, Int32) List<SvgUnit>.CopyTo(SvgUnit[], Int32) List<SvgUnit>.Exists(Predicate<SvgUnit>) List<SvgUnit>.Find(Predicate<SvgUnit>) List<SvgUnit>.FindAll(Predicate<SvgUnit>) List<SvgUnit>.FindIndex(Predicate<SvgUnit>) List<SvgUnit>.FindIndex(Int32, Predicate<SvgUnit>) List<SvgUnit>.FindIndex(Int32, Int32, Predicate<SvgUnit>) List<SvgUnit>.FindLast(Predicate<SvgUnit>) List<SvgUnit>.FindLastIndex(Predicate<SvgUnit>) List<SvgUnit>.FindLastIndex(Int32, Predicate<SvgUnit>) List<SvgUnit>.FindLastIndex(Int32, Int32, Predicate<SvgUnit>) List<SvgUnit>.ForEach(Action<SvgUnit>) List<SvgUnit>.GetEnumerator() List<SvgUnit>.IEnumerable<SvgUnit>.GetEnumerator() List<SvgUnit>.IEnumerable.GetEnumerator() List<SvgUnit>.GetRange(Int32, Int32) List<SvgUnit>.IndexOf(SvgUnit) List<SvgUnit>.IList.IndexOf(Object) List<SvgUnit>.IndexOf(SvgUnit, Int32) List<SvgUnit>.IndexOf(SvgUnit, Int32, Int32) List<SvgUnit>.Insert(Int32, SvgUnit) List<SvgUnit>.IList.Insert(Int32, Object) List<SvgUnit>.InsertRange(Int32, IEnumerable<SvgUnit>) List<SvgUnit>.LastIndexOf(SvgUnit) List<SvgUnit>.LastIndexOf(SvgUnit, Int32) List<SvgUnit>.LastIndexOf(SvgUnit, Int32, Int32) List<SvgUnit>.Remove(SvgUnit) List<SvgUnit>.IList.Remove(Object) List<SvgUnit>.RemoveAll(Predicate<SvgUnit>) List<SvgUnit>.RemoveAt(Int32) List<SvgUnit>.RemoveRange(Int32, Int32) List<SvgUnit>.Reverse() List<SvgUnit>.Reverse(Int32, Int32) List<SvgUnit>.Sort() List<SvgUnit>.Sort(IComparer<SvgUnit>) List<SvgUnit>.Sort(Int32, Int32, IComparer<SvgUnit>) List<SvgUnit>.Sort(Comparison<SvgUnit>) List<SvgUnit>.ToArray() List<SvgUnit>.TrimExcess() List<SvgUnit>.TrueForAll(Predicate<SvgUnit>) List<SvgUnit>.Capacity List<SvgUnit>.Count List<SvgUnit>.IList.IsFixedSize List<SvgUnit>.ICollection<SvgUnit>.IsReadOnly List<SvgUnit>.IList.IsReadOnly List<SvgUnit>.ICollection.IsSynchronized List<SvgUnit>.ICollection.SyncRoot List<SvgUnit>.Item[Int32] List<SvgUnit>.IList.Item[Int32] Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class SvgPointCollection : List<SvgUnit>, IList<SvgUnit>, ICollection<SvgUnit>, IList, ICollection, IReadOnlyList<SvgUnit>, IReadOnlyCollection<SvgUnit>, IEnumerable<SvgUnit>, IEnumerable Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.IList System.Collections.ICollection System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/Svg.SvgPoint.html": {
    "href": "api/Svg.SvgPoint.html",
    "title": "Struct SvgPoint | SVG.NET API",
    "keywords": "Struct SvgPoint Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public struct SvgPoint Constructors SvgPoint(SvgUnit, SvgUnit) Declaration public SvgPoint(SvgUnit x, SvgUnit y) Parameters Type Name Description SvgUnit x SvgUnit y SvgPoint(String, String) Declaration public SvgPoint(string x, string y) Parameters Type Name Description String x String y Properties X Declaration public SvgUnit X { get; set; } Property Value Type Description SvgUnit Y Declaration public SvgUnit Y { get; set; } Property Value Type Description SvgUnit Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() IsEmpty() Declaration public bool IsEmpty() Returns Type Description Boolean ToDeviceValue(ISvgRenderer, SvgElement) Declaration public PointF ToDeviceValue(ISvgRenderer renderer, SvgElement owner) Parameters Type Name Description ISvgRenderer renderer SvgElement owner Returns Type Description PointF"
  },
  "api/Svg.SvgPatternServer.html": {
    "href": "api/Svg.SvgPatternServer.html",
    "title": "Class SvgPatternServer | SVG.NET API",
    "keywords": "Class SvgPatternServer A pattern is used to fill or stroke an object using a pre-defined graphic object which can be replicated (\"tiled\") at fixed intervals in x and y to cover the areas to be painted. Inheritance Object SvgElement SvgPaintServer SvgPatternServer Implements ISvgTransformable ICloneable ISvgNode ISvgViewPort Inherited Members SvgPaintServer.GetCallback SvgPaintServer.None SvgPaintServer.Render(ISvgRenderer) SvgPaintServer.ToString() SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"pattern\")] public sealed class SvgPatternServer : SvgPaintServer, ISvgElement, ISvgTransformable, ICloneable, ISvgNode, ISvgViewPort Properties AspectRatio Gets or sets the aspect of the viewport. Declaration public SvgAspectRatio AspectRatio { get; set; } Property Value Type Description SvgAspectRatio Height Gets or sets the height of the pattern. Declaration public SvgUnit Height { get; set; } Property Value Type Description SvgUnit InheritGradient Gets or sets another gradient fill from which to inherit the stops from. Declaration [SvgAttribute(\"href\", \"http://www.w3.org/1999/xlink\")] public SvgPaintServer InheritGradient { get; set; } Property Value Type Description SvgPaintServer Overflow Declaration public SvgOverflow Overflow { get; set; } Property Value Type Description SvgOverflow PatternContentUnits Gets or sets the width of the pattern. Declaration public SvgCoordinateUnits PatternContentUnits { get; set; } Property Value Type Description SvgCoordinateUnits PatternTransform Declaration public SvgTransformCollection PatternTransform { get; set; } Property Value Type Description SvgTransformCollection PatternUnits Gets or sets the width of the pattern. Declaration public SvgCoordinateUnits PatternUnits { get; set; } Property Value Type Description SvgCoordinateUnits ViewBox Specifies a supplemental transformation which is applied on top of any transformations necessary to create a new pattern coordinate system. Declaration public SvgViewBox ViewBox { get; set; } Property Value Type Description SvgViewBox Width Gets or sets the width of the pattern. Declaration public SvgUnit Width { get; set; } Property Value Type Description SvgUnit X Gets or sets the X-axis location of the pattern. Declaration public SvgUnit X { get; set; } Property Value Type Description SvgUnit Y Gets or sets the Y-axis location of the pattern. Declaration public SvgUnit Y { get; set; } Property Value Type Description SvgUnit Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgElement.DeepCopy<T>() GetBrush(SvgVisualElement, ISvgRenderer, Single, Boolean) Gets a representing the current paint server. Declaration public override Brush GetBrush(SvgVisualElement renderingElement, ISvgRenderer renderer, float opacity, bool forStroke = false) Parameters Type Name Description SvgVisualElement renderingElement The owner SvgVisualElement . ISvgRenderer renderer The renderer object. Single opacity The opacity of the brush. Boolean forStroke Not used. Returns Type Description Brush Overrides SvgPaintServer.GetBrush(SvgVisualElement, ISvgRenderer, Single, Boolean) Implements ISvgTransformable System.ICloneable ISvgNode ISvgViewPort"
  },
  "api/Svg.SvgPathBuilder.html": {
    "href": "api/Svg.SvgPathBuilder.html",
    "title": "Class SvgPathBuilder | SVG.NET API",
    "keywords": "Class SvgPathBuilder Inheritance Object SvgPathBuilder Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class SvgPathBuilder : TypeConverter Methods CanConvertTo(ITypeDescriptorContext, Type) Declaration public override bool CanConvertTo(ITypeDescriptorContext context, Type destinationType) Parameters Type Name Description ITypeDescriptorContext context Type destinationType Returns Type Description Boolean ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) Declaration public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) Parameters Type Name Description ITypeDescriptorContext context CultureInfo culture Object value Returns Type Description Object ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type) Declaration public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType) Parameters Type Name Description ITypeDescriptorContext context CultureInfo culture Object value Type destinationType Returns Type Description Object Parse(String) Parses the specified string into a collection of path segments. Declaration public static SvgPathSegmentList Parse(string path) Parameters Type Name Description String path A String containing path data. Returns Type Description SvgPathSegmentList"
  },
  "api/Svg.SvgPathBasedElement.html": {
    "href": "api/Svg.SvgPathBasedElement.html",
    "title": "Class SvgPathBasedElement | SVG.NET API",
    "keywords": "Class SvgPathBasedElement Represents an element that is using a GraphicsPath as rendering base. Inheritance Object SvgElement SvgVisualElement SvgPathBasedElement SvgCircle SvgEllipse SvgGlyph SvgMarker SvgMarkerElement SvgRectangle Implements ISvgTransformable ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable Inherited Members SvgVisualElement.Path(ISvgRenderer) SvgVisualElement.ISvgBoundable.Location SvgVisualElement.ISvgBoundable.Size SvgVisualElement.Clip SvgVisualElement.ClipPath SvgVisualElement.ClipRule SvgVisualElement.Filter SvgVisualElement.RequiresSmoothRendering SvgVisualElement.Renderable SvgVisualElement.Render(ISvgRenderer) SvgVisualElement.RenderFillAndStroke(ISvgRenderer) SvgVisualElement.RenderFill(ISvgRenderer) SvgVisualElement.RenderStroke(ISvgRenderer) SvgVisualElement.SetClip(ISvgRenderer) SvgVisualElement.ResetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.SetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.ResetClip(ISvgRenderer) SvgVisualElement.DeepCopy<T>() SvgVisualElement.Visible SvgVisualElement.Display SvgVisualElement.Displayable SvgVisualElement.EnableBackground SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.DeepCopy() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public abstract class SvgPathBasedElement : SvgVisualElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode, ISvgBoundable, ISvgStylable, ISvgClipable Properties Bounds Declaration public override RectangleF Bounds { get; } Property Value Type Description RectangleF Overrides SvgVisualElement.Bounds Implements ISvgTransformable System.ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable"
  },
  "api/Svg.SvgPath.html": {
    "href": "api/Svg.SvgPath.html",
    "title": "Class SvgPath | SVG.NET API",
    "keywords": "Class SvgPath Represents an SVG path element. Inheritance Object SvgElement SvgVisualElement SvgPathBasedElement SvgMarkerElement SvgPath Implements ISvgTransformable ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable ISvgPathElement Inherited Members SvgMarkerElement.MarkerEnd SvgMarkerElement.MarkerMid SvgMarkerElement.MarkerStart SvgMarkerElement.RenderStroke(ISvgRenderer) SvgVisualElement.ISvgBoundable.Location SvgVisualElement.ISvgBoundable.Size SvgVisualElement.Clip SvgVisualElement.ClipPath SvgVisualElement.ClipRule SvgVisualElement.Filter SvgVisualElement.RequiresSmoothRendering SvgVisualElement.Renderable SvgVisualElement.Render(ISvgRenderer) SvgVisualElement.RenderFillAndStroke(ISvgRenderer) SvgVisualElement.RenderFill(ISvgRenderer) SvgVisualElement.SetClip(ISvgRenderer) SvgVisualElement.ResetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.SetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.ResetClip(ISvgRenderer) SvgVisualElement.Visible SvgVisualElement.Display SvgVisualElement.Displayable SvgVisualElement.EnableBackground SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"path\")] public class SvgPath : SvgMarkerElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode, ISvgBoundable, ISvgStylable, ISvgClipable, ISvgPathElement Properties Bounds Gets the bounds of the element. Declaration public override RectangleF Bounds { get; } Property Value Type Description RectangleF The bounds. Overrides SvgPathBasedElement.Bounds PathData Gets or sets a of path data. Declaration public SvgPathSegmentList PathData { get; set; } Property Value Type Description SvgPathSegmentList PathLength Gets or sets the length of the path. Declaration public float PathLength { get; set; } Property Value Type Description Single Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgVisualElement.DeepCopy<T>() OnPathUpdated() Declaration public void OnPathUpdated() Path(ISvgRenderer) Gets the for this element. Declaration public override GraphicsPath Path(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer Returns Type Description GraphicsPath Overrides SvgVisualElement.Path(ISvgRenderer) Implements ISvgTransformable System.ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable ISvgPathElement"
  },
  "api/Svg.SvgPaintServer.html": {
    "href": "api/Svg.SvgPaintServer.html",
    "title": "Class SvgPaintServer | SVG.NET API",
    "keywords": "Class SvgPaintServer Represents the base class for all paint servers that are intended to be used as a fill or stroke. Inheritance Object SvgElement SvgPaintServer SvgColourServer SvgDeferredPaintServer SvgFallbackPaintServer SvgGradientServer SvgPatternServer Implements ISvgTransformable ICloneable ISvgNode Inherited Members SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.DeepCopy() SvgElement.ISvgNode.DeepCopy() SvgElement.DeepCopy<T>() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public abstract class SvgPaintServer : SvgElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode Fields None An unspecified SvgPaintServer . Declaration public static readonly SvgPaintServer None Field Value Type Description SvgPaintServer Properties GetCallback Declaration public Func<SvgPaintServer> GetCallback { get; set; } Property Value Type Description Func < SvgPaintServer > Methods GetBrush(SvgVisualElement, ISvgRenderer, Single, Boolean) Gets a representing the current paint server. Declaration public abstract Brush GetBrush(SvgVisualElement styleOwner, ISvgRenderer renderer, float opacity, bool forStroke = false) Parameters Type Name Description SvgVisualElement styleOwner The owner SvgVisualElement . ISvgRenderer renderer The renderer object. Single opacity The opacity of the brush. Boolean forStroke Not used. Returns Type Description Brush Render(ISvgRenderer) Renders the SvgElement and contents to the specified ISvgRenderer object. Declaration protected override void Render(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The ISvgRenderer object to render to. Overrides SvgElement.Render(ISvgRenderer) ToString() Returns a String that represents the current Object . Declaration public override string ToString() Returns Type Description String A String that represents the current Object . Overrides Object.ToString() Implements ISvgTransformable System.ICloneable ISvgNode"
  },
  "api/Svg.SvgOverflowConverter.html": {
    "href": "api/Svg.SvgOverflowConverter.html",
    "title": "Class SvgOverflowConverter | SVG.NET API",
    "keywords": "Class SvgOverflowConverter Inheritance Object BaseConverter EnumBaseConverter < SvgOverflow > SvgOverflowConverter Inherited Members EnumBaseConverter<SvgOverflow>.CaseHandlingMode EnumBaseConverter<SvgOverflow>.DefaultValue EnumBaseConverter<SvgOverflow>.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) EnumBaseConverter<SvgOverflow>.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type) BaseConverter.CanConvertFrom(ITypeDescriptorContext, Type) BaseConverter.CanConvertTo(ITypeDescriptorContext, Type) Namespace : Svg Assembly : cs.temp.dll.dll Syntax public sealed class SvgOverflowConverter : EnumBaseConverter<SvgOverflow> Constructors SvgOverflowConverter() Declaration public SvgOverflowConverter()"
  },
  "api/Svg.SvgOverflow.html": {
    "href": "api/Svg.SvgOverflow.html",
    "title": "Enum SvgOverflow | SVG.NET API",
    "keywords": "Enum SvgOverflow The ‘overflow’ property applies to elements that establish new viewports (e.g., ‘svg’ elements), ‘pattern’ elements and ‘marker’ elements. For all other elements, the property has no effect (i.e., a clipping rectangle is not created). Namespace : Svg Assembly : cs.temp.dll.dll Syntax public enum SvgOverflow Remarks The ‘overflow’ property has the same parameter values and has the same meaning as defined in CSS2 ([CSS2], section 11.1.1); however, the following additional points apply: The ‘overflow’ property applies to elements that establish new viewports (e.g., ‘svg’ elements), ‘pattern’ elements and ‘marker’ elements. For all other elements, the property has no effect (i.e., a clipping rectangle is not created). For those elements to which the ‘overflow’ property can apply, if the ‘overflow’ property has the value hidden or scroll, the effect is that a new clipping path in the shape of a rectangle is created. The result is equivalent to defining a ‘clipPath’ element whose content is a ‘rect’ element which defines the equivalent rectangle, and then specifying the 'uri' of this ‘clipPath’ element on the ‘clip-path’ property for the given element. If the ‘overflow’ property has a value other than hidden or scroll, the property has no effect (i.e., a clipping rectangle is not created). Within SVG content, the value auto is equivalent to the value visible. When an outermost svg element is embedded inline within a parent XML grammar which uses CSS layout ([CSS2], chapter 9) or XSL formatting [XSL], if the ‘overflow’ property has the value hidden or scroll, then the user agent will establish an initial clipping path equal to the bounds of the initial viewport; otherwise, the initial clipping path is set according to the clipping rules as defined in CSS2 ([CSS2], section 11.1.1). When an outermost svg element is stand-alone or embedded inline within a parent XML grammar which does not use CSS layout or XSL formatting, the ‘overflow’ property on the outermost svg element is ignored for the purposes of visual rendering and the initial clipping path is set to the bounds of the initial viewport. The initial value for ‘overflow’ as defined in [CSS2-overflow] is 'visible', and this applies also to the root ‘svg’ element; however, for child elements of an SVG document, SVG's user agent style sheet overrides this initial value and sets the ‘overflow’ property on elements that establish new viewports (e.g., ‘svg’ elements), ‘pattern’ elements and ‘marker’ elements to the value 'hidden'. As a result of the above, the default behavior of SVG user agents is to establish a clipping path to the bounds of the initial viewport and to establish a new clipping path for each element which establishes a new viewport and each ‘pattern’ and ‘marker’ element. Fields Name Description Auto The overflow is rendered - same as \"visible\". Hidden Overflow is not rendered. Inherit The value is inherited from the parent element. Scroll Overflow causes a scrollbar to appear (horizontal, vertical or both). Visible Overflow is rendered."
  },
  "api/Svg.SvgOrient.html": {
    "href": "api/Svg.SvgOrient.html",
    "title": "Class SvgOrient | SVG.NET API",
    "keywords": "Class SvgOrient Represents an orientation in a Scalable Vector Graphics document. Inheritance Object SvgOrient Inherited Members Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class SvgOrient Constructors SvgOrient() Declaration public SvgOrient() SvgOrient(Boolean) Declaration public SvgOrient(bool isAuto) Parameters Type Name Description Boolean isAuto SvgOrient(Boolean, Boolean) Declaration public SvgOrient(bool isAuto, bool isAutoStartReverse) Parameters Type Name Description Boolean isAuto Boolean isAutoStartReverse SvgOrient(Single) Declaration public SvgOrient(float angle) Parameters Type Name Description Single angle Properties Angle Gets the value of the unit. Declaration public float Angle { get; set; } Property Value Type Description Single IsAuto Gets the value of the unit. Declaration public bool IsAuto { get; set; } Property Value Type Description Boolean IsAutoStartReverse If IsAuto is true, indicates if the orientation of a 'marker-start' must be rotated of 180� from the original orientation Declaration public bool IsAutoStartReverse { get; set; } Property Value Type Description Boolean Methods Equals(Object) Indicates whether this instance and a specified object are equal. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Another object to compare to. Returns Type Description Boolean true if obj and this instance are the same type and represent the same value; otherwise, false. Overrides Object.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Operators Implicit(Single to SvgOrient) Performs an implicit conversion from Single to SvgOrient . Declaration public static implicit operator SvgOrient(float value) Parameters Type Name Description Single value The value. Returns Type Description SvgOrient The result of the conversion."
  },
  "api/Svg.SvgMissingGlyph.html": {
    "href": "api/Svg.SvgMissingGlyph.html",
    "title": "Class SvgMissingGlyph | SVG.NET API",
    "keywords": "Class SvgMissingGlyph Inheritance Object SvgElement SvgVisualElement SvgPathBasedElement SvgGlyph SvgMissingGlyph Implements ISvgTransformable ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable ISvgPathElement Inherited Members SvgGlyph.PathData SvgGlyph.HorizAdvX SvgGlyph.Unicode SvgGlyph.VertAdvY SvgGlyph.VertOriginX SvgGlyph.VertOriginY SvgGlyph.Path(ISvgRenderer) SvgGlyph.OnPathUpdated() SvgGlyph.DeepCopy<T>() SvgPathBasedElement.Bounds SvgVisualElement.ISvgBoundable.Location SvgVisualElement.ISvgBoundable.Size SvgVisualElement.Clip SvgVisualElement.ClipPath SvgVisualElement.ClipRule SvgVisualElement.Filter SvgVisualElement.RequiresSmoothRendering SvgVisualElement.Renderable SvgVisualElement.Render(ISvgRenderer) SvgVisualElement.RenderFillAndStroke(ISvgRenderer) SvgVisualElement.RenderFill(ISvgRenderer) SvgVisualElement.RenderStroke(ISvgRenderer) SvgVisualElement.SetClip(ISvgRenderer) SvgVisualElement.ResetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.SetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.ResetClip(ISvgRenderer) SvgVisualElement.Visible SvgVisualElement.Display SvgVisualElement.Displayable SvgVisualElement.EnableBackground SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"missing-glyph\")] public class SvgMissingGlyph : SvgGlyph, ISvgElement, ISvgTransformable, ICloneable, ISvgNode, ISvgBoundable, ISvgStylable, ISvgClipable, ISvgPathElement Properties GlyphName Declaration public override string GlyphName { get; set; } Property Value Type Description String Overrides SvgGlyph.GlyphName Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgGlyph.DeepCopy() Implements ISvgTransformable System.ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable ISvgPathElement"
  },
  "api/Svg.SvgMask.html": {
    "href": "api/Svg.SvgMask.html",
    "title": "Class SvgMask | SVG.NET API",
    "keywords": "Class SvgMask Inheritance Object SvgElement SvgMask Implements ISvgTransformable ICloneable ISvgNode Inherited Members SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.Render(ISvgRenderer) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.DeepCopy<T>() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"mask\")] public class SvgMask : SvgElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() Implements ISvgTransformable System.ICloneable ISvgNode"
  },
  "api/Svg.SvgMarkerUnitsConverter.html": {
    "href": "api/Svg.SvgMarkerUnitsConverter.html",
    "title": "Class SvgMarkerUnitsConverter | SVG.NET API",
    "keywords": "Class SvgMarkerUnitsConverter Inheritance Object BaseConverter EnumBaseConverter < SvgMarkerUnits > SvgMarkerUnitsConverter Inherited Members EnumBaseConverter<SvgMarkerUnits>.CaseHandlingMode EnumBaseConverter<SvgMarkerUnits>.DefaultValue EnumBaseConverter<SvgMarkerUnits>.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) EnumBaseConverter<SvgMarkerUnits>.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type) BaseConverter.CanConvertFrom(ITypeDescriptorContext, Type) BaseConverter.CanConvertTo(ITypeDescriptorContext, Type) Namespace : Svg Assembly : cs.temp.dll.dll Syntax public sealed class SvgMarkerUnitsConverter : EnumBaseConverter<SvgMarkerUnits> Constructors SvgMarkerUnitsConverter() Declaration public SvgMarkerUnitsConverter()"
  },
  "api/Svg.SvgMarkerElement.html": {
    "href": "api/Svg.SvgMarkerElement.html",
    "title": "Class SvgMarkerElement | SVG.NET API",
    "keywords": "Class SvgMarkerElement Represents a path based element that can have markers. Inheritance Object SvgElement SvgVisualElement SvgPathBasedElement SvgMarkerElement SvgGroup SvgLine SvgPath SvgPolygon Implements ISvgTransformable ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable Inherited Members SvgPathBasedElement.Bounds SvgVisualElement.Path(ISvgRenderer) SvgVisualElement.ISvgBoundable.Location SvgVisualElement.ISvgBoundable.Size SvgVisualElement.Clip SvgVisualElement.ClipPath SvgVisualElement.ClipRule SvgVisualElement.Filter SvgVisualElement.RequiresSmoothRendering SvgVisualElement.Renderable SvgVisualElement.Render(ISvgRenderer) SvgVisualElement.RenderFillAndStroke(ISvgRenderer) SvgVisualElement.RenderFill(ISvgRenderer) SvgVisualElement.SetClip(ISvgRenderer) SvgVisualElement.ResetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.SetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.ResetClip(ISvgRenderer) SvgVisualElement.DeepCopy<T>() SvgVisualElement.Visible SvgVisualElement.Display SvgVisualElement.Displayable SvgVisualElement.EnableBackground SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.DeepCopy() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public abstract class SvgMarkerElement : SvgPathBasedElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode, ISvgBoundable, ISvgStylable, ISvgClipable Properties MarkerEnd Gets or sets the marker (end cap) of the path. Declaration public Uri MarkerEnd { get; set; } Property Value Type Description Uri MarkerMid Gets or sets the marker (mid points) of the path. Declaration public Uri MarkerMid { get; set; } Property Value Type Description Uri MarkerStart Gets or sets the marker (start cap) of the path. Declaration public Uri MarkerStart { get; set; } Property Value Type Description Uri Methods RenderStroke(ISvgRenderer) Renders the stroke of the element to the specified ISvgRenderer . Includes rendering of all markers defined in attributes. Declaration protected override bool RenderStroke(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The ISvgRenderer object to render to. Returns Type Description Boolean Overrides SvgVisualElement.RenderStroke(ISvgRenderer) Implements ISvgTransformable System.ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable"
  },
  "api/Svg.SvgIDWrongFormatException.html": {
    "href": "api/Svg.SvgIDWrongFormatException.html",
    "title": "Class SvgIDWrongFormatException | SVG.NET API",
    "keywords": "Class SvgIDWrongFormatException Inheritance Object Exception SystemException FormatException SvgIDException SvgIDWrongFormatException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class SvgIDWrongFormatException : SvgIDException, ISerializable, _Exception Constructors SvgIDWrongFormatException(String) Declaration public SvgIDWrongFormatException(string message) Parameters Type Name Description String message Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/Svg.SvgIDExistsException.html": {
    "href": "api/Svg.SvgIDExistsException.html",
    "title": "Class SvgIDExistsException | SVG.NET API",
    "keywords": "Class SvgIDExistsException Inheritance Object Exception SystemException FormatException SvgIDException SvgIDExistsException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class SvgIDExistsException : SvgIDException, ISerializable, _Exception Constructors SvgIDExistsException(String) Declaration public SvgIDExistsException(string message) Parameters Type Name Description String message Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/Svg.SvgIDException.html": {
    "href": "api/Svg.SvgIDException.html",
    "title": "Class SvgIDException | SVG.NET API",
    "keywords": "Class SvgIDException Inheritance Object Exception SystemException FormatException SvgIDException SvgIDExistsException SvgIDWrongFormatException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class SvgIDException : FormatException, ISerializable, _Exception Constructors SvgIDException(String) Declaration public SvgIDException(string message) Parameters Type Name Description String message Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/Svg.SvgShapeRenderingConverter.html": {
    "href": "api/Svg.SvgShapeRenderingConverter.html",
    "title": "Class SvgShapeRenderingConverter | SVG.NET API",
    "keywords": "Class SvgShapeRenderingConverter Inheritance Object BaseConverter EnumBaseConverter < SvgShapeRendering > SvgShapeRenderingConverter Inherited Members EnumBaseConverter<SvgShapeRendering>.CaseHandlingMode EnumBaseConverter<SvgShapeRendering>.DefaultValue EnumBaseConverter<SvgShapeRendering>.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) EnumBaseConverter<SvgShapeRendering>.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type) BaseConverter.CanConvertFrom(ITypeDescriptorContext, Type) BaseConverter.CanConvertTo(ITypeDescriptorContext, Type) Namespace : Svg Assembly : cs.temp.dll.dll Syntax public sealed class SvgShapeRenderingConverter : EnumBaseConverter<SvgShapeRendering> Constructors SvgShapeRenderingConverter() Declaration public SvgShapeRenderingConverter()"
  },
  "api/Svg.SvgShapeRendering.html": {
    "href": "api/Svg.SvgShapeRendering.html",
    "title": "Enum SvgShapeRendering | SVG.NET API",
    "keywords": "Enum SvgShapeRendering The creator of SVG content might want to provide a hint about what tradeoffs to make as the browser renders 'path' element or basic shapes. The shape-rendering attribute provides these hints. Namespace : Svg Assembly : cs.temp.dll.dll Syntax public enum SvgShapeRendering Remarks Default is Inherit . That means the value comes from the parent element. If parents are also not set, then the value is Auto . Fields Name Description Auto Indicates that the user agent shall make appropriate tradeoffs to balance speed, crisp edges and geometric precision, but with geometric precision given more importance than speed and crisp edges. CrispEdges Indicates that the user agent shall attempt to emphasize the contrast between clean edges of artwork over rendering speed and geometric precision. To achieve crisp edges, the user agent might turn off anti-aliasing for all lines and curves or possibly just for straight lines which are close to vertical or horizontal. Also, the user agent might adjust line positions and line widths to align edges with device pixels. GeometricPrecision Indicates that the user agent shall emphasize geometric precision over speed and crisp edges. Inherit Indicates that the SVG shape rendering properties from the parent will be used. OptimizeSpeed Indicates that the user agent shall emphasize rendering speed over geometric precision and crisp edges. This option will sometimes cause the user agent to turn off shape anti-aliasing."
  },
  "api/Svg.SvgScript.html": {
    "href": "api/Svg.SvgScript.html",
    "title": "Class SvgScript | SVG.NET API",
    "keywords": "Class SvgScript An element used to define scripts within SVG documents. Use the Script property to get the script content (proxies the content) Inheritance Object SvgElement SvgScript Implements ISvgTransformable ICloneable ISvgNode Inherited Members SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.Render(ISvgRenderer) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.DeepCopy<T>() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"script\")] public class SvgScript : SvgElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode Properties CrossOrigin Declaration public string CrossOrigin { get; set; } Property Value Type Description String Href Declaration public string Href { get; set; } Property Value Type Description String Script Declaration public string Script { get; set; } Property Value Type Description String ScriptType Declaration public string ScriptType { get; set; } Property Value Type Description String Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() WriteChildren(XmlTextWriter) Declaration protected override void WriteChildren(XmlTextWriter writer) Parameters Type Name Description XmlTextWriter writer Overrides SvgElement.WriteChildren(XmlTextWriter) Implements ISvgTransformable System.ICloneable ISvgNode"
  },
  "api/Svg.SvgRenderer.html": {
    "href": "api/Svg.SvgRenderer.html",
    "title": "Class SvgRenderer | SVG.NET API",
    "keywords": "Class SvgRenderer Convenience wrapper around a graphics object Inheritance Object SvgRenderer Implements ISvgRenderer IDisposable IGraphicsProvider Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public sealed class SvgRenderer : ISvgRenderer, IDisposable, IGraphicsProvider Properties DpiY Declaration public float DpiY { get; } Property Value Type Description Single SmoothingMode Declaration public SmoothingMode SmoothingMode { get; set; } Property Value Type Description SmoothingMode Transform Declaration public Matrix Transform { get; set; } Property Value Type Description Matrix Methods Dispose() Declaration public void Dispose() DrawImage(Image, RectangleF, RectangleF, GraphicsUnit) Declaration public void DrawImage(Image image, RectangleF destRect, RectangleF srcRect, GraphicsUnit graphicsUnit) Parameters Type Name Description Image image RectangleF destRect RectangleF srcRect GraphicsUnit graphicsUnit DrawImage(Image, RectangleF, RectangleF, GraphicsUnit, Single) Declaration public void DrawImage(Image image, RectangleF destRect, RectangleF srcRect, GraphicsUnit graphicsUnit, float opacity) Parameters Type Name Description Image image RectangleF destRect RectangleF srcRect GraphicsUnit graphicsUnit Single opacity DrawImageUnscaled(Image, Point) Declaration public void DrawImageUnscaled(Image image, Point location) Parameters Type Name Description Image image Point location DrawPath(Pen, GraphicsPath) Declaration public void DrawPath(Pen pen, GraphicsPath path) Parameters Type Name Description Pen pen GraphicsPath path FillPath(Brush, GraphicsPath) Declaration public void FillPath(Brush brush, GraphicsPath path) Parameters Type Name Description Brush brush GraphicsPath path FromGraphics(Graphics) Creates a new ISvgRenderer from the specified . Declaration public static ISvgRenderer FromGraphics(Graphics graphics) Parameters Type Name Description Graphics graphics The to create the renderer from. Returns Type Description ISvgRenderer FromImage(Image) Creates a new ISvgRenderer from the specified . Declaration public static ISvgRenderer FromImage(Image image) Parameters Type Name Description Image image from which to create the new ISvgRenderer . Returns Type Description ISvgRenderer FromNull() Declaration public static ISvgRenderer FromNull() Returns Type Description ISvgRenderer GetBoundable() Declaration public ISvgBoundable GetBoundable() Returns Type Description ISvgBoundable GetClip() Declaration public Region GetClip() Returns Type Description Region PopBoundable() Declaration public ISvgBoundable PopBoundable() Returns Type Description ISvgBoundable RotateTransform(Single, MatrixOrder) Declaration public void RotateTransform(float fAngle, MatrixOrder order = null) Parameters Type Name Description Single fAngle MatrixOrder order ScaleTransform(Single, Single, MatrixOrder) Declaration public void ScaleTransform(float sx, float sy, MatrixOrder order = null) Parameters Type Name Description Single sx Single sy MatrixOrder order SetBoundable(ISvgBoundable) Declaration public void SetBoundable(ISvgBoundable boundable) Parameters Type Name Description ISvgBoundable boundable SetClip(Region, CombineMode) Declaration public void SetClip(Region region, CombineMode combineMode = null) Parameters Type Name Description Region region CombineMode combineMode TranslateTransform(Single, Single, MatrixOrder) Declaration public void TranslateTransform(float dx, float dy, MatrixOrder order = null) Parameters Type Name Description Single dx Single dy MatrixOrder order Explicit Interface Implementations IGraphicsProvider.GetGraphics() Declaration Graphics IGraphicsProvider.GetGraphics() Returns Type Description Graphics Implements ISvgRenderer System.IDisposable IGraphicsProvider"
  },
  "api/Svg.SvgRectangle.html": {
    "href": "api/Svg.SvgRectangle.html",
    "title": "Class SvgRectangle | SVG.NET API",
    "keywords": "Class SvgRectangle Represents an SVG rectangle that could also have rounded edges. Inheritance Object SvgElement SvgVisualElement SvgPathBasedElement SvgRectangle Implements ISvgTransformable ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable Inherited Members SvgPathBasedElement.Bounds SvgVisualElement.ISvgBoundable.Location SvgVisualElement.ISvgBoundable.Size SvgVisualElement.Clip SvgVisualElement.ClipPath SvgVisualElement.ClipRule SvgVisualElement.Filter SvgVisualElement.Renderable SvgVisualElement.RenderFillAndStroke(ISvgRenderer) SvgVisualElement.RenderFill(ISvgRenderer) SvgVisualElement.RenderStroke(ISvgRenderer) SvgVisualElement.SetClip(ISvgRenderer) SvgVisualElement.ResetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.SetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.ResetClip(ISvgRenderer) SvgVisualElement.Visible SvgVisualElement.Display SvgVisualElement.Displayable SvgVisualElement.EnableBackground SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"rect\")] public class SvgRectangle : SvgPathBasedElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode, ISvgBoundable, ISvgStylable, ISvgClipable Properties CornerRadiusX Gets or sets the X-radius of the rounded edges of this rectangle. Declaration public SvgUnit CornerRadiusX { get; set; } Property Value Type Description SvgUnit CornerRadiusY Gets or sets the Y-radius of the rounded edges of this rectangle. Declaration public SvgUnit CornerRadiusY { get; set; } Property Value Type Description SvgUnit Height Gets or sets the height of the rectangle. Declaration public SvgUnit Height { get; set; } Property Value Type Description SvgUnit Location Gets an SvgPoint representing the top left point of the rectangle. Declaration public SvgPoint Location { get; } Property Value Type Description SvgPoint RequiresSmoothRendering Gets or sets a value to determine if anti-aliasing should occur when the element is being rendered. Declaration protected override bool RequiresSmoothRendering { get; } Property Value Type Description Boolean Overrides SvgVisualElement.RequiresSmoothRendering Width Gets or sets the width of the rectangle. Declaration public SvgUnit Width { get; set; } Property Value Type Description SvgUnit X Gets or sets the position where the left point of the rectangle should start. Declaration public SvgUnit X { get; set; } Property Value Type Description SvgUnit Y Gets or sets the position where the top point of the rectangle should start. Declaration public SvgUnit Y { get; set; } Property Value Type Description SvgUnit Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgVisualElement.DeepCopy<T>() Path(ISvgRenderer) Gets the for this element. Declaration public override GraphicsPath Path(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer Returns Type Description GraphicsPath Overrides SvgVisualElement.Path(ISvgRenderer) Render(ISvgRenderer) Renders the SvgElement and contents to the specified object. Declaration protected override void Render(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer Overrides SvgVisualElement.Render(ISvgRenderer) Implements ISvgTransformable System.ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable"
  },
  "api/Svg.SvgFontWeight.html": {
    "href": "api/Svg.SvgFontWeight.html",
    "title": "Enum SvgFontWeight | SVG.NET API",
    "keywords": "Enum SvgFontWeight The weight of a face relative to others in the same font family. Namespace : Svg Assembly : cs.temp.dll.dll Syntax [Flags] public enum SvgFontWeight Fields Name Description All All font weights. Bold Same as W700 . Bolder One font weight darker than the parent element. Inherit The value is inherited from the parent element. Lighter One font weight lighter than the parent element. Normal Same as W400 . W100 W200 W300 W400 Same as Normal . W500 W600 W700 Same as Bold . W800 W900"
  },
  "api/Svg.SvgFontVariantConverter.html": {
    "href": "api/Svg.SvgFontVariantConverter.html",
    "title": "Class SvgFontVariantConverter | SVG.NET API",
    "keywords": "Class SvgFontVariantConverter Inheritance Object BaseConverter EnumBaseConverter < SvgFontVariant > SvgFontVariantConverter Inherited Members EnumBaseConverter<SvgFontVariant>.CaseHandlingMode EnumBaseConverter<SvgFontVariant>.DefaultValue BaseConverter.CanConvertFrom(ITypeDescriptorContext, Type) BaseConverter.CanConvertTo(ITypeDescriptorContext, Type) Namespace : Svg Assembly : cs.temp.dll.dll Syntax public sealed class SvgFontVariantConverter : EnumBaseConverter<SvgFontVariant> Constructors SvgFontVariantConverter() Declaration public SvgFontVariantConverter() Methods ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) Declaration public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) Parameters Type Name Description ITypeDescriptorContext context CultureInfo culture Object value Returns Type Description Object Overrides Svg.EnumBaseConverter<Svg.SvgFontVariant>.ConvertFrom(ITypeDescriptorContext, CultureInfo, System.Object) ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type) Declaration public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType) Parameters Type Name Description ITypeDescriptorContext context CultureInfo culture Object value Type destinationType Returns Type Description Object Overrides Svg.EnumBaseConverter<Svg.SvgFontVariant>.ConvertTo(ITypeDescriptorContext, CultureInfo, System.Object, System.Type)"
  },
  "index.html": {
    "href": "index.html",
    "title": "SVG.NET Documentation | SVG.NET API",
    "keywords": "SVG.NET Documentation API documentation Contributing Guide"
  },
  "README.html": {
    "href": "README.html",
    "title": "SVG.NET | SVG.NET API",
    "keywords": "SVG.NET Public fork of the C# SVG rendering library on codeplex: https://svg.codeplex.com/ This started out as a minor modification to enable the writing of proper SVG strings. But now after almost two years we have so many fixes and improvements that we decided to share our current codebase to the public in order to improve it even further. So please feel free to fork it and open pull requests for any fix, improvement or feature you add. You may check the contributing guide for more information on how to do this. For instructions on how to install and use the library, please check the Getting Started guide. Changes in the latest released versions and in master you can find in the Release notes . Projects using the library vvvv a hybrid visual/textual live-programming environment for easy prototyping and development. Posh a windowing/interaction/drawing layer for C#/.NET desktop applications with their GUI in a browser. Timeliner a Posh based timeline that can be controlled by and sends out its values via OSC. Chordious a fretboard diagram generator for fretted stringed instruments. If you want your project in this list, send me a pull request on this file or link + short description to tebjan (at) vvvv.org"
  },
  "CONTRIBUTING.html": {
    "href": "CONTRIBUTING.html",
    "title": "Contributing to SVG.NET | SVG.NET API",
    "keywords": "Contributing to SVG.NET SVG.NET is a community project and lives from contributions by the community. Any help to improve and evolve the library is very welcome! Contributions may include bug reports, bug fixes, new features, infrastructure enhancements, or documentation updates. How to contribute Reporting Bugs If you found a bug in SVG.NET, you can create an issue . If you are able to build the library locally, please check, if the problem still exists in the master branch before filing the bug. If you can reproduce the problem, please provide enough information so that it can be reproduced by other developers. This includes: The Operating System The used .NET / .NET Core version An example image that shows the incorrect behavior, or a respective code snippet (preferably in the form of a failing unit test) The stack trace in case of an unexpected exception For better readability, you may use markdown code formatting for any included code. Proposing Enhancements If you need a specific feature that is not yet implemented, you can also create a respective issue. Of course - implementing it yourself is the best chance to get it done! Contributing Code The preferred workflow for contributing code is to fork the repository on GitHub, clone it, develop on a feature branch, and create a pull request when done. There are a few things to consider for contributing code: Please use the same coding style as in the rest of the code Use spaces instead of tabs Provide unit tests for bug fixes, or provide a test svg with a respective png counterpart showing the correct rendering (refer to existing test images for naming conventions) Provide meaningful commit messages and/or PR comments Check that the automatic tests on AppVeyor all pass for your pull request Be ready to adapt your changes after a code review Contributing Documentation This projects is in need of documentation - any help to add documentation infrastructure, inline documentation, how-tos or sample code is appreciated! For specifics, please refer to the issue related to documentation . Thanks for taking the time to contribute to SVG.NET!"
  },
  "api/Svg.SvgLine.html": {
    "href": "api/Svg.SvgLine.html",
    "title": "Class SvgLine | SVG.NET API",
    "keywords": "Class SvgLine Represents and SVG line element. Inheritance Object SvgElement SvgVisualElement SvgPathBasedElement SvgMarkerElement SvgLine Implements ISvgTransformable ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable Inherited Members SvgMarkerElement.MarkerEnd SvgMarkerElement.MarkerMid SvgMarkerElement.MarkerStart SvgMarkerElement.RenderStroke(ISvgRenderer) SvgPathBasedElement.Bounds SvgVisualElement.ISvgBoundable.Location SvgVisualElement.ISvgBoundable.Size SvgVisualElement.Clip SvgVisualElement.ClipPath SvgVisualElement.ClipRule SvgVisualElement.Filter SvgVisualElement.RequiresSmoothRendering SvgVisualElement.Renderable SvgVisualElement.Render(ISvgRenderer) SvgVisualElement.RenderFillAndStroke(ISvgRenderer) SvgVisualElement.RenderFill(ISvgRenderer) SvgVisualElement.SetClip(ISvgRenderer) SvgVisualElement.ResetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.SetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.ResetClip(ISvgRenderer) SvgVisualElement.Visible SvgVisualElement.Display SvgVisualElement.Displayable SvgVisualElement.EnableBackground SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"line\")] public class SvgLine : SvgMarkerElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode, ISvgBoundable, ISvgStylable, ISvgClipable Properties EndX Declaration public SvgUnit EndX { get; set; } Property Value Type Description SvgUnit EndY Declaration public SvgUnit EndY { get; set; } Property Value Type Description SvgUnit Fill Declaration public override SvgPaintServer Fill { get; set; } Property Value Type Description SvgPaintServer Overrides SvgElement.Fill StartX Declaration public SvgUnit StartX { get; set; } Property Value Type Description SvgUnit StartY Declaration public SvgUnit StartY { get; set; } Property Value Type Description SvgUnit Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgVisualElement.DeepCopy<T>() Path(ISvgRenderer) Declaration public override Drawing.Drawing2D.GraphicsPath Path(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer Returns Type Description Drawing.Drawing2D.GraphicsPath Overrides SvgVisualElement.Path(ISvgRenderer) Implements ISvgTransformable System.ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable"
  },
  "api/Svg.SvgKern.html": {
    "href": "api/Svg.SvgKern.html",
    "title": "Class SvgKern | SVG.NET API",
    "keywords": "Class SvgKern Inheritance Object SvgElement SvgKern SvgHorizontalKern SvgVerticalKern Implements ISvgTransformable ICloneable ISvgNode Inherited Members SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.Render(ISvgRenderer) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.DeepCopy() SvgElement.ISvgNode.DeepCopy() SvgElement.DeepCopy<T>() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public abstract class SvgKern : SvgElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode Properties Glyph1 Declaration public string Glyph1 { get; set; } Property Value Type Description String Glyph2 Declaration public string Glyph2 { get; set; } Property Value Type Description String Kerning Declaration public float Kerning { get; set; } Property Value Type Description Single Unicode1 Declaration public string Unicode1 { get; set; } Property Value Type Description String Unicode2 Declaration public string Unicode2 { get; set; } Property Value Type Description String Implements ISvgTransformable System.ICloneable ISvgNode"
  },
  "api/Svg.SvgImageRenderingConverter.html": {
    "href": "api/Svg.SvgImageRenderingConverter.html",
    "title": "Class SvgImageRenderingConverter | SVG.NET API",
    "keywords": "Class SvgImageRenderingConverter Inheritance Object BaseConverter EnumBaseConverter < SvgImageRendering > SvgImageRenderingConverter Inherited Members EnumBaseConverter<SvgImageRendering>.CaseHandlingMode EnumBaseConverter<SvgImageRendering>.DefaultValue EnumBaseConverter<SvgImageRendering>.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) EnumBaseConverter<SvgImageRendering>.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type) BaseConverter.CanConvertFrom(ITypeDescriptorContext, Type) BaseConverter.CanConvertTo(ITypeDescriptorContext, Type) Namespace : Svg Assembly : cs.temp.dll.dll Syntax public sealed class SvgImageRenderingConverter : EnumBaseConverter<SvgImageRendering> Constructors SvgImageRenderingConverter() Declaration public SvgImageRenderingConverter()"
  },
  "api/Svg.SvgImageRendering.html": {
    "href": "api/Svg.SvgImageRendering.html",
    "title": "Enum SvgImageRendering | SVG.NET API",
    "keywords": "Enum SvgImageRendering The image-rendering attribute provides a hint to the browser about how to make speed vs. quality tradeoffs as it performs image processing. Namespace : Svg Assembly : cs.temp.dll.dll Syntax public enum SvgImageRendering Remarks Not Implemented yet. Fields Name Description Auto Indicates that the user agent shall make appropriate tradeoffs to balance speed and quality, but quality shall be given more importance than speed. Inherit Indicates that the SVG shape rendering properties from the parent will be used. OptimizeQuality Indicates that the user agent shall emphasize quality over rendering speed. OptimizeSpeed Indicates that the user agent shall emphasize rendering speed over quality."
  },
  "api/Svg.SvgImage.html": {
    "href": "api/Svg.SvgImage.html",
    "title": "Class SvgImage | SVG.NET API",
    "keywords": "Class SvgImage Represents and SVG image Inheritance Object SvgElement SvgVisualElement SvgImage Implements ISvgTransformable ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable Inherited Members SvgVisualElement.ISvgBoundable.Location SvgVisualElement.ISvgBoundable.Size SvgVisualElement.Clip SvgVisualElement.ClipPath SvgVisualElement.ClipRule SvgVisualElement.Filter SvgVisualElement.RequiresSmoothRendering SvgVisualElement.Renderable SvgVisualElement.RenderFillAndStroke(ISvgRenderer) SvgVisualElement.RenderFill(ISvgRenderer) SvgVisualElement.RenderStroke(ISvgRenderer) SvgVisualElement.SetClip(ISvgRenderer) SvgVisualElement.ResetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.SetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.ResetClip(ISvgRenderer) SvgVisualElement.Visible SvgVisualElement.Display SvgVisualElement.Displayable SvgVisualElement.EnableBackground SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"image\")] public class SvgImage : SvgVisualElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode, ISvgBoundable, ISvgStylable, ISvgClipable Properties AspectRatio Gets or sets the aspect of the viewport. Declaration public SvgAspectRatio AspectRatio { get; set; } Property Value Type Description SvgAspectRatio Bounds Gets the bounds of the element. Declaration public override RectangleF Bounds { get; } Property Value Type Description RectangleF The bounds. Overrides SvgVisualElement.Bounds Height Declaration public virtual SvgUnit Height { get; set; } Property Value Type Description SvgUnit Href Declaration [SvgAttribute(\"href\", \"http://www.w3.org/1999/xlink\")] public virtual string Href { get; set; } Property Value Type Description String Location Gets an SvgPoint representing the top left point of the rectangle. Declaration public SvgPoint Location { get; } Property Value Type Description SvgPoint Width Declaration public virtual SvgUnit Width { get; set; } Property Value Type Description SvgUnit X Declaration public virtual SvgUnit X { get; set; } Property Value Type Description SvgUnit Y Declaration public virtual SvgUnit Y { get; set; } Property Value Type Description SvgUnit Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgVisualElement.DeepCopy<T>() GetImage(String) Declaration protected object GetImage(string uriString) Parameters Type Name Description String uriString Returns Type Description Object Path(ISvgRenderer) Gets the for this element. Declaration public override GraphicsPath Path(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer Returns Type Description GraphicsPath Overrides SvgVisualElement.Path(ISvgRenderer) Render(ISvgRenderer) Renders the SvgElement and contents to the specified object. Declaration protected override void Render(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer Overrides SvgVisualElement.Render(ISvgRenderer) Implements ISvgTransformable System.ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable"
  },
  "api/Svg.SvgGradientServer.html": {
    "href": "api/Svg.SvgGradientServer.html",
    "title": "Class SvgGradientServer | SVG.NET API",
    "keywords": "Class SvgGradientServer Provides the base class for all paint servers that wish to render a gradient. Inheritance Object SvgElement SvgPaintServer SvgGradientServer SvgLinearGradientServer SvgRadialGradientServer Implements ISvgTransformable ICloneable ISvgNode Inherited Members SvgPaintServer.GetCallback SvgPaintServer.None SvgPaintServer.Render(ISvgRenderer) SvgPaintServer.GetBrush(SvgVisualElement, ISvgRenderer, Single, Boolean) SvgPaintServer.ToString() SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.ChildAdded SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.DeepCopy() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public abstract class SvgGradientServer : SvgPaintServer, ISvgElement, ISvgTransformable, ICloneable, ISvgNode Properties EffectiveGradientTransform Declaration protected Matrix EffectiveGradientTransform { get; } Property Value Type Description Matrix GradientTransform Declaration public SvgTransformCollection GradientTransform { get; set; } Property Value Type Description SvgTransformCollection GradientUnits Gets or sets the coordinate system of the gradient. Declaration public SvgCoordinateUnits GradientUnits { get; set; } Property Value Type Description SvgCoordinateUnits InheritGradient Gets or sets another gradient fill from which to inherit the stops from. Declaration [SvgAttribute(\"href\", \"http://www.w3.org/1999/xlink\")] public SvgPaintServer InheritGradient { get; set; } Property Value Type Description SvgPaintServer SpreadMethod Specifies what happens if the gradient starts or ends inside the bounds of the target rectangle. Declaration public SvgGradientSpreadMethod SpreadMethod { get; set; } Property Value Type Description SvgGradientSpreadMethod Stops Gets the ramp of colors to use on a gradient. Declaration public List<SvgGradientStop> Stops { get; } Property Value Type Description List < SvgGradientStop > Methods AddElement(SvgElement, Int32) Called by the underlying SvgElement when an element has been added to the 'Children' collection. Declaration protected override void AddElement(SvgElement child, int index) Parameters Type Name Description SvgElement child The SvgElement that has been added. Int32 index An Int32 representing the index where the element was added to the collection. Overrides SvgElement.AddElement(SvgElement, Int32) CalculateDistance(PointF, PointF) Declaration protected static double CalculateDistance(PointF first, PointF second) Parameters Type Name Description PointF first PointF second Returns Type Description Double CalculateLength(PointF) Declaration protected static float CalculateLength(PointF vector) Parameters Type Name Description PointF vector Returns Type Description Single DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgElement.DeepCopy<T>() GetColorBlend(ISvgRenderer, Single, Boolean) Gets a representing the SvgGradientServer 's gradient stops. Declaration protected ColorBlend GetColorBlend(ISvgRenderer renderer, float opacity, bool radial) Parameters Type Name Description ISvgRenderer renderer The renderer ISvgRenderer . Single opacity The opacity of the colour blend. Boolean radial True if it's a radial gradiant. Returns Type Description ColorBlend LoadStops(SvgVisualElement) Declaration protected void LoadStops(SvgVisualElement parent) Parameters Type Name Description SvgVisualElement parent RemoveElement(SvgElement) Called by the underlying SvgElement when an element has been removed from the 'Children' collection. Declaration protected override void RemoveElement(SvgElement child) Parameters Type Name Description SvgElement child The SvgElement that has been removed. Overrides SvgElement.RemoveElement(SvgElement) Implements ISvgTransformable System.ICloneable ISvgNode"
  },
  "api/Svg.SvgGlyph.html": {
    "href": "api/Svg.SvgGlyph.html",
    "title": "Class SvgGlyph | SVG.NET API",
    "keywords": "Class SvgGlyph Inheritance Object SvgElement SvgVisualElement SvgPathBasedElement SvgGlyph SvgMissingGlyph Implements ISvgTransformable ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable ISvgPathElement Inherited Members SvgPathBasedElement.Bounds SvgVisualElement.ISvgBoundable.Location SvgVisualElement.ISvgBoundable.Size SvgVisualElement.Clip SvgVisualElement.ClipPath SvgVisualElement.ClipRule SvgVisualElement.Filter SvgVisualElement.RequiresSmoothRendering SvgVisualElement.Renderable SvgVisualElement.Render(ISvgRenderer) SvgVisualElement.RenderFillAndStroke(ISvgRenderer) SvgVisualElement.RenderFill(ISvgRenderer) SvgVisualElement.RenderStroke(ISvgRenderer) SvgVisualElement.SetClip(ISvgRenderer) SvgVisualElement.ResetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.SetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.ResetClip(ISvgRenderer) SvgVisualElement.Visible SvgVisualElement.Display SvgVisualElement.Displayable SvgVisualElement.EnableBackground SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"glyph\")] public class SvgGlyph : SvgPathBasedElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode, ISvgBoundable, ISvgStylable, ISvgClipable, ISvgPathElement Properties GlyphName Declaration public virtual string GlyphName { get; set; } Property Value Type Description String HorizAdvX Declaration public float HorizAdvX { get; set; } Property Value Type Description Single PathData Gets or sets a of path data. Declaration public SvgPathSegmentList PathData { get; set; } Property Value Type Description SvgPathSegmentList Unicode Declaration public string Unicode { get; set; } Property Value Type Description String VertAdvY Declaration public float VertAdvY { get; set; } Property Value Type Description Single VertOriginX Declaration public float VertOriginX { get; set; } Property Value Type Description Single VertOriginY Declaration public float VertOriginY { get; set; } Property Value Type Description Single Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgVisualElement.DeepCopy<T>() OnPathUpdated() Declaration public void OnPathUpdated() Path(ISvgRenderer) Gets the for this element. Declaration public override GraphicsPath Path(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer Returns Type Description GraphicsPath Overrides SvgVisualElement.Path(ISvgRenderer) Implements ISvgTransformable System.ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable ISvgPathElement"
  },
  "api/Svg.SvgGdiPlusCannotBeLoadedException.html": {
    "href": "api/Svg.SvgGdiPlusCannotBeLoadedException.html",
    "title": "Class SvgGdiPlusCannotBeLoadedException | SVG.NET API",
    "keywords": "Class SvgGdiPlusCannotBeLoadedException Inheritance Object Exception SvgGdiPlusCannotBeLoadedException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class SvgGdiPlusCannotBeLoadedException : Exception, ISerializable, _Exception Constructors SvgGdiPlusCannotBeLoadedException(Exception) Declaration public SvgGdiPlusCannotBeLoadedException(Exception inner) Parameters Type Name Description Exception inner Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/Svg.SvgFragment.html": {
    "href": "api/Svg.SvgFragment.html",
    "title": "Class SvgFragment | SVG.NET API",
    "keywords": "Class SvgFragment An SvgFragment represents an SVG fragment that can be the root element or an embedded fragment of an SVG document. Inheritance Object SvgElement SvgFragment SvgDocument Implements ISvgTransformable ICloneable ISvgNode ISvgViewPort ISvgBoundable Inherited Members SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"svg\")] public class SvgFragment : SvgElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode, ISvgViewPort, ISvgBoundable Fields Namespace Gets the SVG namespace string. Declaration public static readonly Uri Namespace Field Value Type Description Uri Properties AspectRatio Gets or sets the aspect of the viewport. Declaration public SvgAspectRatio AspectRatio { get; set; } Property Value Type Description SvgAspectRatio Bounds Gets the bounds of the svg element. Declaration public RectangleF Bounds { get; } Property Value Type Description RectangleF The bounds. FontFamily Indicates which font family is to be used to render the text. Declaration public override string FontFamily { get; set; } Property Value Type Description String Overrides SvgElement.FontFamily FontSize Refers to the size of the font from baseline to baseline when multiple lines of text are set solid in a multiline layout environment. Declaration public override SvgUnit FontSize { get; set; } Property Value Type Description SvgUnit Overrides SvgElement.FontSize Height Gets or sets the height of the fragment. Declaration public SvgUnit Height { get; set; } Property Value Type Description SvgUnit The height. Overflow Declaration public virtual SvgOverflow Overflow { get; set; } Property Value Type Description SvgOverflow Path Gets the for this element. Declaration public GraphicsPath Path { get; } Property Value Type Description GraphicsPath SpaceHandling Declaration public override XmlSpaceHandling SpaceHandling { get; set; } Property Value Type Description XmlSpaceHandling Overrides SvgElement.SpaceHandling ViewBox Gets or sets the viewport of the element. Declaration public SvgViewBox ViewBox { get; set; } Property Value Type Description SvgViewBox Width Gets or sets the width of the fragment. Declaration public SvgUnit Width { get; set; } Property Value Type Description SvgUnit The width. X Gets or sets the position where the left point of the svg should start. Declaration public SvgUnit X { get; set; } Property Value Type Description SvgUnit Y Gets or sets the position where the top point of the svg should start. Declaration public SvgUnit Y { get; set; } Property Value Type Description SvgUnit Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgElement.DeepCopy<T>() GetDimensions() Declaration public SizeF GetDimensions() Returns Type Description SizeF PushTransforms(ISvgRenderer) Applies the required transforms to ISvgRenderer . Declaration protected override bool PushTransforms(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The ISvgRenderer to be transformed. Returns Type Description Boolean Overrides SvgElement.PushTransforms(ISvgRenderer) Render(ISvgRenderer) Declaration protected override void Render(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer Overrides SvgElement.Render(ISvgRenderer) WriteStartElement(XmlTextWriter) Declaration protected override void WriteStartElement(XmlTextWriter writer) Parameters Type Name Description XmlTextWriter writer Overrides SvgElement.WriteStartElement(XmlTextWriter) Explicit Interface Implementations ISvgBoundable.Bounds Declaration RectangleF ISvgBoundable.Bounds { get; } Returns Type Description RectangleF ISvgBoundable.Location Declaration PointF ISvgBoundable.Location { get; } Returns Type Description PointF ISvgBoundable.Size Declaration SizeF ISvgBoundable.Size { get; } Returns Type Description SizeF Implements ISvgTransformable System.ICloneable ISvgNode ISvgViewPort ISvgBoundable"
  },
  "api/Svg.SvgForeignObject.html": {
    "href": "api/Svg.SvgForeignObject.html",
    "title": "Class SvgForeignObject | SVG.NET API",
    "keywords": "Class SvgForeignObject The 'foreignObject' element allows for inclusion of a foreign namespace which has its graphical content drawn by a different user agent Inheritance Object SvgElement SvgVisualElement SvgForeignObject Implements ISvgTransformable ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable Inherited Members SvgVisualElement.ISvgBoundable.Location SvgVisualElement.ISvgBoundable.Size SvgVisualElement.Clip SvgVisualElement.ClipPath SvgVisualElement.ClipRule SvgVisualElement.Filter SvgVisualElement.RequiresSmoothRendering SvgVisualElement.Render(ISvgRenderer) SvgVisualElement.RenderFillAndStroke(ISvgRenderer) SvgVisualElement.RenderFill(ISvgRenderer) SvgVisualElement.RenderStroke(ISvgRenderer) SvgVisualElement.SetClip(ISvgRenderer) SvgVisualElement.ResetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.SetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.ResetClip(ISvgRenderer) SvgVisualElement.Visible SvgVisualElement.Display SvgVisualElement.Displayable SvgVisualElement.EnableBackground SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"foreignObject\")] public class SvgForeignObject : SvgVisualElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode, ISvgBoundable, ISvgStylable, ISvgClipable Properties Bounds Gets the bounds of the element. Declaration public override Drawing.RectangleF Bounds { get; } Property Value Type Description Drawing.RectangleF The bounds. Overrides SvgVisualElement.Bounds Renderable Declaration protected override bool Renderable { get; } Property Value Type Description Boolean Overrides SvgVisualElement.Renderable Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgVisualElement.DeepCopy<T>() Path(ISvgRenderer) Gets the for this element. Declaration public override Drawing.Drawing2D.GraphicsPath Path(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer Returns Type Description Drawing.Drawing2D.GraphicsPath Overrides SvgVisualElement.Path(ISvgRenderer) Implements ISvgTransformable System.ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable"
  },
  "api/Svg.SvgFontWeightConverter.html": {
    "href": "api/Svg.SvgFontWeightConverter.html",
    "title": "Class SvgFontWeightConverter | SVG.NET API",
    "keywords": "Class SvgFontWeightConverter Inheritance Object BaseConverter EnumBaseConverter < SvgFontWeight > SvgFontWeightConverter Inherited Members EnumBaseConverter<SvgFontWeight>.CaseHandlingMode EnumBaseConverter<SvgFontWeight>.DefaultValue BaseConverter.CanConvertFrom(ITypeDescriptorContext, Type) BaseConverter.CanConvertTo(ITypeDescriptorContext, Type) Namespace : Svg Assembly : cs.temp.dll.dll Syntax public sealed class SvgFontWeightConverter : EnumBaseConverter<SvgFontWeight> Constructors SvgFontWeightConverter() Declaration public SvgFontWeightConverter() Methods ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) Declaration public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) Parameters Type Name Description ITypeDescriptorContext context CultureInfo culture Object value Returns Type Description Object Overrides Svg.EnumBaseConverter<Svg.SvgFontWeight>.ConvertFrom(ITypeDescriptorContext, CultureInfo, System.Object) ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type) Declaration public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType) Parameters Type Name Description ITypeDescriptorContext context CultureInfo culture Object value Type destinationType Returns Type Description Object Overrides Svg.EnumBaseConverter<Svg.SvgFontWeight>.ConvertTo(ITypeDescriptorContext, CultureInfo, System.Object, System.Type)"
  },
  "api/Svg.SvgCoordinateUnitsConverter.html": {
    "href": "api/Svg.SvgCoordinateUnitsConverter.html",
    "title": "Class SvgCoordinateUnitsConverter | SVG.NET API",
    "keywords": "Class SvgCoordinateUnitsConverter Inheritance Object BaseConverter EnumBaseConverter < SvgCoordinateUnits > SvgCoordinateUnitsConverter Inherited Members EnumBaseConverter<SvgCoordinateUnits>.CaseHandlingMode EnumBaseConverter<SvgCoordinateUnits>.DefaultValue EnumBaseConverter<SvgCoordinateUnits>.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) EnumBaseConverter<SvgCoordinateUnits>.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type) BaseConverter.CanConvertFrom(ITypeDescriptorContext, Type) BaseConverter.CanConvertTo(ITypeDescriptorContext, Type) Namespace : Svg Assembly : cs.temp.dll.dll Syntax public sealed class SvgCoordinateUnitsConverter : EnumBaseConverter<SvgCoordinateUnits> Constructors SvgCoordinateUnitsConverter() Declaration public SvgCoordinateUnitsConverter()"
  },
  "api/Svg.SvgCoordinateUnits.html": {
    "href": "api/Svg.SvgCoordinateUnits.html",
    "title": "Enum SvgCoordinateUnits | SVG.NET API",
    "keywords": "Enum SvgCoordinateUnits Defines the various coordinate units certain SVG elements may use. Namespace : Svg Assembly : cs.temp.dll.dll Syntax public enum SvgCoordinateUnits Fields Name Description Inherit ObjectBoundingBox Indicates that the coordinate system of the owner element is to be used. UserSpaceOnUse Indicates that the coordinate system of the entire document is to be used."
  },
  "api/Svg.SvgBoolConverter.html": {
    "href": "api/Svg.SvgBoolConverter.html",
    "title": "Class SvgBoolConverter | SVG.NET API",
    "keywords": "Class SvgBoolConverter Inheritance Object BaseConverter SvgBoolConverter Inherited Members BaseConverter.CanConvertFrom(ITypeDescriptorContext, Type) BaseConverter.CanConvertTo(ITypeDescriptorContext, Type) Namespace : Svg Assembly : cs.temp.dll.dll Syntax public sealed class SvgBoolConverter : BaseConverter Methods ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) Declaration public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) Parameters Type Name Description ITypeDescriptorContext context CultureInfo culture Object value Returns Type Description Object ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type) Declaration public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType) Parameters Type Name Description ITypeDescriptorContext context CultureInfo culture Object value Type destinationType Returns Type Description Object"
  },
  "api/Svg.SvgAttributeCollection.html": {
    "href": "api/Svg.SvgAttributeCollection.html",
    "title": "Class SvgAttributeCollection | SVG.NET API",
    "keywords": "Class SvgAttributeCollection A collection of Scalable Vector Attributes that can be inherited from the owner elements ancestors. Inheritance Object Dictionary < String , Object > SvgAttributeCollection Implements IDictionary < String , Object > ICollection < KeyValuePair < String , Object >> IDictionary ICollection IReadOnlyDictionary < String , Object > IReadOnlyCollection < KeyValuePair < String , Object >> IEnumerable < KeyValuePair < String , Object >> IEnumerable ISerializable IDeserializationCallback Inherited Members Dictionary<String, Object>.Add(String, Object) System.Collections.Generic.Dictionary<System.String, System.Object>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.Add(System.Collections.Generic.KeyValuePair<System.String, System.Object>) System.Collections.Generic.Dictionary<System.String, System.Object>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.Contains(System.Collections.Generic.KeyValuePair<System.String, System.Object>) System.Collections.Generic.Dictionary<System.String, System.Object>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.Remove(System.Collections.Generic.KeyValuePair<System.String, System.Object>) Dictionary<String, Object>.Clear() Dictionary<String, Object>.ContainsKey(String) Dictionary<String, Object>.ContainsValue(Object) Dictionary<String, Object>.GetEnumerator() System.Collections.Generic.Dictionary<System.String, System.Object>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.GetEnumerator() Dictionary<String, Object>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<String, Object>.OnDeserialization(Object) Dictionary<String, Object>.Remove(String) Dictionary<String, Object>.TryGetValue(String, Object) System.Collections.Generic.Dictionary<System.String, System.Object>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, System.Object>[], System.Int32) Dictionary<String, Object>.ICollection.CopyTo(Array, Int32) Dictionary<String, Object>.IEnumerable.GetEnumerator() System.Collections.Generic.Dictionary<System.String, System.Object>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.Dictionary<System.String, System.Object>.System.Collections.IDictionary.set_Item(System.Object, System.Object) Dictionary<String, Object>.IDictionary.Add(Object, Object) Dictionary<String, Object>.IDictionary.Contains(Object) Dictionary<String, Object>.IDictionary.GetEnumerator() Dictionary<String, Object>.IDictionary.Remove(Object) Dictionary<String, Object>.Comparer Dictionary<String, Object>.Count Dictionary<String, Object>.Keys System.Collections.Generic.Dictionary<System.String, System.Object>.System.Collections.Generic.IDictionary<System.String, System.Object>.Keys System.Collections.Generic.Dictionary<System.String, System.Object>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>.Keys Dictionary<String, Object>.Values System.Collections.Generic.Dictionary<System.String, System.Object>.System.Collections.Generic.IDictionary<System.String, System.Object>.Values System.Collections.Generic.Dictionary<System.String, System.Object>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>.Values Dictionary<String, Object>.Item[String] System.Collections.Generic.Dictionary<System.String, System.Object>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.IsReadOnly Dictionary<String, Object>.ICollection.IsSynchronized Dictionary<String, Object>.ICollection.SyncRoot Dictionary<String, Object>.IDictionary.IsFixedSize Dictionary<String, Object>.IDictionary.IsReadOnly Dictionary<String, Object>.IDictionary.Keys Dictionary<String, Object>.IDictionary.Values Dictionary<String, Object>.IDictionary.Item[Object] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public sealed class SvgAttributeCollection : Dictionary<string, object>, IDictionary<string, object>, ICollection<KeyValuePair<string, object>>, IDictionary, ICollection, IReadOnlyDictionary<string, object>, IReadOnlyCollection<KeyValuePair<string, object>>, IEnumerable<KeyValuePair<string, object>>, IEnumerable, ISerializable, IDeserializationCallback Constructors SvgAttributeCollection(SvgElement) Initialises a new instance of a SvgAttributeCollection with the given SvgElement as the owner. Declaration public SvgAttributeCollection(SvgElement owner) Parameters Type Name Description SvgElement owner The SvgElement owner of the collection. Properties Item[String] Gets the attribute with the specified name. Declaration public object this[string attributeName] { get; set; } Parameters Type Name Description String attributeName A String containing the attribute name. Property Value Type Description Object The attribute value associated with the specified name; If there is no attribute the parent's value will be inherited. Methods GetAttribute<TAttributeType>(String, TAttributeType) Gets the attribute with the specified name. Declaration public TAttributeType GetAttribute<TAttributeType>(string attributeName, TAttributeType defaultValue = null) Parameters Type Name Description String attributeName A String containing the name of the attribute. TAttributeType defaultValue The value to return if a value hasn't already been specified. Returns Type Description TAttributeType The attribute value if available; otherwise the default value of TAttributeType . Type Parameters Name Description TAttributeType The type of the attribute value. GetInheritedAttribute<TAttributeType>(String, TAttributeType) Gets the attribute with the specified name and inherits from ancestors if there is no attribute set. Declaration public TAttributeType GetInheritedAttribute<TAttributeType>(string attributeName, TAttributeType defaultValue = null) Parameters Type Name Description String attributeName A String containing the name of the attribute. TAttributeType defaultValue The value to return if a value hasn't already been specified. Returns Type Description TAttributeType The attribute value if available; otherwise the ancestors value for the same attribute; otherwise the default value of TAttributeType . Type Parameters Name Description TAttributeType The type of the attribute value. Events AttributeChanged Fired when an Atrribute has changed Declaration public event EventHandler<AttributeEventArgs> AttributeChanged Event Type Type Description EventHandler < AttributeEventArgs > Implements System.Collections.Generic.IDictionary<TKey,TValue> System.Collections.Generic.ICollection<T> System.Collections.IDictionary System.Collections.ICollection System.Collections.Generic.IReadOnlyDictionary<TKey,TValue> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.Runtime.Serialization.ISerializable System.Runtime.Serialization.IDeserializationCallback"
  },
  "api/Svg.SvgAttributeAttribute.html": {
    "href": "api/Svg.SvgAttributeAttribute.html",
    "title": "Class SvgAttributeAttribute | SVG.NET API",
    "keywords": "Class SvgAttributeAttribute Specifies the SVG attribute name of the associated property. Inheritance Object Attribute SvgAttributeAttribute Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [AttributeUsage(AttributeTargets.Property | AttributeTargets.Event)] public class SvgAttributeAttribute : Attribute, _Attribute Constructors SvgAttributeAttribute(String, String) Initializes a new instance of the SvgAttributeAttribute class with the specified SVG attribute name and namespace. Declaration public SvgAttributeAttribute(string name, string nameSpace) Parameters Type Name Description String name The name of the SVG attribute. String nameSpace The namespace of the SVG attribute (e.g. http://www.w3.org/2000/svg ). Fields Namespaces Declaration public static readonly List<KeyValuePair<string, string>> Namespaces Field Value Type Description List < KeyValuePair < String , String >> SvgNamespace Gets a String containing the XLink namespace ( http://www.w3.org/1999/xlink ). Declaration public const string SvgNamespace = \"http://www.w3.org/2000/svg\" Field Value Type Description String XLinkNamespace Declaration public const string XLinkNamespace = \"http://www.w3.org/1999/xlink\" Field Value Type Description String XLinkPrefix Declaration public const string XLinkPrefix = \"xlink\" Field Value Type Description String XmlNamespace Declaration public const string XmlNamespace = \"http://www.w3.org/XML/1998/namespace\" Field Value Type Description String XmlPrefix Declaration public const string XmlPrefix = \"xml\" Field Value Type Description String Properties Name Gets the name of the SVG attribute. Declaration public string Name { get; } Property Value Type Description String NameSpace Gets the namespace of the SVG attribute. Declaration public string NameSpace { get; } Property Value Type Description String NamespaceAndName Gets the name of the SVG attribute. Declaration public string NamespaceAndName { get; } Property Value Type Description String Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Attribute.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Attribute.GetHashCode() Implements System.Runtime.InteropServices._Attribute"
  },
  "api/Svg.SvgAspectRatio.html": {
    "href": "api/Svg.SvgAspectRatio.html",
    "title": "Class SvgAspectRatio | SVG.NET API",
    "keywords": "Class SvgAspectRatio Description of SvgAspectRatio. Inheritance Object SvgAspectRatio Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class SvgAspectRatio Constructors SvgAspectRatio() Declaration public SvgAspectRatio() SvgAspectRatio(SvgPreserveAspectRatio) Declaration public SvgAspectRatio(SvgPreserveAspectRatio align) Parameters Type Name Description SvgPreserveAspectRatio align SvgAspectRatio(SvgPreserveAspectRatio, Boolean) Declaration public SvgAspectRatio(SvgPreserveAspectRatio align, bool slice) Parameters Type Name Description SvgPreserveAspectRatio align Boolean slice SvgAspectRatio(SvgPreserveAspectRatio, Boolean, Boolean) Declaration public SvgAspectRatio(SvgPreserveAspectRatio align, bool slice, bool defer) Parameters Type Name Description SvgPreserveAspectRatio align Boolean slice Boolean defer Properties Align Declaration public SvgPreserveAspectRatio Align { get; set; } Property Value Type Description SvgPreserveAspectRatio Defer Declaration public bool Defer { get; set; } Property Value Type Description Boolean Slice Declaration public bool Slice { get; set; } Property Value Type Description Boolean Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/Svg.SVGArg.html": {
    "href": "api/Svg.SVGArg.html",
    "title": "Class SVGArg | SVG.NET API",
    "keywords": "Class SVGArg Inheritance Object EventArgs SVGArg AttributeEventArgs ChildAddedEventArgs ContentEventArgs MouseArg MouseScrollArg StringArg Inherited Members EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class SVGArg : EventArgs Fields SessionID Declaration public string SessionID Field Value Type Description String"
  },
  "api/Svg.StringArg.html": {
    "href": "api/Svg.StringArg.html",
    "title": "Class StringArg | SVG.NET API",
    "keywords": "Class StringArg Represents a string argument Inheritance Object EventArgs SVGArg StringArg Inherited Members SVGArg.SessionID EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class StringArg : SVGArg Fields s Declaration public string s Field Value Type Description String"
  },
  "api/Svg.FilterEffects.SvgGaussianBlur.html": {
    "href": "api/Svg.FilterEffects.SvgGaussianBlur.html",
    "title": "Class SvgGaussianBlur | SVG.NET API",
    "keywords": "Class SvgGaussianBlur Inheritance Object SvgElement SvgFilterPrimitive SvgGaussianBlur Implements ISvgTransformable ICloneable ISvgNode Inherited Members SvgFilterPrimitive.SourceGraphic SvgFilterPrimitive.SourceAlpha SvgFilterPrimitive.BackgroundImage SvgFilterPrimitive.BackgroundAlpha SvgFilterPrimitive.FillPaint SvgFilterPrimitive.StrokePaint SvgFilterPrimitive.Input SvgFilterPrimitive.Result SvgFilterPrimitive.Owner SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.Render(ISvgRenderer) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.FilterEffects Assembly : cs.temp.dll.dll Syntax [SvgElement(\"feGaussianBlur\")] public class SvgGaussianBlur : SvgFilterPrimitive, ISvgElement, ISvgTransformable, ICloneable, ISvgNode Constructors SvgGaussianBlur() Declaration public SvgGaussianBlur() SvgGaussianBlur(Single) Declaration public SvgGaussianBlur(float stdDeviation) Parameters Type Name Description Single stdDeviation SvgGaussianBlur(Single, BlurType) Declaration public SvgGaussianBlur(float stdDeviation, BlurType blurType) Parameters Type Name Description Single stdDeviation BlurType blurType Properties BlurType Declaration public BlurType BlurType { get; set; } Property Value Type Description BlurType StdDeviation Gets or sets the radius of the blur (only allows for one value - not the two specified in the SVG Spec) Declaration public float StdDeviation { get; set; } Property Value Type Description Single Methods Apply(Image) Declaration public Bitmap Apply(Image inputImage) Parameters Type Name Description Image inputImage Returns Type Description Bitmap DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgElement.DeepCopy<T>() Process(ImageBuffer) Declaration public override void Process(ImageBuffer buffer) Parameters Type Name Description ImageBuffer buffer Overrides SvgFilterPrimitive.Process(ImageBuffer) Implements ISvgTransformable System.ICloneable ISvgNode"
  },
  "api/Svg.FilterEffects.SvgFilterPrimitive.html": {
    "href": "api/Svg.FilterEffects.SvgFilterPrimitive.html",
    "title": "Class SvgFilterPrimitive | SVG.NET API",
    "keywords": "Class SvgFilterPrimitive Inheritance Object SvgElement SvgFilterPrimitive SvgColourMatrix SvgGaussianBlur SvgMerge SvgOffset Implements ISvgTransformable ICloneable ISvgNode Inherited Members SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.Render(ISvgRenderer) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.DeepCopy() SvgElement.ISvgNode.DeepCopy() SvgElement.DeepCopy<T>() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.FilterEffects Assembly : cs.temp.dll.dll Syntax public abstract class SvgFilterPrimitive : SvgElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode Fields BackgroundAlpha Declaration public const string BackgroundAlpha = \"BackgroundAlpha\" Field Value Type Description String BackgroundImage Declaration public const string BackgroundImage = \"BackgroundImage\" Field Value Type Description String FillPaint Declaration public const string FillPaint = \"FillPaint\" Field Value Type Description String SourceAlpha Declaration public const string SourceAlpha = \"SourceAlpha\" Field Value Type Description String SourceGraphic Declaration public const string SourceGraphic = \"SourceGraphic\" Field Value Type Description String StrokePaint Declaration public const string StrokePaint = \"StrokePaint\" Field Value Type Description String Properties Input Declaration public string Input { get; set; } Property Value Type Description String Owner Declaration protected SvgFilter Owner { get; } Property Value Type Description SvgFilter Result Declaration public string Result { get; set; } Property Value Type Description String Methods Process(ImageBuffer) Declaration public abstract void Process(ImageBuffer buffer) Parameters Type Name Description ImageBuffer buffer Implements ISvgTransformable System.ICloneable ISvgNode"
  },
  "api/Svg.FilterEffects.SvgFilter.html": {
    "href": "api/Svg.FilterEffects.SvgFilter.html",
    "title": "Class SvgFilter | SVG.NET API",
    "keywords": "Class SvgFilter A filter effect consists of a series of graphics operations that are applied to a given source graphic to produce a modified graphical result. Inheritance Object SvgElement SvgFilter Implements ISvgTransformable ICloneable ISvgNode Inherited Members SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.FilterEffects Assembly : cs.temp.dll.dll Syntax [SvgElement(\"filter\")] public sealed class SvgFilter : SvgElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode Properties ColorInterpolationFilters Gets or sets the color-interpolation-filters of the resulting filter graphic. NOT currently mapped through to bitmap Declaration public SvgColourInterpolation ColorInterpolationFilters { get; set; } Property Value Type Description SvgColourInterpolation Height Gets or sets the height of the resulting filter graphic. Declaration public SvgUnit Height { get; set; } Property Value Type Description SvgUnit Width Gets or sets the width of the resulting filter graphic. Declaration public SvgUnit Width { get; set; } Property Value Type Description SvgUnit X Gets or sets the position where the left point of the filter. Declaration public SvgUnit X { get; set; } Property Value Type Description SvgUnit Y Gets or sets the position where the top point of the filter. Declaration public SvgUnit Y { get; set; } Property Value Type Description SvgUnit Methods ApplyFilter(SvgVisualElement, ISvgRenderer, Action<ISvgRenderer>) Declaration public void ApplyFilter(SvgVisualElement element, ISvgRenderer renderer, Action<ISvgRenderer> renderMethod) Parameters Type Name Description SvgVisualElement element ISvgRenderer renderer Action < ISvgRenderer > renderMethod DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgElement.DeepCopy<T>() Render(ISvgRenderer) Renders the SvgElement and contents to the specified ISvgRenderer object. Declaration protected override void Render(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The ISvgRenderer object to render to. Overrides SvgElement.Render(ISvgRenderer) Implements ISvgTransformable System.ICloneable ISvgNode"
  },
  "api/Svg.FilterEffects.SvgColourMatrixType.html": {
    "href": "api/Svg.FilterEffects.SvgColourMatrixType.html",
    "title": "Enum SvgColourMatrixType | SVG.NET API",
    "keywords": "Enum SvgColourMatrixType Namespace : Svg.FilterEffects Assembly : cs.temp.dll.dll Syntax public enum SvgColourMatrixType Fields Name Description HueRotate LuminanceToAlpha Matrix Saturate"
  },
  "api/Svg.FilterEffects.SvgColourMatrix.html": {
    "href": "api/Svg.FilterEffects.SvgColourMatrix.html",
    "title": "Class SvgColourMatrix | SVG.NET API",
    "keywords": "Class SvgColourMatrix Note: this is not used in calculations to bitmap - used only to allow for svg xml output Inheritance Object SvgElement SvgFilterPrimitive SvgColourMatrix Implements ISvgTransformable ICloneable ISvgNode Inherited Members SvgFilterPrimitive.SourceGraphic SvgFilterPrimitive.SourceAlpha SvgFilterPrimitive.BackgroundImage SvgFilterPrimitive.BackgroundAlpha SvgFilterPrimitive.FillPaint SvgFilterPrimitive.StrokePaint SvgFilterPrimitive.Input SvgFilterPrimitive.Result SvgFilterPrimitive.Owner SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.Render(ISvgRenderer) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.FilterEffects Assembly : cs.temp.dll.dll Syntax [SvgElement(\"feColorMatrix\")] public class SvgColourMatrix : SvgFilterPrimitive, ISvgElement, ISvgTransformable, ICloneable, ISvgNode Properties Type matrix | saturate | hueRotate | luminanceToAlpha Indicates the type of matrix operation. The keyword 'matrix' indicates that a full 5x4 matrix of values will be provided. The other keywords represent convenience shortcuts to allow commonly used color operations to be performed without specifying a complete matrix. If attribute 'type' is not specified, then the effect is as if a value of matrix were specified. Note: this is not used in calculations to bitmap - used only to allow for svg xml output Declaration public SvgColourMatrixType Type { get; set; } Property Value Type Description SvgColourMatrixType Values list of numbers The contents of ?values? depends on the value of attribute ?type?: Note: this is not used in calculations to bitmap - used only to allow for svg xml output Declaration public string Values { get; set; } Property Value Type Description String Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgElement.DeepCopy<T>() Process(ImageBuffer) Declaration public override void Process(ImageBuffer buffer) Parameters Type Name Description ImageBuffer buffer Overrides SvgFilterPrimitive.Process(ImageBuffer) Implements ISvgTransformable System.ICloneable ISvgNode"
  },
  "api/Svg.FilterEffects.ISvgFilterable.html": {
    "href": "api/Svg.FilterEffects.ISvgFilterable.html",
    "title": "Interface ISvgFilterable | SVG.NET API",
    "keywords": "Interface ISvgFilterable Namespace : Svg.FilterEffects Assembly : cs.temp.dll.dll Syntax public interface ISvgFilterable Properties Filter Declaration SvgFilter Filter { get; set; } Property Value Type Description SvgFilter"
  },
  "api/Svg.FilterEffects.ImageBuffer.html": {
    "href": "api/Svg.FilterEffects.ImageBuffer.html",
    "title": "Class ImageBuffer | SVG.NET API",
    "keywords": "Class ImageBuffer Inheritance Object ImageBuffer Implements IDictionary < String , Bitmap > ICollection < KeyValuePair < String , Bitmap >> IEnumerable < KeyValuePair < String , Bitmap >> IEnumerable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.FilterEffects Assembly : cs.temp.dll.dll Syntax public class ImageBuffer : IDictionary<string, Bitmap>, ICollection<KeyValuePair<string, Bitmap>>, IEnumerable<KeyValuePair<string, Bitmap>>, IEnumerable Constructors ImageBuffer(RectangleF, Single, ISvgRenderer, Action<ISvgRenderer>) Declaration public ImageBuffer(RectangleF bounds, float inflate, ISvgRenderer renderer, Action<ISvgRenderer> renderMethod) Parameters Type Name Description RectangleF bounds Single inflate ISvgRenderer renderer Action < ISvgRenderer > renderMethod Properties Buffer Declaration public Bitmap Buffer { get; } Property Value Type Description Bitmap Count Declaration public int Count { get; } Property Value Type Description Int32 Item[String] Declaration public Bitmap this[string key] { get; set; } Parameters Type Name Description String key Property Value Type Description Bitmap Transform Declaration public Matrix Transform { get; set; } Property Value Type Description Matrix Methods Add(String, Bitmap) Declaration public void Add(string key, Bitmap value) Parameters Type Name Description String key Bitmap value Clear() Declaration public void Clear() ContainsKey(String) Declaration public bool ContainsKey(string key) Parameters Type Name Description String key Returns Type Description Boolean GetEnumerator() Declaration public IEnumerator<KeyValuePair<string, Bitmap>> GetEnumerator() Returns Type Description IEnumerator < KeyValuePair < String , Bitmap >> Remove(String) Declaration public bool Remove(string key) Parameters Type Name Description String key Returns Type Description Boolean TryGetValue(String, out Bitmap) Declaration public bool TryGetValue(string key, out Bitmap value) Parameters Type Name Description String key Bitmap value Returns Type Description Boolean Explicit Interface Implementations ICollection<KeyValuePair<String, Bitmap>>.Add(KeyValuePair<String, Bitmap>) Declaration void ICollection<KeyValuePair<string, Bitmap>>.Add(KeyValuePair<string, Bitmap> item) Parameters Type Name Description KeyValuePair < String , Bitmap > item ICollection<KeyValuePair<String, Bitmap>>.Contains(KeyValuePair<String, Bitmap>) Declaration bool ICollection<KeyValuePair<string, Bitmap>>.Contains(KeyValuePair<string, Bitmap> item) Parameters Type Name Description KeyValuePair < String , Bitmap > item Returns Type Description Boolean ICollection<KeyValuePair<String, Bitmap>>.CopyTo(KeyValuePair<String, Bitmap>[], Int32) Declaration void ICollection<KeyValuePair<string, Bitmap>>.CopyTo(KeyValuePair<string, Bitmap>[] array, int arrayIndex) Parameters Type Name Description KeyValuePair < String , Bitmap >[] array Int32 arrayIndex ICollection<KeyValuePair<String, Bitmap>>.IsReadOnly Declaration bool ICollection<KeyValuePair<string, Bitmap>>.IsReadOnly { get; } Returns Type Description Boolean ICollection<KeyValuePair<String, Bitmap>>.Remove(KeyValuePair<String, Bitmap>) Declaration bool ICollection<KeyValuePair<string, Bitmap>>.Remove(KeyValuePair<string, Bitmap> item) Parameters Type Name Description KeyValuePair < String , Bitmap > item Returns Type Description Boolean IDictionary<String, Bitmap>.Keys Declaration ICollection<string> IDictionary<string, Bitmap>.Keys { get; } Returns Type Description ICollection < String > IDictionary<String, Bitmap>.Values Declaration ICollection<Bitmap> IDictionary<string, Bitmap>.Values { get; } Returns Type Description ICollection < Bitmap > IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator Implements System.Collections.Generic.IDictionary<TKey,TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/Svg.FilterEffects.BlurType.html": {
    "href": "api/Svg.FilterEffects.BlurType.html",
    "title": "Enum BlurType | SVG.NET API",
    "keywords": "Enum BlurType Namespace : Svg.FilterEffects Assembly : cs.temp.dll.dll Syntax public enum BlurType Fields Name Description Both HorizontalOnly VerticalOnly"
  },
  "api/Svg.ExCSS.StyleDeclaration.html": {
    "href": "api/Svg.ExCSS.StyleDeclaration.html",
    "title": "Class StyleDeclaration | SVG.NET API",
    "keywords": "Class StyleDeclaration Inheritance Object StyleDeclaration Implements IList < Property > ICollection < Property > IEnumerable < Property > IEnumerable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public class StyleDeclaration : IList<Property>, ICollection<Property>, IEnumerable<Property>, IEnumerable Constructors StyleDeclaration() Declaration public StyleDeclaration() Properties Count Declaration public int Count { get; } Property Value Type Description Int32 IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description Boolean Item[Int32] Declaration public Property this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Property ParentRule Declaration public RuleSet ParentRule { get; set; } Property Value Type Description RuleSet Properties Declaration public List<Property> Properties { get; } Property Value Type Description List < Property > Value Declaration public string Value { get; set; } Property Value Type Description String Methods Add(Property) Declaration public void Add(Property item) Parameters Type Name Description Property item Clear() Declaration public void Clear() Contains(Property) Declaration public bool Contains(Property item) Parameters Type Name Description Property item Returns Type Description Boolean CopyTo(Property[], Int32) Declaration public void CopyTo(Property[] array, int arrayIndex) Parameters Type Name Description Property [] array Int32 arrayIndex GetEnumerator() Declaration public IEnumerator<Property> GetEnumerator() Returns Type Description IEnumerator < Property > IndexOf(Property) Declaration public int IndexOf(Property item) Parameters Type Name Description Property item Returns Type Description Int32 Insert(Int32, Property) Declaration public void Insert(int index, Property item) Parameters Type Name Description Int32 index Property item Remove(Property) Declaration public bool Remove(Property item) Parameters Type Name Description Property item Returns Type Description Boolean RemoveAt(Int32) Declaration public void RemoveAt(int index) Parameters Type Name Description Int32 index ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() ToString(Boolean, Int32) Declaration public string ToString(bool friendlyFormat, int indentation = 0) Parameters Type Name Description Boolean friendlyFormat Int32 indentation Returns Type Description String Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/Svg.ExCSS.SimpleSelector.html": {
    "href": "api/Svg.ExCSS.SimpleSelector.html",
    "title": "Class SimpleSelector | SVG.NET API",
    "keywords": "Class SimpleSelector Inheritance Object BaseSelector SimpleSelector Inherited Members BaseSelector.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public sealed class SimpleSelector : BaseSelector Constructors SimpleSelector(String) Declaration public SimpleSelector(string selectorText) Parameters Type Name Description String selectorText Methods ToString(Boolean, Int32) Declaration public override string ToString(bool friendlyFormat, int indentation = 0) Parameters Type Name Description Boolean friendlyFormat Int32 indentation Returns Type Description String Overrides BaseSelector.ToString(Boolean, Int32)"
  },
  "api/Svg.ExCSS.SelectorList.html": {
    "href": "api/Svg.ExCSS.SelectorList.html",
    "title": "Class SelectorList | SVG.NET API",
    "keywords": "Class SelectorList Inheritance Object BaseSelector SelectorList AggregateSelectorList MultipleSelectorList Implements IEnumerable < BaseSelector > IEnumerable Inherited Members BaseSelector.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public abstract class SelectorList : BaseSelector, IEnumerable<BaseSelector>, IEnumerable Constructors SelectorList() Declaration protected SelectorList() Fields Selectors Declaration protected List<BaseSelector> Selectors Field Value Type Description List < BaseSelector > Properties Item[Int32] Declaration public BaseSelector this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description BaseSelector Length Declaration public int Length { get; } Property Value Type Description Int32 Methods AppendSelector(BaseSelector) Declaration public SelectorList AppendSelector(BaseSelector selector) Parameters Type Name Description BaseSelector selector Returns Type Description SelectorList ClearSelectors() Declaration public SelectorList ClearSelectors() Returns Type Description SelectorList GetEnumerator() Declaration public IEnumerator<BaseSelector> GetEnumerator() Returns Type Description IEnumerator < BaseSelector > RemoveSelector(SimpleSelector) Declaration public SelectorList RemoveSelector(SimpleSelector selector) Parameters Type Name Description SimpleSelector selector Returns Type Description SelectorList ToString(Boolean, Int32) Declaration public abstract override string ToString(bool friendlyFormat, int indentation = 0) Parameters Type Name Description Boolean friendlyFormat Int32 indentation Returns Type Description String Overrides BaseSelector.ToString(Boolean, Int32) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/Svg.ExCSS.RuleType.html": {
    "href": "api/Svg.ExCSS.RuleType.html",
    "title": "Enum RuleType | SVG.NET API",
    "keywords": "Enum RuleType Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public enum RuleType Fields Name Description Charset CounterStyle Document FontFace FontFeatureValues Import Keyframe Keyframes Media Namespace Page RegionStyle Style Supports Unknown Viewport"
  },
  "api/Svg.ExCSS.RuleSet.html": {
    "href": "api/Svg.ExCSS.RuleSet.html",
    "title": "Class RuleSet | SVG.NET API",
    "keywords": "Class RuleSet Inheritance Object RuleSet AggregateRule CharacterSetRule FontFaceRule ImportRule KeyframeRule KeyframesRule NamespaceRule PageRule StyleRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public abstract class RuleSet Properties RuleType Declaration public RuleType RuleType { get; set; } Property Value Type Description RuleType Methods ToString(Boolean, Int32) Declaration public abstract string ToString(bool friendlyFormat, int indentation = 0) Parameters Type Name Description Boolean friendlyFormat Int32 indentation Returns Type Description String"
  },
  "api/Svg.ExCSS.Property.html": {
    "href": "api/Svg.ExCSS.Property.html",
    "title": "Class Property | SVG.NET API",
    "keywords": "Class Property Inheritance Object Property Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public class Property Constructors Property(String) Declaration public Property(string name) Parameters Type Name Description String name Properties Important Declaration public bool Important { get; set; } Property Value Type Description Boolean Name Declaration public string Name { get; } Property Value Type Description String Term Declaration public Term Term { get; set; } Property Value Type Description Term Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() ToString(Boolean, Int32) Declaration public string ToString(bool friendlyFormat, int indentation = 0) Parameters Type Name Description Boolean friendlyFormat Int32 indentation Returns Type Description String"
  },
  "api/Svg.ExCSS.PrimitiveTerm.html": {
    "href": "api/Svg.ExCSS.PrimitiveTerm.html",
    "title": "Class PrimitiveTerm | SVG.NET API",
    "keywords": "Class PrimitiveTerm Inheritance Object Term PrimitiveTerm Inherited Members Term.Inherit Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public class PrimitiveTerm : Term Constructors PrimitiveTerm(UnitType, Single) Declaration public PrimitiveTerm(UnitType unitType, float value) Parameters Type Name Description UnitType unitType Single value PrimitiveTerm(UnitType, String) Declaration public PrimitiveTerm(UnitType unitType, string value) Parameters Type Name Description UnitType unitType String value PrimitiveTerm(String, Single) Declaration public PrimitiveTerm(string unit, float value) Parameters Type Name Description String unit Single value Properties PrimitiveType Declaration public UnitType PrimitiveType { get; set; } Property Value Type Description UnitType Value Declaration public object Value { get; set; } Property Value Type Description Object Methods GetFloatValue(UnitType) Declaration public float? GetFloatValue(UnitType unit) Parameters Type Name Description UnitType unit Returns Type Description Nullable < Single > ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/Svg.ExCSS.ParserError.html": {
    "href": "api/Svg.ExCSS.ParserError.html",
    "title": "Enum ParserError | SVG.NET API",
    "keywords": "Enum ParserError Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public enum ParserError Fields Name Description EndOfFile InvalidCharacter UnexpectedCommentToken UnexpectedLineBreak"
  },
  "api/Svg.ExCSS.Model.Extensions.html": {
    "href": "api/Svg.ExCSS.Model.Extensions.html",
    "title": "Namespace Svg.ExCSS.Model.Extensions | SVG.NET API",
    "keywords": "Namespace Svg.ExCSS.Model.Extensions Classes StringExtensions"
  },
  "api/Svg.ExCSS.Model.Extensions.StringExtensions.html": {
    "href": "api/Svg.ExCSS.Model.Extensions.StringExtensions.html",
    "title": "Class StringExtensions | SVG.NET API",
    "keywords": "Class StringExtensions Inheritance Object StringExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS.Model.Extensions Assembly : cs.temp.dll.dll Syntax public static class StringExtensions Methods Indent(String, Boolean, Int32) Declaration public static string Indent(this string value, bool friendlyForamt, int indentation) Parameters Type Name Description String value Boolean friendlyForamt Int32 indentation Returns Type Description String NewLineIndent(String, Boolean, Int32) Declaration public static string NewLineIndent(this string value, bool friendlyFormat, int indentation) Parameters Type Name Description String value Boolean friendlyFormat Int32 indentation Returns Type Description String TrimFirstLine(String) Declaration public static string TrimFirstLine(this string value) Parameters Type Name Description String value Returns Type Description String TrimFirstLine(StringBuilder) Declaration public static StringBuilder TrimFirstLine(this StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description StringBuilder TrimLastLine(StringBuilder) Declaration public static StringBuilder TrimLastLine(this StringBuilder builder) Parameters Type Name Description StringBuilder builder Returns Type Description StringBuilder"
  },
  "api/Svg.ExCSS.MediaTypeList.html": {
    "href": "api/Svg.ExCSS.MediaTypeList.html",
    "title": "Class MediaTypeList | SVG.NET API",
    "keywords": "Class MediaTypeList Inheritance Object MediaTypeList Implements IEnumerable < String > IEnumerable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public class MediaTypeList : IEnumerable<string>, IEnumerable Properties Count Declaration public int Count { get; } Property Value Type Description Int32 Item[Int32] Declaration public string this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description String MediaType Declaration public string MediaType { get; set; } Property Value Type Description String Methods GetEnumerator() Declaration public IEnumerator<string> GetEnumerator() Returns Type Description IEnumerator < String > ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() ToString(Boolean, Int32) Declaration public string ToString(bool friendlyFormat, int indentation = 0) Parameters Type Name Description Boolean friendlyFormat Int32 indentation Returns Type Description String Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/Svg.ExCSS.MediaRule.html": {
    "href": "api/Svg.ExCSS.MediaRule.html",
    "title": "Class MediaRule | SVG.NET API",
    "keywords": "Class MediaRule Inheritance Object RuleSet AggregateRule ConditionalRule MediaRule Implements ISupportsRuleSets ISupportsMedia Inherited Members AggregateRule.RuleSets RuleSet.RuleType Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public class MediaRule : ConditionalRule, ISupportsRuleSets, ISupportsMedia Constructors MediaRule() Declaration public MediaRule() Properties Condition Declaration public override string Condition { get; set; } Property Value Type Description String Overrides ConditionalRule.Condition Media Declaration public MediaTypeList Media { get; } Property Value Type Description MediaTypeList Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() ToString(Boolean, Int32) Declaration public override string ToString(bool friendlyFormat, int indentation = 0) Parameters Type Name Description Boolean friendlyFormat Int32 indentation Returns Type Description String Overrides RuleSet.ToString(Boolean, Int32) Implements ISupportsRuleSets ISupportsMedia"
  },
  "api/Svg.ExCSS.KeyframesRule.html": {
    "href": "api/Svg.ExCSS.KeyframesRule.html",
    "title": "Class KeyframesRule | SVG.NET API",
    "keywords": "Class KeyframesRule Inheritance Object RuleSet KeyframesRule Implements IRuleContainer Inherited Members RuleSet.RuleType Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public class KeyframesRule : RuleSet, IRuleContainer Constructors KeyframesRule() Declaration public KeyframesRule() Properties Declarations Declaration public List<RuleSet> Declarations { get; } Property Value Type Description List < RuleSet > Identifier Declaration public string Identifier { get; set; } Property Value Type Description String Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() ToString(Boolean, Int32) Declaration public override string ToString(bool friendlyFormat, int indentation = 0) Parameters Type Name Description Boolean friendlyFormat Int32 indentation Returns Type Description String Overrides RuleSet.ToString(Boolean, Int32) Implements IRuleContainer"
  },
  "api/Svg.ExCSS.KeyframeRule.html": {
    "href": "api/Svg.ExCSS.KeyframeRule.html",
    "title": "Class KeyframeRule | SVG.NET API",
    "keywords": "Class KeyframeRule Inheritance Object RuleSet KeyframeRule Implements ISupportsDeclarations Inherited Members RuleSet.RuleType Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public class KeyframeRule : RuleSet, ISupportsDeclarations Constructors KeyframeRule() Declaration public KeyframeRule() Properties Declarations Declaration public StyleDeclaration Declarations { get; } Property Value Type Description StyleDeclaration Value Declaration public string Value { get; set; } Property Value Type Description String Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() ToString(Boolean, Int32) Declaration public override string ToString(bool friendlyFormat, int indentation = 0) Parameters Type Name Description Boolean friendlyFormat Int32 indentation Returns Type Description String Overrides RuleSet.ToString(Boolean, Int32) Implements ISupportsDeclarations"
  },
  "api/Svg.ExCSS.InheritTerm.html": {
    "href": "api/Svg.ExCSS.InheritTerm.html",
    "title": "Class InheritTerm | SVG.NET API",
    "keywords": "Class InheritTerm Inheritance Object Term InheritTerm Inherited Members Term.Inherit Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public class InheritTerm : Term Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/Svg.ExCSS.ImportRule.html": {
    "href": "api/Svg.ExCSS.ImportRule.html",
    "title": "Class ImportRule | SVG.NET API",
    "keywords": "Class ImportRule Inheritance Object RuleSet ImportRule Implements ISupportsMedia Inherited Members RuleSet.RuleType Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public class ImportRule : RuleSet, ISupportsMedia Constructors ImportRule() Declaration public ImportRule() Properties Href Declaration public string Href { get; set; } Property Value Type Description String Media Declaration public MediaTypeList Media { get; } Property Value Type Description MediaTypeList Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() ToString(Boolean, Int32) Declaration public override string ToString(bool friendlyFormat, int indentation = 0) Parameters Type Name Description Boolean friendlyFormat Int32 indentation Returns Type Description String Overrides RuleSet.ToString(Boolean, Int32) Implements ISupportsMedia"
  },
  "api/Svg.Exceptions.SvgMemoryException.html": {
    "href": "api/Svg.Exceptions.SvgMemoryException.html",
    "title": "Class SvgMemoryException | SVG.NET API",
    "keywords": "Class SvgMemoryException Inheritance Object Exception SvgMemoryException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : Svg.Exceptions Assembly : cs.temp.dll.dll Syntax [Serializable] public class SvgMemoryException : Exception, ISerializable, _Exception Constructors SvgMemoryException() Declaration public SvgMemoryException() SvgMemoryException(SerializationInfo, StreamingContext) Declaration protected SvgMemoryException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context SvgMemoryException(String) Declaration public SvgMemoryException(string message) Parameters Type Name Description String message SvgMemoryException(String, Exception) Declaration public SvgMemoryException(string message, Exception inner) Parameters Type Name Description String message Exception inner Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/Svg.Enums.html": {
    "href": "api/Svg.Enums.html",
    "title": "Class Enums | SVG.NET API",
    "keywords": "Class Enums Inheritance Object Enums Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public static class Enums Methods TryParse<TEnum>(String, out TEnum) Declaration [CLSCompliant(false)] public static bool TryParse<TEnum>(string value, out TEnum result) where TEnum : struct, IConvertible Parameters Type Name Description String value TEnum result Returns Type Description Boolean Type Parameters Name Description TEnum"
  },
  "api/Svg.Document_Structure.html": {
    "href": "api/Svg.Document_Structure.html",
    "title": "Namespace Svg.Document_Structure | SVG.NET API",
    "keywords": "Namespace Svg.Document_Structure Classes SvgSymbol An element used to group SVG shapes."
  },
  "api/Svg.Document_Structure.SvgSymbol.html": {
    "href": "api/Svg.Document_Structure.SvgSymbol.html",
    "title": "Class SvgSymbol | SVG.NET API",
    "keywords": "Class SvgSymbol An element used to group SVG shapes. Inheritance Object SvgElement SvgVisualElement SvgSymbol Implements ISvgTransformable ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable Inherited Members SvgVisualElement.ISvgBoundable.Location SvgVisualElement.ISvgBoundable.Size SvgVisualElement.Clip SvgVisualElement.ClipPath SvgVisualElement.ClipRule SvgVisualElement.Filter SvgVisualElement.RequiresSmoothRendering SvgVisualElement.RenderFillAndStroke(ISvgRenderer) SvgVisualElement.RenderFill(ISvgRenderer) SvgVisualElement.RenderStroke(ISvgRenderer) SvgVisualElement.SetClip(ISvgRenderer) SvgVisualElement.ResetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.SetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.ResetClip(ISvgRenderer) SvgVisualElement.Visible SvgVisualElement.Display SvgVisualElement.Displayable SvgVisualElement.EnableBackground SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.Document_Structure Assembly : cs.temp.dll.dll Syntax [SvgElement(\"symbol\")] public class SvgSymbol : SvgVisualElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode, ISvgBoundable, ISvgStylable, ISvgClipable Properties AspectRatio Gets or sets the aspect of the viewport. Declaration public SvgAspectRatio AspectRatio { get; set; } Property Value Type Description SvgAspectRatio Bounds Gets the bounds of the element. Declaration public override Drawing.RectangleF Bounds { get; } Property Value Type Description Drawing.RectangleF The bounds. Overrides SvgVisualElement.Bounds Renderable Declaration protected override bool Renderable { get; } Property Value Type Description Boolean Overrides SvgVisualElement.Renderable ViewBox Gets or sets the viewport of the element. Declaration public SvgViewBox ViewBox { get; set; } Property Value Type Description SvgViewBox Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgVisualElement.DeepCopy<T>() Path(ISvgRenderer) Gets the for this element. Declaration public override Drawing.Drawing2D.GraphicsPath Path(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer Returns Type Description Drawing.Drawing2D.GraphicsPath Overrides SvgVisualElement.Path(ISvgRenderer) PushTransforms(ISvgRenderer) Applies the required transforms to ISvgRenderer . Declaration protected override bool PushTransforms(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The ISvgRenderer to be transformed. Returns Type Description Boolean Overrides SvgElement.PushTransforms(ISvgRenderer) Render(ISvgRenderer) Declaration protected override void Render(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer Overrides SvgVisualElement.Render(ISvgRenderer) Implements ISvgTransformable System.ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable"
  },
  "api/Svg.DataTypes.SvgOrientConverter.html": {
    "href": "api/Svg.DataTypes.SvgOrientConverter.html",
    "title": "Class SvgOrientConverter | SVG.NET API",
    "keywords": "Class SvgOrientConverter Inheritance Object SvgOrientConverter Namespace : Svg.DataTypes Assembly : cs.temp.dll.dll Syntax public sealed class SvgOrientConverter : TypeConverter Methods CanConvertFrom(ITypeDescriptorContext, Type) Declaration public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType) Parameters Type Name Description ITypeDescriptorContext context Type sourceType Returns Type Description Boolean CanConvertTo(ITypeDescriptorContext, Type) Declaration public override bool CanConvertTo(ITypeDescriptorContext context, Type destinationType) Parameters Type Name Description ITypeDescriptorContext context Type destinationType Returns Type Description Boolean ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) Declaration public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) Parameters Type Name Description ITypeDescriptorContext context CultureInfo culture Object value Returns Type Description Object ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type) Declaration public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType) Parameters Type Name Description ITypeDescriptorContext context CultureInfo culture Object value Type destinationType Returns Type Description Object"
  },
  "api/Svg.DataTypes.SvgMarkerUnits.html": {
    "href": "api/Svg.DataTypes.SvgMarkerUnits.html",
    "title": "Enum SvgMarkerUnits | SVG.NET API",
    "keywords": "Enum SvgMarkerUnits Defines the coordinate system for attributes ‘markerWidth’, ‘markerHeight’ and the contents of the ‘marker’. Namespace : Svg.DataTypes Assembly : cs.temp.dll.dll Syntax public enum SvgMarkerUnits Fields Name Description StrokeWidth If markerUnits=\"strokeWidth\", ‘markerWidth’, ‘markerHeight’ and the contents of the ‘marker’ represent values in a coordinate system which has a single unit equal the size in user units of the current stroke width (see the ‘stroke-width’ property) in place for the graphic object referencing the marker. UserSpaceOnUse If markerUnits=\"userSpaceOnUse\", ‘markerWidth’, ‘markerHeight’ and the contents of the ‘marker’ represent values in the current user coordinate system in place for the graphic object referencing the marker (i.e., the user coordinate system for the element referencing the ‘marker’ element via a ‘marker’, ‘marker-start’, ‘marker-mid’ or ‘marker-end’ property)."
  },
  "api/Svg.DataTypes.SvgColourInterpolation.html": {
    "href": "api/Svg.DataTypes.SvgColourInterpolation.html",
    "title": "Enum SvgColourInterpolation | SVG.NET API",
    "keywords": "Enum SvgColourInterpolation Specifies the color space for gradient interpolations, color animations and alpha compositing. Namespace : Svg.DataTypes Assembly : cs.temp.dll.dll Syntax public enum SvgColourInterpolation Remarks When a child element is blended into a background, the value of the ‘color-interpolation’ property on the child determines the type of blending, not the value of the ‘color-interpolation’ on the parent. For gradients which make use of the ‘xlink:href’ attribute to reference another gradient, the gradient uses the ‘color-interpolation’ property value from the gradient element which is directly referenced by the ‘fill’ or ‘stroke’ property. When animating colors, color interpolation is performed according to the value of the ‘color-interpolation’ property on the element being animated. Fields Name Description Auto Indicates that the user agent can choose either the sRGB or linearRGB spaces for color interpolation. This option indicates that the author doesn't require that color interpolation occur in a particular color space. Inherit The value is inherited from the parent element. LinearRGB Indicates that color interpolation should occur in the linearized RGB color space as described above. SRGB Indicates that color interpolation should occur in the sRGB color space."
  },
  "api/Svg.ContentEventArgs.html": {
    "href": "api/Svg.ContentEventArgs.html",
    "title": "Class ContentEventArgs | SVG.NET API",
    "keywords": "Class ContentEventArgs Content of this whas was set Inheritance Object EventArgs SVGArg ContentEventArgs Inherited Members SVGArg.SessionID EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class ContentEventArgs : SVGArg Fields Content Declaration public string Content Field Value Type Description String"
  },
  "api/Fizzler.html": {
    "href": "api/Fizzler.html",
    "title": "Namespace Fizzler | SVG.NET API",
    "keywords": "Namespace Fizzler Classes HumanReadableSelectorGenerator An ISelectorGenerator implementation that generates human-readable description of the selector. Parser Semantic parser for CSS selector grammar. Reader<T> Adds reading semantics to a base IEnumerator<T> with the option to un-read and insert new elements while consuming the source. SelectorGenerator<TElement> A selector generator implementation for an arbitrary document/element system. SelectorGeneratorTee An ISelectorGenerator implementation that delegates to two other ISelectorGenerator objects, which can be useful for doing work in a single pass. SelectorsCachingCompiler Implementation for a selectors compiler that supports caching. Tokener Lexer for tokens in CSS selector grammar. Structs NamespacePrefix Represent a type or attribute name. Token Represent a token and optionally any text associated with it. Interfaces IElementOps<TElement> Represents a selectors implementation for an arbitrary document/node system. ISelectorGenerator Represent an implementation that is responsible for generating an implementation for a selector. Enums TokenKind Represents the classification of a token. Delegates Selector<TElement> Represents a selector implementation over an arbitrary type of elements."
  },
  "api/Fizzler.TokenKind.html": {
    "href": "api/Fizzler.TokenKind.html",
    "title": "Enum TokenKind | SVG.NET API",
    "keywords": "Enum TokenKind Represents the classification of a token. Namespace : Fizzler Assembly : cs.temp.dll.dll Syntax public enum TokenKind Fields Name Description Char Represents an arbitrary character DashMatch Represents \"|=\" Eoi Represents end of input/file/stream Function Represents {ident} \")\" Greater Represents S* \">\" Hash Represents \"#\" {name} Ident Represents {ident} Includes Represents \"~=\" Integer Represents [0-9]+ Plus Represents S* \"+\" PrefixMatch Represents \"^=\" String Represents {string} SubstringMatch Represents \"*=\" SuffixMatch Represents \"$=\" Tilde Represents S* \"~\" WhiteSpace Represents [ \\t\\r\\n\\f]+"
  },
  "api/Fizzler.Reader-1.html": {
    "href": "api/Fizzler.Reader-1.html",
    "title": "Class Reader<T> | SVG.NET API",
    "keywords": "Class Reader<T> Adds reading semantics to a base IEnumerator<T> with the option to un-read and insert new elements while consuming the source. Inheritance Object Reader<T> Implements IDisposable IEnumerable <T> IEnumerable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Fizzler Assembly : cs.temp.dll.dll Syntax public sealed class Reader<T> : IDisposable, IEnumerable<T>, IEnumerable Type Parameters Name Description T Constructors Reader(IEnumerable<T>) Initialize a new Reader<T> with a base IEnumerable<T> object. Declaration public Reader(IEnumerable<T> e) Parameters Type Name Description IEnumerable <T> e Reader(IEnumerator<T>) Initialize a new Reader<T> with a base IEnumerator<T> object. Declaration public Reader(IEnumerator<T> e) Parameters Type Name Description IEnumerator <T> e Properties HasMore Indicates whether there is, at least, one value waiting to be read or not. Declaration public bool HasMore { get; } Property Value Type Description Boolean Methods Close() Disposes the enumerator used to initialize this object if that enumerator supports IDisposable . Declaration public void Close() GetEnumerator() Returns an enumerator that iterates through the remaining values to be read. Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T> Peek() Peeks the next value waiting to be read. Declaration public T Peek() Returns Type Description T Exceptions Type Condition InvalidOperationException Thrown if there is no value waiting to be read. Read() Reads and returns the next value. Declaration public T Read() Returns Type Description T Unread(T) Pushes back a new value that will be returned on the next read. Declaration public void Unread(T value) Parameters Type Name Description T value Explicit Interface Implementations IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator IDisposable.Dispose() Declaration void IDisposable.Dispose() Implements System.IDisposable System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/Fizzler.ISelectorGenerator.html": {
    "href": "api/Fizzler.ISelectorGenerator.html",
    "title": "Interface ISelectorGenerator | SVG.NET API",
    "keywords": "Interface ISelectorGenerator Represent an implementation that is responsible for generating an implementation for a selector. Namespace : Fizzler Assembly : cs.temp.dll.dll Syntax public interface ISelectorGenerator Methods Adjacent() Generates a combinator , which represents elements that share the same parent in the document tree and where the first element immediately precedes the second element. Declaration void Adjacent() AttributeDashMatch(NamespacePrefix, String, String) Generates an attribute selector that represents an element with the given attribute name , its value either being exactly value or beginning with value immediately followed by \"-\" (U+002D). Declaration void AttributeDashMatch(NamespacePrefix prefix, string name, string value) Parameters Type Name Description NamespacePrefix prefix String name String value AttributeExact(NamespacePrefix, String, String) Generates an attribute selector that represents an element with the given attribute name and whose value is exactly value . Declaration void AttributeExact(NamespacePrefix prefix, string name, string value) Parameters Type Name Description NamespacePrefix prefix String name String value AttributeExists(NamespacePrefix, String) Generates an attribute selector that represents an element with the given attribute name whatever the values of the attribute. Declaration void AttributeExists(NamespacePrefix prefix, string name) Parameters Type Name Description NamespacePrefix prefix String name AttributeIncludes(NamespacePrefix, String, String) Generates an attribute selector that represents an element with the given attribute name and whose value is a whitespace-separated list of words, one of which is exactly value . Declaration void AttributeIncludes(NamespacePrefix prefix, string name, string value) Parameters Type Name Description NamespacePrefix prefix String name String value AttributePrefixMatch(NamespacePrefix, String, String) Generates an attribute selector that represents an element with the attribute name whose value begins with the prefix value . Declaration void AttributePrefixMatch(NamespacePrefix prefix, string name, string value) Parameters Type Name Description NamespacePrefix prefix String name String value AttributeSubstring(NamespacePrefix, String, String) Generates an attribute selector that represents an element with the attribute name whose value contains at least one instance of the substring value . Declaration void AttributeSubstring(NamespacePrefix prefix, string name, string value) Parameters Type Name Description NamespacePrefix prefix String name String value AttributeSuffixMatch(NamespacePrefix, String, String) Generates an attribute selector that represents an element with the attribute name whose value ends with the suffix value . Declaration void AttributeSuffixMatch(NamespacePrefix prefix, string name, string value) Parameters Type Name Description NamespacePrefix prefix String name String value Child() Generates a combinator , which represents a childhood relationship between two elements. Declaration void Child() Class(String) Generates a class selector , which is an alternative AttributeIncludes(NamespacePrefix, String, String) when representing the class attribute. Declaration void Class(string clazz) Parameters Type Name Description String clazz Descendant() Generates a combinator , which represents a relationship between two elements where one element is an arbitrary descendant of some ancestor element. Declaration void Descendant() Empty() Generates a pseudo-class selector , which represents an element that has no children at all. Declaration void Empty() FirstChild() Generates a pseudo-class selector , which represents an element that is the first child of some other element. Declaration void FirstChild() GeneralSibling() Generates a combinator , which separates two sequences of simple selectors. The elements represented by the two sequences share the same parent in the document tree and the element represented by the first sequence precedes (not necessarily immediately) the element represented by the second one. Declaration void GeneralSibling() Id(String) Generates a ID selector , which represents an element instance that has an identifier that matches the identifier in the ID selector. Declaration void Id(string id) Parameters Type Name Description String id LastChild() Generates a pseudo-class selector , which represents an element that is the last child of some other element. Declaration void LastChild() NthChild(Int32, Int32) Generates a pseudo-class selector , which represents an element that is the N-th child of some other element. Declaration void NthChild(int a, int b) Parameters Type Name Description Int32 a Int32 b NthLastChild(Int32, Int32) Generates a pseudo-class selector , which represents an element that is the N-th child from bottom up of some other element. Declaration void NthLastChild(int a, int b) Parameters Type Name Description Int32 a Int32 b OnClose() Delimits the closing/conclusion of a generation. Declaration void OnClose() OnInit() Delimits the initialization of a generation. Declaration void OnInit() OnlyChild() Generates a pseudo-class selector , which represents an element that has a parent element and whose parent element has no other element children. Declaration void OnlyChild() OnSelector() Delimits a selector generation in a group of selectors. Declaration void OnSelector() Type(NamespacePrefix, String) Generates a type selector , which represents an instance of the element type in the document tree. Declaration void Type(NamespacePrefix prefix, string name) Parameters Type Name Description NamespacePrefix prefix String name Universal(NamespacePrefix) Generates a universal selector , any single element in the document tree in any namespace (including those without a namespace) if no default namespace has been specified for selectors. Declaration void Universal(NamespacePrefix prefix) Parameters Type Name Description NamespacePrefix prefix"
  },
  "api/ExCSS.html": {
    "href": "api/ExCSS.html",
    "title": "Namespace ExCSS | SVG.NET API",
    "keywords": "Namespace ExCSS Classes CssParser Parser"
  },
  "api/Svg.html": {
    "href": "api/Svg.html",
    "title": "Namespace Svg | SVG.NET API",
    "keywords": "Namespace Svg Classes AttributeEventArgs Describes the Attribute which was set BaseConverter ChildAddedEventArgs Describes the Attribute which was set ContentEventArgs Content of this whas was set EnumBaseConverter<T> Enums Extensions GdiFontDefn MouseArg Represents the state of the mouse at the moment the event occured. MouseScrollArg NonSvgElement PathStatistics PointFExtensions StringArg Represents a string argument SVGArg SvgAspectRatio Description of SvgAspectRatio. SvgAttributeAttribute Specifies the SVG attribute name of the associated property. SvgAttributeCollection A collection of Scalable Vector Attributes that can be inherited from the owner elements ancestors. SvgBoolConverter SvgCircle An SVG element to render circles to the document. SvgClipPath Defines a path that can be used by other ISvgClipable elements. SvgClipRuleConverter SvgColourConverter Converts string representations of colours into objects. SvgColourInterpolationConverter SvgColourServer SvgContentNode SvgCoordinateUnitsConverter SvgCustomAttributeCollection A collection of Custom Attributes SvgDefaults Holds a dictionary of the default values of the SVG specification SvgDeferredPaintServer A wrapper for a paint server which isn't defined currently in the parse process, but should be defined by the time the image needs to render. SvgDefinitionList Represents a list of re-usable SVG components. SvgDescription SvgDocument The class used to create and load SVG documents. SvgDocumentMetadata Represents a list of re-usable SVG components. SvgElement The base class of which all SVG elements are derived from. SvgElement.EventAttributeTuple SvgElement.PropertyAttributeTuple SvgElementAttribute Specifies the SVG name of an SvgElement . SvgElementCollection Represents a collection of SvgElement s. SvgElementEventArgs SvgElementIdManager Provides methods to ensure element ID's are valid and unique. SvgElementStyle SvgEllipse Represents and SVG ellipse element. SvgException SvgExtentions Svg helpers SvgFallbackPaintServer A wrapper for a paint server has a fallback if the primary server doesn't work. SvgFillRuleConverter SvgFont SvgFontDefn SvgFontFace SvgFontFaceSrc SvgFontFaceUri SvgFontManager Manages access to Svg.SvgFontManager.SystemFonts and any privately loaded fonts. When a font is requested in the render process, if the font is not found as an embedded SvgFont, the render process will SvgFontManager.FindFont method. SvgFontStyleConverter SvgFontVariantConverter SvgFontWeightConverter SvgForeignObject The 'foreignObject' element allows for inclusion of a foreign namespace which has its graphical content drawn by a different user agent SvgFragment An SvgFragment represents an SVG fragment that can be the root element or an embedded fragment of an SVG document. SvgGdiPlusCannotBeLoadedException SvgGlyph SvgGradientServer Provides the base class for all paint servers that wish to render a gradient. SvgGradientSpreadMethodConverter SvgGradientStop Represents a colour stop in a gradient. SvgGroup An element used to group SVG shapes. SvgHorizontalKern SvgIDException SvgIDExistsException SvgIDWrongFormatException SvgImage Represents and SVG image SvgImageRenderingConverter SvgKern SvgLine Represents and SVG line element. SvgLinearGradientServer SvgMarker SvgMarkerElement Represents a path based element that can have markers. SvgMarkerUnitsConverter SvgMask SvgMissingGlyph SvgOrient Represents an orientation in a Scalable Vector Graphics document. SvgOverflowConverter SvgPaintServer Represents the base class for all paint servers that are intended to be used as a fill or stroke. SvgPath Represents an SVG path element. SvgPathBasedElement Represents an element that is using a GraphicsPath as rendering base. SvgPathBuilder SvgPatternServer A pattern is used to fill or stroke an object using a pre-defined graphic object which can be replicated (\"tiled\") at fixed intervals in x and y to cover the areas to be painted. SvgPointCollection Represents a list of SvgUnit used with the SvgPolyline and SvgPolygon . SvgPolygon SvgPolygon defines a closed shape consisting of a set of connected straight line segments. SvgPolyline SvgPolyline defines a set of connected straight line segments. Typically, SvgPolyline defines open shapes. SvgRadialGradientServer SvgRectangle Represents an SVG rectangle that could also have rounded edges. SvgRenderer Convenience wrapper around a graphics object SvgScript An element used to define scripts within SVG documents. Use the Script property to get the script content (proxies the content) SvgShapeRenderingConverter SvgStrokeLineCapConverter SvgStrokeLineJoinConverter SvgSwitch The 'switch' element evaluates the 'requiredFeatures', 'requiredExtensions' and 'systemLanguage' attributes on its direct child elements in order, and then processes and renders the first child for which these attributes evaluate to true SvgText The SvgText element defines a graphics element consisting of text. SvgTextAnchorConverter SvgTextBase SvgTextDecorationConverter SvgTextLengthAdjustConverter SvgTextPath The SvgText element defines a graphics element consisting of text. SvgTextPathMethodConverter SvgTextPathSpacingConverter SvgTextRef SvgTextRenderingConverter SvgTextSpan SvgTextTransformationConverter SvgTitle SvgUnitCollection Represents a list of SvgUnit . SvgUnitConverter SvgUnknownElement SvgUse SvgVerticalKern SvgVisualElement The class that all SVG elements should derive from when they are to be rendered. Structs SvgLinearGradientServer.GradientPoints SvgPoint SvgUnit Represents a unit in an Scalable Vector Graphics document. SvgViewBox It is often desirable to specify that a given set of graphics stretch to fit a particular container element. The viewBox attribute provides this capability. Interfaces IFontDefn IGraphicsProvider ISvgBoundable ISvgClipable Defines the methods and properties that an SvgElement must implement to support clipping. ISvgDescriptiveElement This interface mostly indicates that a node is not to be drawn when rendering the SVG. ISvgNode ISvgRenderer ISvgStylable Defines the methods and properties required for an SVG element to be styled. ISvgTransformable Represents and element that may be transformed. ISvgViewPort Provides properties and methods to be implemented by view port elements. Enums EnumBaseConverter<T>.CaseHandling SvgClipRule Indicates the algorithm which is to be used to determine the clipping region. SvgCoordinateUnits Defines the various coordinate units certain SVG elements may use. SvgFillRule SvgFontStyle This is the descriptor for the style of a font and takes the same values as the 'font-style' property, except that a comma-separated list is permitted. SvgFontVariant SvgFontWeight The weight of a face relative to others in the same font family. SvgGradientSpreadMethod Indicates what happens if the gradient starts or ends inside the bounds of the target rectangle. SvgImageRendering The image-rendering attribute provides a hint to the browser about how to make speed vs. quality tradeoffs as it performs image processing. SvgOverflow The ‘overflow’ property applies to elements that establish new viewports (e.g., ‘svg’ elements), ‘pattern’ elements and ‘marker’ elements. For all other elements, the property has no effect (i.e., a clipping rectangle is not created). SvgPreserveAspectRatio SvgShapeRendering The creator of SVG content might want to provide a hint about what tradeoffs to make as the browser renders 'path' element or basic shapes. The shape-rendering attribute provides these hints. SvgStrokeLineCap Specifies the shape to be used at the end of open subpaths when they are stroked. SvgStrokeLineJoin Specifies the shape to be used at the corners of paths or basic shapes when they are stroked. SvgTextAnchor Text anchor is used to align (start-, middle- or end-alignment) a string of text relative to a given point. SvgTextDecoration This property describes decorations that are added to the text of an element. Conforming SVG Viewers are not required to support the blink value. SvgTextLengthAdjust Indicates the type of adjustments which the user agent shall make to make the rendered length of the text match the value specified on the ‘textLength’ attribute. SvgTextPathMethod Indicates the method by which text should be rendered along the path. SvgTextPathSpacing Indicates how the user agent should determine the spacing between glyphs that are to be rendered along a path. SvgTextRendering The creator of SVG content might want to provide a hint about what tradeoffs to make as the browser renders text. The text-rendering attribute provides these hints. SvgTextTransformation This property describes transformations that are added to the text of an element. SvgUnitType Defines the various types of unit an SvgUnit can be. SvgVisibility UnitRenderingType XmlSpaceHandling"
  },
  "api/Svg.XmlSpaceHandling.html": {
    "href": "api/Svg.XmlSpaceHandling.html",
    "title": "Enum XmlSpaceHandling | SVG.NET API",
    "keywords": "Enum XmlSpaceHandling Namespace : Svg Assembly : cs.temp.dll.dll Syntax public enum XmlSpaceHandling Fields Name Description default inherit preserve"
  },
  "api/Svg.UnitRenderingType.html": {
    "href": "api/Svg.UnitRenderingType.html",
    "title": "Enum UnitRenderingType | SVG.NET API",
    "keywords": "Enum UnitRenderingType Namespace : Svg Assembly : cs.temp.dll.dll Syntax public enum UnitRenderingType Fields Name Description Horizontal HorizontalOffset Other Vertical VerticalOffset"
  },
  "api/Svg.Transforms.html": {
    "href": "api/Svg.Transforms.html",
    "title": "Namespace Svg.Transforms | SVG.NET API",
    "keywords": "Namespace Svg.Transforms Classes SvgMatrix The class which applies custom transform to this Matrix (Required for projects created by the Inkscape). SvgRotate SvgScale SvgShear The class which applies the specified shear vector to this Matrix. SvgSkew The class which applies the specified skew vector to this Matrix. SvgTransform SvgTransformCollection SvgTransformConverter SvgTranslate"
  },
  "api/Svg.Transforms.SvgTranslate.html": {
    "href": "api/Svg.Transforms.SvgTranslate.html",
    "title": "Class SvgTranslate | SVG.NET API",
    "keywords": "Class SvgTranslate Inheritance Object SvgTransform SvgTranslate Implements ICloneable Inherited Members SvgTransform.Equals(Object) SvgTransform.GetHashCode() SvgTransform.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Svg.Transforms Assembly : cs.temp.dll.dll Syntax public sealed class SvgTranslate : SvgTransform, ICloneable Constructors SvgTranslate(Single) Declaration public SvgTranslate(float x) Parameters Type Name Description Single x SvgTranslate(Single, Single) Declaration public SvgTranslate(float x, float y) Parameters Type Name Description Single x Single y Properties Matrix Declaration public override Matrix Matrix { get; } Property Value Type Description Matrix Overrides SvgTransform.Matrix X Declaration public float X { get; set; } Property Value Type Description Single Y Declaration public float Y { get; set; } Property Value Type Description Single Methods Clone() Declaration public override object Clone() Returns Type Description Object Overrides SvgTransform.Clone() WriteToString() Declaration public override string WriteToString() Returns Type Description String Overrides SvgTransform.WriteToString() Implements System.ICloneable"
  },
  "api/Svg.Transforms.SvgTransformConverter.html": {
    "href": "api/Svg.Transforms.SvgTransformConverter.html",
    "title": "Class SvgTransformConverter | SVG.NET API",
    "keywords": "Class SvgTransformConverter Inheritance Object SvgTransformConverter Namespace : Svg.Transforms Assembly : cs.temp.dll.dll Syntax public class SvgTransformConverter : TypeConverter Methods CanConvertFrom(ITypeDescriptorContext, Type) Declaration public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType) Parameters Type Name Description ITypeDescriptorContext context Type sourceType Returns Type Description Boolean CanConvertTo(ITypeDescriptorContext, Type) Declaration public override bool CanConvertTo(ITypeDescriptorContext context, Type destinationType) Parameters Type Name Description ITypeDescriptorContext context Type destinationType Returns Type Description Boolean ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) Converts the given object to the type of this converter, using the specified context and culture information. Declaration public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) Parameters Type Name Description ITypeDescriptorContext context An ITypeDescriptorContext that provides a format context. CultureInfo culture The CultureInfo to use as the current culture. Object value The Object to convert. Returns Type Description Object An Object that represents the converted value. Exceptions Type Condition NotSupportedException The conversion cannot be performed. ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type) Declaration public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType) Parameters Type Name Description ITypeDescriptorContext context CultureInfo culture Object value Type destinationType Returns Type Description Object"
  },
  "api/Svg.Transforms.SvgTransformCollection.html": {
    "href": "api/Svg.Transforms.SvgTransformCollection.html",
    "title": "Class SvgTransformCollection | SVG.NET API",
    "keywords": "Class SvgTransformCollection Inheritance Object List < SvgTransform > SvgTransformCollection Implements IList < SvgTransform > ICollection < SvgTransform > IList ICollection IReadOnlyList < SvgTransform > IReadOnlyCollection < SvgTransform > IEnumerable < SvgTransform > IEnumerable ICloneable Inherited Members System.Collections.Generic.List<Svg.Transforms.SvgTransform>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<Svg.Transforms.SvgTransform>.System.Collections.IList.set_Item(System.Int32, System.Object) List<SvgTransform>.IList.Add(Object) List<SvgTransform>.AsReadOnly() List<SvgTransform>.BinarySearch(Int32, Int32, SvgTransform, IComparer<SvgTransform>) List<SvgTransform>.BinarySearch(SvgTransform) List<SvgTransform>.BinarySearch(SvgTransform, IComparer<SvgTransform>) List<SvgTransform>.Clear() List<SvgTransform>.Contains(SvgTransform) List<SvgTransform>.IList.Contains(Object) List<SvgTransform>.ConvertAll<TOutput>(Converter<SvgTransform, TOutput>) List<SvgTransform>.CopyTo(SvgTransform[]) List<SvgTransform>.ICollection.CopyTo(Array, Int32) List<SvgTransform>.CopyTo(Int32, SvgTransform[], Int32, Int32) List<SvgTransform>.CopyTo(SvgTransform[], Int32) List<SvgTransform>.Exists(Predicate<SvgTransform>) List<SvgTransform>.Find(Predicate<SvgTransform>) List<SvgTransform>.FindAll(Predicate<SvgTransform>) List<SvgTransform>.FindIndex(Predicate<SvgTransform>) List<SvgTransform>.FindIndex(Int32, Predicate<SvgTransform>) List<SvgTransform>.FindIndex(Int32, Int32, Predicate<SvgTransform>) List<SvgTransform>.FindLast(Predicate<SvgTransform>) List<SvgTransform>.FindLastIndex(Predicate<SvgTransform>) List<SvgTransform>.FindLastIndex(Int32, Predicate<SvgTransform>) List<SvgTransform>.FindLastIndex(Int32, Int32, Predicate<SvgTransform>) List<SvgTransform>.ForEach(Action<SvgTransform>) List<SvgTransform>.GetEnumerator() List<SvgTransform>.IEnumerable<SvgTransform>.GetEnumerator() List<SvgTransform>.IEnumerable.GetEnumerator() List<SvgTransform>.GetRange(Int32, Int32) List<SvgTransform>.IndexOf(SvgTransform) List<SvgTransform>.IList.IndexOf(Object) List<SvgTransform>.IndexOf(SvgTransform, Int32) List<SvgTransform>.IndexOf(SvgTransform, Int32, Int32) List<SvgTransform>.Insert(Int32, SvgTransform) List<SvgTransform>.IList.Insert(Int32, Object) List<SvgTransform>.InsertRange(Int32, IEnumerable<SvgTransform>) List<SvgTransform>.LastIndexOf(SvgTransform) List<SvgTransform>.LastIndexOf(SvgTransform, Int32) List<SvgTransform>.LastIndexOf(SvgTransform, Int32, Int32) List<SvgTransform>.IList.Remove(Object) List<SvgTransform>.RemoveAll(Predicate<SvgTransform>) List<SvgTransform>.RemoveRange(Int32, Int32) List<SvgTransform>.Reverse() List<SvgTransform>.Reverse(Int32, Int32) List<SvgTransform>.Sort() List<SvgTransform>.Sort(IComparer<SvgTransform>) List<SvgTransform>.Sort(Int32, Int32, IComparer<SvgTransform>) List<SvgTransform>.Sort(Comparison<SvgTransform>) List<SvgTransform>.ToArray() List<SvgTransform>.TrimExcess() List<SvgTransform>.TrueForAll(Predicate<SvgTransform>) List<SvgTransform>.Capacity List<SvgTransform>.Count List<SvgTransform>.IList.IsFixedSize List<SvgTransform>.ICollection<SvgTransform>.IsReadOnly List<SvgTransform>.IList.IsReadOnly List<SvgTransform>.ICollection.IsSynchronized List<SvgTransform>.ICollection.SyncRoot List<SvgTransform>.IList.Item[Int32] Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Svg.Transforms Assembly : cs.temp.dll.dll Syntax public class SvgTransformCollection : List<SvgTransform>, IList<SvgTransform>, ICollection<SvgTransform>, IList, ICollection, IReadOnlyList<SvgTransform>, IReadOnlyCollection<SvgTransform>, IEnumerable<SvgTransform>, IEnumerable, ICloneable Properties Item[Int32] Declaration public SvgTransform this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description SvgTransform Methods Add(SvgTransform) Declaration public void Add(SvgTransform item) Parameters Type Name Description SvgTransform item AddRange(IEnumerable<SvgTransform>) Declaration public void AddRange(IEnumerable<SvgTransform> collection) Parameters Type Name Description IEnumerable < SvgTransform > collection Clone() Declaration public object Clone() Returns Type Description Object Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() GetMatrix() Multiplies all matrices Declaration public Matrix GetMatrix() Returns Type Description Matrix The result of all transforms OnTransformChanged() Declaration protected void OnTransformChanged() Remove(SvgTransform) Declaration public void Remove(SvgTransform item) Parameters Type Name Description SvgTransform item RemoveAt(Int32) Declaration public void RemoveAt(int index) Parameters Type Name Description Int32 index ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Events TransformChanged Fired when an SvgTransform has changed Declaration public event EventHandler<AttributeEventArgs> TransformChanged Event Type Type Description EventHandler < AttributeEventArgs > Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.IList System.Collections.ICollection System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.ICloneable"
  },
  "api/Svg.Transforms.SvgTransform.html": {
    "href": "api/Svg.Transforms.SvgTransform.html",
    "title": "Class SvgTransform | SVG.NET API",
    "keywords": "Class SvgTransform Inheritance Object SvgTransform SvgMatrix SvgRotate SvgScale SvgShear SvgSkew SvgTranslate Implements ICloneable Inherited Members Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Svg.Transforms Assembly : cs.temp.dll.dll Syntax public abstract class SvgTransform : ICloneable Properties Matrix Declaration public abstract Matrix Matrix { get; } Property Value Type Description Matrix Methods Clone() Declaration public abstract object Clone() Returns Type Description Object Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() WriteToString() Declaration public abstract string WriteToString() Returns Type Description String Operators Equality(SvgTransform, SvgTransform) Declaration public static bool operator ==(SvgTransform lhs, SvgTransform rhs) Parameters Type Name Description SvgTransform lhs SvgTransform rhs Returns Type Description Boolean Inequality(SvgTransform, SvgTransform) Declaration public static bool operator !=(SvgTransform lhs, SvgTransform rhs) Parameters Type Name Description SvgTransform lhs SvgTransform rhs Returns Type Description Boolean Implements System.ICloneable"
  },
  "api/Svg.Transforms.SvgSkew.html": {
    "href": "api/Svg.Transforms.SvgSkew.html",
    "title": "Class SvgSkew | SVG.NET API",
    "keywords": "Class SvgSkew The class which applies the specified skew vector to this Matrix. Inheritance Object SvgTransform SvgSkew Implements ICloneable Inherited Members SvgTransform.Equals(Object) SvgTransform.GetHashCode() SvgTransform.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Svg.Transforms Assembly : cs.temp.dll.dll Syntax public sealed class SvgSkew : SvgTransform, ICloneable Constructors SvgSkew(Single, Single) Declaration public SvgSkew(float x, float y) Parameters Type Name Description Single x Single y Properties AngleX Declaration public float AngleX { get; set; } Property Value Type Description Single AngleY Declaration public float AngleY { get; set; } Property Value Type Description Single Matrix Declaration public override Matrix Matrix { get; } Property Value Type Description Matrix Overrides SvgTransform.Matrix Methods Clone() Declaration public override object Clone() Returns Type Description Object Overrides SvgTransform.Clone() WriteToString() Declaration public override string WriteToString() Returns Type Description String Overrides SvgTransform.WriteToString() Implements System.ICloneable"
  },
  "api/Svg.Transforms.SvgShear.html": {
    "href": "api/Svg.Transforms.SvgShear.html",
    "title": "Class SvgShear | SVG.NET API",
    "keywords": "Class SvgShear The class which applies the specified shear vector to this Matrix. Inheritance Object SvgTransform SvgShear Implements ICloneable Inherited Members SvgTransform.Equals(Object) SvgTransform.GetHashCode() SvgTransform.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Svg.Transforms Assembly : cs.temp.dll.dll Syntax public sealed class SvgShear : SvgTransform, ICloneable Constructors SvgShear(Single) Declaration public SvgShear(float x) Parameters Type Name Description Single x SvgShear(Single, Single) Declaration public SvgShear(float x, float y) Parameters Type Name Description Single x Single y Properties Matrix Declaration public override Matrix Matrix { get; } Property Value Type Description Matrix Overrides SvgTransform.Matrix X Declaration public float X { get; set; } Property Value Type Description Single Y Declaration public float Y { get; set; } Property Value Type Description Single Methods Clone() Declaration public override object Clone() Returns Type Description Object Overrides SvgTransform.Clone() WriteToString() Declaration public override string WriteToString() Returns Type Description String Overrides SvgTransform.WriteToString() Implements System.ICloneable"
  },
  "api/Svg.Transforms.SvgScale.html": {
    "href": "api/Svg.Transforms.SvgScale.html",
    "title": "Class SvgScale | SVG.NET API",
    "keywords": "Class SvgScale Inheritance Object SvgTransform SvgScale Implements ICloneable Inherited Members SvgTransform.Equals(Object) SvgTransform.GetHashCode() SvgTransform.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Svg.Transforms Assembly : cs.temp.dll.dll Syntax public sealed class SvgScale : SvgTransform, ICloneable Constructors SvgScale(Single) Declaration public SvgScale(float x) Parameters Type Name Description Single x SvgScale(Single, Single) Declaration public SvgScale(float x, float y) Parameters Type Name Description Single x Single y Properties Matrix Declaration public override Matrix Matrix { get; } Property Value Type Description Matrix Overrides SvgTransform.Matrix X Declaration public float X { get; set; } Property Value Type Description Single Y Declaration public float Y { get; set; } Property Value Type Description Single Methods Clone() Declaration public override object Clone() Returns Type Description Object Overrides SvgTransform.Clone() WriteToString() Declaration public override string WriteToString() Returns Type Description String Overrides SvgTransform.WriteToString() Implements System.ICloneable"
  },
  "api/Svg.Transforms.SvgRotate.html": {
    "href": "api/Svg.Transforms.SvgRotate.html",
    "title": "Class SvgRotate | SVG.NET API",
    "keywords": "Class SvgRotate Inheritance Object SvgTransform SvgRotate Implements ICloneable Inherited Members SvgTransform.Equals(Object) SvgTransform.GetHashCode() SvgTransform.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Svg.Transforms Assembly : cs.temp.dll.dll Syntax public sealed class SvgRotate : SvgTransform, ICloneable Constructors SvgRotate(Single) Declaration public SvgRotate(float angle) Parameters Type Name Description Single angle SvgRotate(Single, Single, Single) Declaration public SvgRotate(float angle, float centerX, float centerY) Parameters Type Name Description Single angle Single centerX Single centerY Properties Angle Declaration public float Angle { get; set; } Property Value Type Description Single CenterX Declaration public float CenterX { get; set; } Property Value Type Description Single CenterY Declaration public float CenterY { get; set; } Property Value Type Description Single Matrix Declaration public override Matrix Matrix { get; } Property Value Type Description Matrix Overrides SvgTransform.Matrix Methods Clone() Declaration public override object Clone() Returns Type Description Object Overrides SvgTransform.Clone() WriteToString() Declaration public override string WriteToString() Returns Type Description String Overrides SvgTransform.WriteToString() Implements System.ICloneable"
  },
  "api/Svg.Transforms.SvgMatrix.html": {
    "href": "api/Svg.Transforms.SvgMatrix.html",
    "title": "Class SvgMatrix | SVG.NET API",
    "keywords": "Class SvgMatrix The class which applies custom transform to this Matrix (Required for projects created by the Inkscape). Inheritance Object SvgTransform SvgMatrix Implements ICloneable Inherited Members SvgTransform.Equals(Object) SvgTransform.GetHashCode() SvgTransform.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Svg.Transforms Assembly : cs.temp.dll.dll Syntax public sealed class SvgMatrix : SvgTransform, ICloneable Constructors SvgMatrix(List<Single>) Declaration public SvgMatrix(List<float> m) Parameters Type Name Description List < Single > m Properties Matrix Declaration public override Matrix Matrix { get; } Property Value Type Description Matrix Overrides SvgTransform.Matrix Points Declaration public List<float> Points { get; set; } Property Value Type Description List < Single > Methods Clone() Declaration public override object Clone() Returns Type Description Object Overrides SvgTransform.Clone() WriteToString() Declaration public override string WriteToString() Returns Type Description String Overrides SvgTransform.WriteToString() Implements System.ICloneable"
  },
  "api/Svg.SvgTitle.html": {
    "href": "api/Svg.SvgTitle.html",
    "title": "Class SvgTitle | SVG.NET API",
    "keywords": "Class SvgTitle Inheritance Object SvgElement SvgTitle Implements ISvgTransformable ICloneable ISvgNode ISvgDescriptiveElement Inherited Members SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.Render(ISvgRenderer) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"title\")] public class SvgTitle : SvgElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode, ISvgDescriptiveElement Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgElement.DeepCopy<T>() ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements ISvgTransformable System.ICloneable ISvgNode ISvgDescriptiveElement"
  },
  "api/Svg.SvgTextTransformationConverter.html": {
    "href": "api/Svg.SvgTextTransformationConverter.html",
    "title": "Class SvgTextTransformationConverter | SVG.NET API",
    "keywords": "Class SvgTextTransformationConverter Inheritance Object BaseConverter EnumBaseConverter < SvgTextTransformation > SvgTextTransformationConverter Inherited Members EnumBaseConverter<SvgTextTransformation>.CaseHandlingMode EnumBaseConverter<SvgTextTransformation>.DefaultValue EnumBaseConverter<SvgTextTransformation>.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) EnumBaseConverter<SvgTextTransformation>.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type) BaseConverter.CanConvertFrom(ITypeDescriptorContext, Type) BaseConverter.CanConvertTo(ITypeDescriptorContext, Type) Namespace : Svg Assembly : cs.temp.dll.dll Syntax public sealed class SvgTextTransformationConverter : EnumBaseConverter<SvgTextTransformation> Constructors SvgTextTransformationConverter() Declaration public SvgTextTransformationConverter()"
  },
  "api/Svg.SvgTextTransformation.html": {
    "href": "api/Svg.SvgTextTransformation.html",
    "title": "Enum SvgTextTransformation | SVG.NET API",
    "keywords": "Enum SvgTextTransformation This property describes transformations that are added to the text of an element. Namespace : Svg Assembly : cs.temp.dll.dll Syntax [Flags] public enum SvgTextTransformation Fields Name Description Capitalize First letter of each word of the text is converted to uppercase. Inherit The value is inherited from the parent element. Lowercase The text is converted to lowercase. None The text is not transformed. Uppercase The text is converted to uppercase."
  },
  "api/Svg.SvgTextSpan.html": {
    "href": "api/Svg.SvgTextSpan.html",
    "title": "Class SvgTextSpan | SVG.NET API",
    "keywords": "Class SvgTextSpan Inheritance Object SvgElement SvgVisualElement SvgTextBase SvgTextSpan Implements ISvgTransformable ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable Inherited Members SvgTextBase.Text SvgTextBase.SpaceHandling SvgTextBase.X SvgTextBase.Dx SvgTextBase.Y SvgTextBase.Dy SvgTextBase.Rotate SvgTextBase.TextLength SvgTextBase.LengthAdjust SvgTextBase.LetterSpacing SvgTextBase.WordSpacing SvgTextBase.Fill SvgTextBase.ToString() SvgTextBase.Bounds SvgTextBase.RenderFillAndStroke(ISvgRenderer) SvgTextBase.GetBaselinePath(ISvgRenderer) SvgTextBase.GetAuthorPathLength() SvgTextBase.Path(ISvgRenderer) SvgTextBase.PrepareText(String) SvgTextBase.Change SvgTextBase.OnChange(String, String) SvgTextBase.RaiseChange(Object, StringArg) SvgTextBase.ShouldWriteElement() SvgVisualElement.ISvgBoundable.Location SvgVisualElement.ISvgBoundable.Size SvgVisualElement.Clip SvgVisualElement.ClipPath SvgVisualElement.ClipRule SvgVisualElement.Filter SvgVisualElement.RequiresSmoothRendering SvgVisualElement.Renderable SvgVisualElement.Render(ISvgRenderer) SvgVisualElement.RenderFill(ISvgRenderer) SvgVisualElement.RenderStroke(ISvgRenderer) SvgVisualElement.SetClip(ISvgRenderer) SvgVisualElement.ResetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.SetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.ResetClip(ISvgRenderer) SvgVisualElement.Visible SvgVisualElement.Display SvgVisualElement.Displayable SvgVisualElement.EnableBackground SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"tspan\")] public class SvgTextSpan : SvgTextBase, ISvgElement, ISvgTransformable, ICloneable, ISvgNode, ISvgBoundable, ISvgStylable, ISvgClipable Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgVisualElement.DeepCopy<T>() Implements ISvgTransformable System.ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable"
  },
  "api/Svg.SvgTextRenderingConverter.html": {
    "href": "api/Svg.SvgTextRenderingConverter.html",
    "title": "Class SvgTextRenderingConverter | SVG.NET API",
    "keywords": "Class SvgTextRenderingConverter Inheritance Object BaseConverter EnumBaseConverter < SvgTextRendering > SvgTextRenderingConverter Inherited Members EnumBaseConverter<SvgTextRendering>.CaseHandlingMode EnumBaseConverter<SvgTextRendering>.DefaultValue EnumBaseConverter<SvgTextRendering>.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) EnumBaseConverter<SvgTextRendering>.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type) BaseConverter.CanConvertFrom(ITypeDescriptorContext, Type) BaseConverter.CanConvertTo(ITypeDescriptorContext, Type) Namespace : Svg Assembly : cs.temp.dll.dll Syntax public sealed class SvgTextRenderingConverter : EnumBaseConverter<SvgTextRendering> Constructors SvgTextRenderingConverter() Declaration public SvgTextRenderingConverter()"
  },
  "api/Svg.SvgTextRendering.html": {
    "href": "api/Svg.SvgTextRendering.html",
    "title": "Enum SvgTextRendering | SVG.NET API",
    "keywords": "Enum SvgTextRendering The creator of SVG content might want to provide a hint about what tradeoffs to make as the browser renders text. The text-rendering attribute provides these hints. Namespace : Svg Assembly : cs.temp.dll.dll Syntax public enum SvgTextRendering Remarks Not Implemented yet. Fields Name Description Auto Indicates that the browser shall make appropriate tradeoffs to balance speed, legibility and geometric precision, but with legibility given more importance than speed and geometric precision. GeometricPrecision Indicates that the browser shall emphasize geometric precision over legibility and rendering speed. This option will usually cause the user agent to suspend the use of hinting so that glyph outlines are drawn with comparable geometric precision to the rendering of path data. Inherit Indicates that the SVG shape rendering properties from the parent will be used. OptimizeLegibility Indicates that the browser shall emphasize legibility over rendering speed and geometric precision. The user agent will often choose whether to apply anti-aliasing techniques, built-in font hinting or both to produce the most legible text. OptimizeSpeed Indicates that the user agent shall emphasize rendering speed over legibility and geometric precision. This option will sometimes cause some browsers to turn off text anti-aliasing."
  },
  "api/Svg.SvgElement.EventAttributeTuple.html": {
    "href": "api/Svg.SvgElement.EventAttributeTuple.html",
    "title": "Class SvgElement.EventAttributeTuple | SVG.NET API",
    "keywords": "Class SvgElement.EventAttributeTuple Inheritance Object SvgElement.EventAttributeTuple Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax protected class EventAttributeTuple Fields Attribute Declaration public SvgAttributeAttribute Attribute Field Value Type Description SvgAttributeAttribute Event Declaration public FieldInfo Event Field Value Type Description FieldInfo"
  },
  "api/Svg.SvgDocumentMetadata.html": {
    "href": "api/Svg.SvgDocumentMetadata.html",
    "title": "Class SvgDocumentMetadata | SVG.NET API",
    "keywords": "Class SvgDocumentMetadata Represents a list of re-usable SVG components. Inheritance Object SvgElement SvgDocumentMetadata Implements ISvgTransformable ICloneable ISvgNode Inherited Members SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.DeepCopy<T>() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"metadata\")] public class SvgDocumentMetadata : SvgElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode Constructors SvgDocumentMetadata() Initializes a new instance of the SvgDocumentMetadata class. Declaration public SvgDocumentMetadata() Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() InitialiseFromXML(XmlTextReader, SvgDocument) Declaration public override void InitialiseFromXML(XmlTextReader reader, SvgDocument document) Parameters Type Name Description XmlTextReader reader SvgDocument document Overrides SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) Render(ISvgRenderer) Renders the SvgElement and contents to the specified ISvgRenderer object. Declaration protected override void Render(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The ISvgRenderer object to render to. Overrides SvgElement.Render(ISvgRenderer) WriteChildren(XmlTextWriter) Declaration protected override void WriteChildren(XmlTextWriter writer) Parameters Type Name Description XmlTextWriter writer Overrides SvgElement.WriteChildren(XmlTextWriter) Implements ISvgTransformable System.ICloneable ISvgNode"
  },
  "api/Svg.SvgContentNode.html": {
    "href": "api/Svg.SvgContentNode.html",
    "title": "Class SvgContentNode | SVG.NET API",
    "keywords": "Class SvgContentNode Inheritance Object SvgContentNode Implements ISvgNode Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class SvgContentNode : ISvgNode Properties Content Declaration public string Content { get; set; } Property Value Type Description String Methods DeepCopy() Create a deep copy of this ISvgNode . Declaration public ISvgNode DeepCopy() Returns Type Description ISvgNode A deep copy of this ISvgNode Implements ISvgNode"
  },
  "api/Svg.SvgColourServer.html": {
    "href": "api/Svg.SvgColourServer.html",
    "title": "Class SvgColourServer | SVG.NET API",
    "keywords": "Class SvgColourServer Inheritance Object SvgElement SvgPaintServer SvgColourServer Implements ISvgTransformable ICloneable ISvgNode Inherited Members SvgPaintServer.GetCallback SvgPaintServer.None SvgPaintServer.Render(ISvgRenderer) SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public sealed class SvgColourServer : SvgPaintServer, ISvgElement, ISvgTransformable, ICloneable, ISvgNode Constructors SvgColourServer() Declaration public SvgColourServer() SvgColourServer(Color) Declaration public SvgColourServer(Color colour) Parameters Type Name Description Color colour Fields Inherit A SvgPaintServer that should inherit from its parent. Declaration public static readonly SvgPaintServer Inherit Field Value Type Description SvgPaintServer NotSet An unspecified SvgPaintServer . Declaration public static readonly SvgPaintServer NotSet Field Value Type Description SvgPaintServer Properties Colour Declaration public Color Colour { get; set; } Property Value Type Description Color Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgElement.DeepCopy<T>() Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) GetBrush(SvgVisualElement, ISvgRenderer, Single, Boolean) Declaration public override Brush GetBrush(SvgVisualElement styleOwner, ISvgRenderer renderer, float opacity, bool forStroke = false) Parameters Type Name Description SvgVisualElement styleOwner ISvgRenderer renderer Single opacity Boolean forStroke Returns Type Description Brush Overrides SvgPaintServer.GetBrush(SvgVisualElement, ISvgRenderer, Single, Boolean) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() ToString() Declaration public override string ToString() Returns Type Description String Overrides SvgPaintServer.ToString() Implements ISvgTransformable System.ICloneable ISvgNode"
  },
  "api/Svg.SvgColourInterpolationConverter.html": {
    "href": "api/Svg.SvgColourInterpolationConverter.html",
    "title": "Class SvgColourInterpolationConverter | SVG.NET API",
    "keywords": "Class SvgColourInterpolationConverter Inheritance Object BaseConverter EnumBaseConverter < SvgColourInterpolation > SvgColourInterpolationConverter Inherited Members EnumBaseConverter<SvgColourInterpolation>.CaseHandlingMode EnumBaseConverter<SvgColourInterpolation>.DefaultValue EnumBaseConverter<SvgColourInterpolation>.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) EnumBaseConverter<SvgColourInterpolation>.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type) BaseConverter.CanConvertFrom(ITypeDescriptorContext, Type) BaseConverter.CanConvertTo(ITypeDescriptorContext, Type) Namespace : Svg Assembly : cs.temp.dll.dll Syntax public sealed class SvgColourInterpolationConverter : EnumBaseConverter<SvgColourInterpolation> Constructors SvgColourInterpolationConverter() Declaration public SvgColourInterpolationConverter()"
  },
  "api/Svg.SvgColourConverter.html": {
    "href": "api/Svg.SvgColourConverter.html",
    "title": "Class SvgColourConverter | SVG.NET API",
    "keywords": "Class SvgColourConverter Converts string representations of colours into objects. Inheritance Object SvgColourConverter Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class SvgColourConverter : ColorConverter Methods CanConvertFrom(ComponentModel.ITypeDescriptorContext, Type) Declaration public override bool CanConvertFrom(ComponentModel.ITypeDescriptorContext context, Type sourceType) Parameters Type Name Description ComponentModel.ITypeDescriptorContext context Type sourceType Returns Type Description Boolean CanConvertTo(ComponentModel.ITypeDescriptorContext, Type) Declaration public override bool CanConvertTo(ComponentModel.ITypeDescriptorContext context, Type destinationType) Parameters Type Name Description ComponentModel.ITypeDescriptorContext context Type destinationType Returns Type Description Boolean ConvertFrom(ComponentModel.ITypeDescriptorContext, CultureInfo, Object) Converts the given object to the converter's native type. Declaration public override object ConvertFrom(ComponentModel.ITypeDescriptorContext context, CultureInfo culture, object value) Parameters Type Name Description ComponentModel.ITypeDescriptorContext context A TypeDescriptor that provides a format context. You can use this object to get additional information about the environment from which this converter is being invoked. CultureInfo culture A CultureInfo that specifies the culture to represent the color. Object value The object to convert. Returns Type Description Object An Object representing the converted value. Exceptions Type Condition ArgumentException The conversion cannot be performed. ConvertTo(ComponentModel.ITypeDescriptorContext, CultureInfo, Object, Type) Declaration public override object ConvertTo(ComponentModel.ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType) Parameters Type Name Description ComponentModel.ITypeDescriptorContext context CultureInfo culture Object value Type destinationType Returns Type Description Object"
  },
  "api/Svg.SvgClipRuleConverter.html": {
    "href": "api/Svg.SvgClipRuleConverter.html",
    "title": "Class SvgClipRuleConverter | SVG.NET API",
    "keywords": "Class SvgClipRuleConverter Inheritance Object BaseConverter EnumBaseConverter < SvgClipRule > SvgClipRuleConverter Inherited Members EnumBaseConverter<SvgClipRule>.CaseHandlingMode EnumBaseConverter<SvgClipRule>.DefaultValue EnumBaseConverter<SvgClipRule>.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) EnumBaseConverter<SvgClipRule>.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type) BaseConverter.CanConvertFrom(ITypeDescriptorContext, Type) BaseConverter.CanConvertTo(ITypeDescriptorContext, Type) Namespace : Svg Assembly : cs.temp.dll.dll Syntax public sealed class SvgClipRuleConverter : EnumBaseConverter<SvgClipRule> Constructors SvgClipRuleConverter() Declaration public SvgClipRuleConverter()"
  },
  "api/Svg.SvgClipRule.html": {
    "href": "api/Svg.SvgClipRule.html",
    "title": "Enum SvgClipRule | SVG.NET API",
    "keywords": "Enum SvgClipRule Indicates the algorithm which is to be used to determine the clipping region. Namespace : Svg Assembly : cs.temp.dll.dll Syntax public enum SvgClipRule Remarks This rule determines the \"insideness\" of a point on the canvas by drawing a ray from that point to infinity in any direction and then examining the places where a segment of the shape crosses the ray. Fields Name Description EvenOdd This rule determines the \"insideness\" of a point on the canvas by drawing a ray from that point to infinity in any direction and counting the number of path segments from the given shape that the ray crosses. If this number is odd, the point is inside; if even, the point is outside. NonZero This rule determines the \"insideness\" of a point on the canvas by drawing a ray from that point to infinity in any direction and then examining the places where a segment of the shape crosses the ray. Starting with a count of zero, add one each time a path segment crosses the ray from left to right and subtract one each time a path segment crosses the ray from right to left. After counting the crossings, if the result is zero then the point is outside the path. Otherwise, it is inside."
  },
  "api/Svg.SvgClipPath.html": {
    "href": "api/Svg.SvgClipPath.html",
    "title": "Class SvgClipPath | SVG.NET API",
    "keywords": "Class SvgClipPath Defines a path that can be used by other ISvgClipable elements. Inheritance Object SvgElement SvgClipPath Implements ISvgTransformable ICloneable ISvgNode Inherited Members SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.ChildAdded SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"clipPath\")] public sealed class SvgClipPath : SvgElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode Properties ClipPathUnits Specifies the coordinate system for the clipping path. Declaration public SvgCoordinateUnits ClipPathUnits { get; set; } Property Value Type Description SvgCoordinateUnits Methods AddElement(SvgElement, Int32) Called by the underlying SvgElement when an element has been added to the 'Children' collection. Declaration protected override void AddElement(SvgElement child, int index) Parameters Type Name Description SvgElement child The SvgElement that has been added. Int32 index An Int32 representing the index where the element was added to the collection. Overrides SvgElement.AddElement(SvgElement, Int32) DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgElement.DeepCopy<T>() GetClipRegion(SvgVisualElement, ISvgRenderer) Gets this SvgClipPath 's region to be used as a clipping region. Declaration public Region GetClipRegion(SvgVisualElement owner, ISvgRenderer renderer) Parameters Type Name Description SvgVisualElement owner ISvgRenderer renderer Returns Type Description Region A new containing the to be used for clipping. RemoveElement(SvgElement) Called by the underlying SvgElement when an element has been removed from the Children collection. Declaration protected override void RemoveElement(SvgElement child) Parameters Type Name Description SvgElement child The SvgElement that has been removed. Overrides SvgElement.RemoveElement(SvgElement) Render(ISvgRenderer) Renders the SvgElement and contents to the specified ISvgRenderer object. Declaration protected override void Render(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The ISvgRenderer object to render to. Overrides SvgElement.Render(ISvgRenderer) Implements ISvgTransformable System.ICloneable ISvgNode"
  },
  "api/Svg.SvgCircle.html": {
    "href": "api/Svg.SvgCircle.html",
    "title": "Class SvgCircle | SVG.NET API",
    "keywords": "Class SvgCircle An SVG element to render circles to the document. Inheritance Object SvgElement SvgVisualElement SvgPathBasedElement SvgCircle Implements ISvgTransformable ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable Inherited Members SvgPathBasedElement.Bounds SvgVisualElement.ISvgBoundable.Location SvgVisualElement.ISvgBoundable.Size SvgVisualElement.Clip SvgVisualElement.ClipPath SvgVisualElement.ClipRule SvgVisualElement.Filter SvgVisualElement.RequiresSmoothRendering SvgVisualElement.Renderable SvgVisualElement.RenderFillAndStroke(ISvgRenderer) SvgVisualElement.RenderFill(ISvgRenderer) SvgVisualElement.RenderStroke(ISvgRenderer) SvgVisualElement.SetClip(ISvgRenderer) SvgVisualElement.ResetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.SetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.ResetClip(ISvgRenderer) SvgVisualElement.Visible SvgVisualElement.Display SvgVisualElement.Displayable SvgVisualElement.EnableBackground SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"circle\")] public class SvgCircle : SvgPathBasedElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode, ISvgBoundable, ISvgStylable, ISvgClipable Properties Center Gets the center point of the circle. Declaration public SvgPoint Center { get; } Property Value Type Description SvgPoint The center. CenterX Declaration public virtual SvgUnit CenterX { get; set; } Property Value Type Description SvgUnit CenterY Declaration public virtual SvgUnit CenterY { get; set; } Property Value Type Description SvgUnit Radius Declaration public virtual SvgUnit Radius { get; set; } Property Value Type Description SvgUnit Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgVisualElement.DeepCopy<T>() Path(ISvgRenderer) Gets the representing this element. Declaration public override GraphicsPath Path(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer Returns Type Description GraphicsPath Overrides SvgVisualElement.Path(ISvgRenderer) Render(ISvgRenderer) Renders the circle using the specified ISvgRenderer object. Declaration protected override void Render(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The renderer object. Overrides SvgVisualElement.Render(ISvgRenderer) Implements ISvgTransformable System.ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable"
  },
  "api/Svg.Pathing.html": {
    "href": "api/Svg.Pathing.html",
    "title": "Namespace Svg.Pathing | SVG.NET API",
    "keywords": "Namespace Svg.Pathing Classes SvgArcSegment SvgClosePathSegment SvgCubicCurveSegment SvgLineSegment SvgMoveToSegment SvgPathSegment SvgPathSegmentList SvgQuadraticCurveSegment Interfaces ISvgPathElement Enums SvgArcSize SvgArcSweep"
  },
  "api/Svg.Pathing.SvgQuadraticCurveSegment.html": {
    "href": "api/Svg.Pathing.SvgQuadraticCurveSegment.html",
    "title": "Class SvgQuadraticCurveSegment | SVG.NET API",
    "keywords": "Class SvgQuadraticCurveSegment Inheritance Object SvgPathSegment SvgQuadraticCurveSegment Inherited Members SvgPathSegment.Start SvgPathSegment.End SvgPathSegment.Clone() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.Pathing Assembly : cs.temp.dll.dll Syntax public sealed class SvgQuadraticCurveSegment : SvgPathSegment Constructors SvgQuadraticCurveSegment(PointF, PointF, PointF) Declaration public SvgQuadraticCurveSegment(PointF start, PointF controlPoint, PointF end) Parameters Type Name Description PointF start PointF controlPoint PointF end Properties ControlPoint Declaration public PointF ControlPoint { get; set; } Property Value Type Description PointF Methods AddToPath(GraphicsPath) Declaration public override void AddToPath(GraphicsPath graphicsPath) Parameters Type Name Description GraphicsPath graphicsPath Overrides SvgPathSegment.AddToPath(GraphicsPath) ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/Svg.Pathing.SvgPathSegmentList.html": {
    "href": "api/Svg.Pathing.SvgPathSegmentList.html",
    "title": "Class SvgPathSegmentList | SVG.NET API",
    "keywords": "Class SvgPathSegmentList Inheritance Object SvgPathSegmentList Implements IList < SvgPathSegment > ICollection < SvgPathSegment > IEnumerable < SvgPathSegment > IEnumerable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.Pathing Assembly : cs.temp.dll.dll Syntax public sealed class SvgPathSegmentList : IList<SvgPathSegment>, ICollection<SvgPathSegment>, IEnumerable<SvgPathSegment>, IEnumerable Properties Count Declaration public int Count { get; } Property Value Type Description Int32 IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description Boolean Item[Int32] Declaration public SvgPathSegment this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description SvgPathSegment Last Declaration public SvgPathSegment Last { get; } Property Value Type Description SvgPathSegment Owner Declaration public ISvgPathElement Owner { get; set; } Property Value Type Description ISvgPathElement Methods Add(SvgPathSegment) Declaration public void Add(SvgPathSegment item) Parameters Type Name Description SvgPathSegment item Clear() Declaration public void Clear() Contains(SvgPathSegment) Declaration public bool Contains(SvgPathSegment item) Parameters Type Name Description SvgPathSegment item Returns Type Description Boolean CopyTo(SvgPathSegment[], Int32) Declaration public void CopyTo(SvgPathSegment[] array, int arrayIndex) Parameters Type Name Description SvgPathSegment [] array Int32 arrayIndex GetEnumerator() Declaration public IEnumerator<SvgPathSegment> GetEnumerator() Returns Type Description IEnumerator < SvgPathSegment > IndexOf(SvgPathSegment) Declaration public int IndexOf(SvgPathSegment item) Parameters Type Name Description SvgPathSegment item Returns Type Description Int32 Insert(Int32, SvgPathSegment) Declaration public void Insert(int index, SvgPathSegment item) Parameters Type Name Description Int32 index SvgPathSegment item Remove(SvgPathSegment) Declaration public bool Remove(SvgPathSegment item) Parameters Type Name Description SvgPathSegment item Returns Type Description Boolean RemoveAt(Int32) Declaration public void RemoveAt(int index) Parameters Type Name Description Int32 index Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/Svg.Pathing.SvgPathSegment.html": {
    "href": "api/Svg.Pathing.SvgPathSegment.html",
    "title": "Class SvgPathSegment | SVG.NET API",
    "keywords": "Class SvgPathSegment Inheritance Object SvgPathSegment SvgArcSegment SvgClosePathSegment SvgCubicCurveSegment SvgLineSegment SvgMoveToSegment SvgQuadraticCurveSegment Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.Pathing Assembly : cs.temp.dll.dll Syntax public abstract class SvgPathSegment Constructors SvgPathSegment() Declaration protected SvgPathSegment() SvgPathSegment(PointF, PointF) Declaration protected SvgPathSegment(PointF start, PointF end) Parameters Type Name Description PointF start PointF end Properties End Declaration public PointF End { get; set; } Property Value Type Description PointF Start Declaration public PointF Start { get; set; } Property Value Type Description PointF Methods AddToPath(GraphicsPath) Declaration public abstract void AddToPath(GraphicsPath graphicsPath) Parameters Type Name Description GraphicsPath graphicsPath Clone() Declaration public SvgPathSegment Clone() Returns Type Description SvgPathSegment"
  },
  "api/Svg.Pathing.SvgMoveToSegment.html": {
    "href": "api/Svg.Pathing.SvgMoveToSegment.html",
    "title": "Class SvgMoveToSegment | SVG.NET API",
    "keywords": "Class SvgMoveToSegment Inheritance Object SvgPathSegment SvgMoveToSegment Inherited Members SvgPathSegment.Start SvgPathSegment.End SvgPathSegment.Clone() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.Pathing Assembly : cs.temp.dll.dll Syntax public class SvgMoveToSegment : SvgPathSegment Constructors SvgMoveToSegment(PointF) Declaration public SvgMoveToSegment(PointF moveTo) Parameters Type Name Description PointF moveTo Methods AddToPath(GraphicsPath) Declaration public override void AddToPath(GraphicsPath graphicsPath) Parameters Type Name Description GraphicsPath graphicsPath Overrides SvgPathSegment.AddToPath(GraphicsPath) ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/Svg.Pathing.SvgLineSegment.html": {
    "href": "api/Svg.Pathing.SvgLineSegment.html",
    "title": "Class SvgLineSegment | SVG.NET API",
    "keywords": "Class SvgLineSegment Inheritance Object SvgPathSegment SvgLineSegment Inherited Members SvgPathSegment.Start SvgPathSegment.End SvgPathSegment.Clone() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.Pathing Assembly : cs.temp.dll.dll Syntax public sealed class SvgLineSegment : SvgPathSegment Constructors SvgLineSegment(PointF, PointF) Declaration public SvgLineSegment(PointF start, PointF end) Parameters Type Name Description PointF start PointF end Methods AddToPath(GraphicsPath) Declaration public override void AddToPath(GraphicsPath graphicsPath) Parameters Type Name Description GraphicsPath graphicsPath Overrides SvgPathSegment.AddToPath(GraphicsPath) ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/Svg.Pathing.SvgCubicCurveSegment.html": {
    "href": "api/Svg.Pathing.SvgCubicCurveSegment.html",
    "title": "Class SvgCubicCurveSegment | SVG.NET API",
    "keywords": "Class SvgCubicCurveSegment Inheritance Object SvgPathSegment SvgCubicCurveSegment Inherited Members SvgPathSegment.Start SvgPathSegment.End SvgPathSegment.Clone() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.Pathing Assembly : cs.temp.dll.dll Syntax public sealed class SvgCubicCurveSegment : SvgPathSegment Constructors SvgCubicCurveSegment(PointF, PointF, PointF, PointF) Declaration public SvgCubicCurveSegment(PointF start, PointF firstControlPoint, PointF secondControlPoint, PointF end) Parameters Type Name Description PointF start PointF firstControlPoint PointF secondControlPoint PointF end Properties FirstControlPoint Declaration public PointF FirstControlPoint { get; set; } Property Value Type Description PointF SecondControlPoint Declaration public PointF SecondControlPoint { get; set; } Property Value Type Description PointF Methods AddToPath(GraphicsPath) Declaration public override void AddToPath(GraphicsPath graphicsPath) Parameters Type Name Description GraphicsPath graphicsPath Overrides SvgPathSegment.AddToPath(GraphicsPath) ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/Svg.Pathing.SvgClosePathSegment.html": {
    "href": "api/Svg.Pathing.SvgClosePathSegment.html",
    "title": "Class SvgClosePathSegment | SVG.NET API",
    "keywords": "Class SvgClosePathSegment Inheritance Object SvgPathSegment SvgClosePathSegment Inherited Members SvgPathSegment.Start SvgPathSegment.End SvgPathSegment.Clone() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.Pathing Assembly : cs.temp.dll.dll Syntax public sealed class SvgClosePathSegment : SvgPathSegment Methods AddToPath(GraphicsPath) Declaration public override void AddToPath(GraphicsPath graphicsPath) Parameters Type Name Description GraphicsPath graphicsPath Overrides SvgPathSegment.AddToPath(GraphicsPath) ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/Svg.ISvgTransformable.html": {
    "href": "api/Svg.ISvgTransformable.html",
    "title": "Interface ISvgTransformable | SVG.NET API",
    "keywords": "Interface ISvgTransformable Represents and element that may be transformed. Namespace : Svg Assembly : cs.temp.dll.dll Syntax public interface ISvgTransformable Properties Transforms Gets or sets an of element transforms. Declaration SvgTransformCollection Transforms { get; set; } Property Value Type Description SvgTransformCollection Methods PopTransforms(ISvgRenderer) Removes any previously applied transforms from the specified ISvgRenderer . Declaration void PopTransforms(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The ISvgRenderer that should have transforms removed. PushTransforms(ISvgRenderer) Applies the required transforms to ISvgRenderer . Declaration void PushTransforms(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The ISvgRenderer to be transformed."
  },
  "api/Svg.ISvgStylable.html": {
    "href": "api/Svg.ISvgStylable.html",
    "title": "Interface ISvgStylable | SVG.NET API",
    "keywords": "Interface ISvgStylable Defines the methods and properties required for an SVG element to be styled. Namespace : Svg Assembly : cs.temp.dll.dll Syntax public interface ISvgStylable Properties Fill Declaration SvgPaintServer Fill { get; set; } Property Value Type Description SvgPaintServer FillOpacity Declaration float FillOpacity { get; set; } Property Value Type Description Single FillRule Declaration SvgFillRule FillRule { get; set; } Property Value Type Description SvgFillRule Opacity Declaration float Opacity { get; set; } Property Value Type Description Single Stroke Declaration SvgPaintServer Stroke { get; set; } Property Value Type Description SvgPaintServer StrokeDashArray Declaration SvgUnitCollection StrokeDashArray { get; set; } Property Value Type Description SvgUnitCollection StrokeDashOffset Declaration SvgUnit StrokeDashOffset { get; set; } Property Value Type Description SvgUnit StrokeLineCap Declaration SvgStrokeLineCap StrokeLineCap { get; set; } Property Value Type Description SvgStrokeLineCap StrokeLineJoin Declaration SvgStrokeLineJoin StrokeLineJoin { get; set; } Property Value Type Description SvgStrokeLineJoin StrokeMiterLimit Declaration float StrokeMiterLimit { get; set; } Property Value Type Description Single StrokeOpacity Declaration float StrokeOpacity { get; set; } Property Value Type Description Single StrokeWidth Declaration SvgUnit StrokeWidth { get; set; } Property Value Type Description SvgUnit Methods Path(ISvgRenderer) Declaration GraphicsPath Path(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer Returns Type Description GraphicsPath"
  },
  "api/Svg.ISvgRenderer.html": {
    "href": "api/Svg.ISvgRenderer.html",
    "title": "Interface ISvgRenderer | SVG.NET API",
    "keywords": "Interface ISvgRenderer Inherited Members IDisposable.Dispose() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public interface ISvgRenderer : IDisposable Properties DpiY Declaration float DpiY { get; } Property Value Type Description Single SmoothingMode Declaration SmoothingMode SmoothingMode { get; set; } Property Value Type Description SmoothingMode Transform Declaration Matrix Transform { get; set; } Property Value Type Description Matrix Methods DrawImage(Image, RectangleF, RectangleF, GraphicsUnit) Declaration void DrawImage(Image image, RectangleF destRect, RectangleF srcRect, GraphicsUnit graphicsUnit) Parameters Type Name Description Image image RectangleF destRect RectangleF srcRect GraphicsUnit graphicsUnit DrawImage(Image, RectangleF, RectangleF, GraphicsUnit, Single) Declaration void DrawImage(Image image, RectangleF destRect, RectangleF srcRect, GraphicsUnit graphicsUnit, float opacity) Parameters Type Name Description Image image RectangleF destRect RectangleF srcRect GraphicsUnit graphicsUnit Single opacity DrawImageUnscaled(Image, Point) Declaration void DrawImageUnscaled(Image image, Point location) Parameters Type Name Description Image image Point location DrawPath(Pen, GraphicsPath) Declaration void DrawPath(Pen pen, GraphicsPath path) Parameters Type Name Description Pen pen GraphicsPath path FillPath(Brush, GraphicsPath) Declaration void FillPath(Brush brush, GraphicsPath path) Parameters Type Name Description Brush brush GraphicsPath path GetBoundable() Declaration ISvgBoundable GetBoundable() Returns Type Description ISvgBoundable GetClip() Declaration Region GetClip() Returns Type Description Region PopBoundable() Declaration ISvgBoundable PopBoundable() Returns Type Description ISvgBoundable RotateTransform(Single, MatrixOrder) Declaration void RotateTransform(float fAngle, MatrixOrder order = null) Parameters Type Name Description Single fAngle MatrixOrder order ScaleTransform(Single, Single, MatrixOrder) Declaration void ScaleTransform(float sx, float sy, MatrixOrder order = null) Parameters Type Name Description Single sx Single sy MatrixOrder order SetBoundable(ISvgBoundable) Declaration void SetBoundable(ISvgBoundable boundable) Parameters Type Name Description ISvgBoundable boundable SetClip(Region, CombineMode) Declaration void SetClip(Region region, CombineMode combineMode = null) Parameters Type Name Description Region region CombineMode combineMode TranslateTransform(Single, Single, MatrixOrder) Declaration void TranslateTransform(float dx, float dy, MatrixOrder order = null) Parameters Type Name Description Single dx Single dy MatrixOrder order"
  },
  "api/Svg.ISvgNode.html": {
    "href": "api/Svg.ISvgNode.html",
    "title": "Interface ISvgNode | SVG.NET API",
    "keywords": "Interface ISvgNode Namespace : Svg Assembly : cs.temp.dll.dll Syntax public interface ISvgNode Properties Content Declaration string Content { get; } Property Value Type Description String Methods DeepCopy() Create a deep copy of this ISvgNode . Declaration ISvgNode DeepCopy() Returns Type Description ISvgNode A deep copy of this ISvgNode"
  },
  "api/Svg.ISvgDescriptiveElement.html": {
    "href": "api/Svg.ISvgDescriptiveElement.html",
    "title": "Interface ISvgDescriptiveElement | SVG.NET API",
    "keywords": "Interface ISvgDescriptiveElement This interface mostly indicates that a node is not to be drawn when rendering the SVG. Namespace : Svg Assembly : cs.temp.dll.dll Syntax public interface ISvgDescriptiveElement"
  },
  "api/Svg.ISvgClipable.html": {
    "href": "api/Svg.ISvgClipable.html",
    "title": "Interface ISvgClipable | SVG.NET API",
    "keywords": "Interface ISvgClipable Defines the methods and properties that an SvgElement must implement to support clipping. Namespace : Svg Assembly : cs.temp.dll.dll Syntax public interface ISvgClipable Properties ClipPath Gets or sets the ID of the associated SvgClipPath if one has been specified. Declaration Uri ClipPath { get; set; } Property Value Type Description Uri ClipRule Specifies the rule used to define the clipping region when the element is within a SvgClipPath . Declaration SvgClipRule ClipRule { get; set; } Property Value Type Description SvgClipRule Methods ResetClip(ISvgRenderer) Resets the clipping region of the specified ISvgRenderer back to where it was before the SetClip(ISvgRenderer) method was called. Declaration void ResetClip(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The ISvgRenderer to have its clipping region reset. SetClip(ISvgRenderer) Sets the clipping region of the specified ISvgRenderer . Declaration void SetClip(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The ISvgRenderer to have its clipping region set."
  },
  "api/Svg.ISvgBoundable.html": {
    "href": "api/Svg.ISvgBoundable.html",
    "title": "Interface ISvgBoundable | SVG.NET API",
    "keywords": "Interface ISvgBoundable Namespace : Svg Assembly : cs.temp.dll.dll Syntax public interface ISvgBoundable Properties Bounds Declaration RectangleF Bounds { get; } Property Value Type Description RectangleF Location Declaration PointF Location { get; } Property Value Type Description PointF Size Declaration SizeF Size { get; } Property Value Type Description SizeF"
  },
  "api/Svg.IGraphicsProvider.html": {
    "href": "api/Svg.IGraphicsProvider.html",
    "title": "Interface IGraphicsProvider | SVG.NET API",
    "keywords": "Interface IGraphicsProvider Namespace : Svg Assembly : cs.temp.dll.dll Syntax public interface IGraphicsProvider Methods GetGraphics() Declaration Graphics GetGraphics() Returns Type Description Graphics"
  },
  "api/Svg.ExCSS.IToString.html": {
    "href": "api/Svg.ExCSS.IToString.html",
    "title": "Interface IToString | SVG.NET API",
    "keywords": "Interface IToString Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public interface IToString Methods ToString(Boolean, Int32) Declaration string ToString(bool friendlyFormat, int indentation = 0) Parameters Type Name Description Boolean friendlyFormat Int32 indentation Returns Type Description String"
  },
  "api/Svg.ExCSS.IRuleContainer.html": {
    "href": "api/Svg.ExCSS.IRuleContainer.html",
    "title": "Interface IRuleContainer | SVG.NET API",
    "keywords": "Interface IRuleContainer Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public interface IRuleContainer Properties Declarations Declaration List<RuleSet> Declarations { get; } Property Value Type Description List < RuleSet >"
  },
  "api/Svg.ExCSS.GenericFunction.html": {
    "href": "api/Svg.ExCSS.GenericFunction.html",
    "title": "Class GenericFunction | SVG.NET API",
    "keywords": "Class GenericFunction Inheritance Object Term GenericFunction Inherited Members Term.Inherit Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public class GenericFunction : Term Constructors GenericFunction(String, List<Term>) Declaration public GenericFunction(string name, List<Term> arguments) Parameters Type Name Description String name List < Term > arguments Properties Arguments Declaration public TermList Arguments { get; set; } Property Value Type Description TermList Name Declaration public string Name { get; set; } Property Value Type Description String Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/Svg.ExCSS.FontFaceRule.html": {
    "href": "api/Svg.ExCSS.FontFaceRule.html",
    "title": "Class FontFaceRule | SVG.NET API",
    "keywords": "Class FontFaceRule Inheritance Object RuleSet FontFaceRule Implements ISupportsDeclarations Inherited Members RuleSet.RuleType Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public class FontFaceRule : RuleSet, ISupportsDeclarations Constructors FontFaceRule() Declaration public FontFaceRule() Properties Declarations Declaration public StyleDeclaration Declarations { get; } Property Value Type Description StyleDeclaration FeatureSettings Declaration public string FeatureSettings { get; set; } Property Value Type Description String FontFamily Declaration public string FontFamily { get; set; } Property Value Type Description String FontStyle Declaration public string FontStyle { get; set; } Property Value Type Description String FontVariant Declaration public string FontVariant { get; set; } Property Value Type Description String FontWeight Declaration public string FontWeight { get; set; } Property Value Type Description String Src Declaration public string Src { get; set; } Property Value Type Description String Stretch Declaration public string Stretch { get; set; } Property Value Type Description String UnicodeRange Declaration public string UnicodeRange { get; set; } Property Value Type Description String Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() ToString(Boolean, Int32) Declaration public override string ToString(bool friendlyFormat, int indentation = 0) Parameters Type Name Description Boolean friendlyFormat Int32 indentation Returns Type Description String Overrides RuleSet.ToString(Boolean, Int32) Implements ISupportsDeclarations"
  },
  "api/Svg.ExCSS.DirectionMode.html": {
    "href": "api/Svg.ExCSS.DirectionMode.html",
    "title": "Enum DirectionMode | SVG.NET API",
    "keywords": "Enum DirectionMode Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public enum DirectionMode Fields Name Description LeftToRight RightToLeft"
  },
  "api/Svg.ExCSS.ConditionalRule.html": {
    "href": "api/Svg.ExCSS.ConditionalRule.html",
    "title": "Class ConditionalRule | SVG.NET API",
    "keywords": "Class ConditionalRule Inheritance Object RuleSet AggregateRule ConditionalRule MediaRule SupportsRule Implements ISupportsRuleSets Inherited Members AggregateRule.RuleSets RuleSet.RuleType RuleSet.ToString(Boolean, Int32) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public abstract class ConditionalRule : AggregateRule, ISupportsRuleSets Properties Condition Declaration public virtual string Condition { get; set; } Property Value Type Description String Implements ISupportsRuleSets"
  },
  "api/Svg.ExCSS.Combinator.html": {
    "href": "api/Svg.ExCSS.Combinator.html",
    "title": "Enum Combinator | SVG.NET API",
    "keywords": "Enum Combinator Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public enum Combinator Fields Name Description AdjacentSibling Child Descendent Namespace Sibling"
  },
  "api/Svg.ExCSS.CharacterSetRule.html": {
    "href": "api/Svg.ExCSS.CharacterSetRule.html",
    "title": "Class CharacterSetRule | SVG.NET API",
    "keywords": "Class CharacterSetRule Inheritance Object RuleSet CharacterSetRule Inherited Members RuleSet.RuleType Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public class CharacterSetRule : RuleSet Constructors CharacterSetRule() Declaration public CharacterSetRule() Properties Encoding Declaration public string Encoding { get; } Property Value Type Description String Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() ToString(Boolean, Int32) Declaration public override string ToString(bool friendlyFormat, int indentation = 0) Parameters Type Name Description Boolean friendlyFormat Int32 indentation Returns Type Description String Overrides RuleSet.ToString(Boolean, Int32)"
  },
  "api/Svg.ExCSS.AggregateRule.html": {
    "href": "api/Svg.ExCSS.AggregateRule.html",
    "title": "Class AggregateRule | SVG.NET API",
    "keywords": "Class AggregateRule Inheritance Object RuleSet AggregateRule ConditionalRule DocumentRule GenericRule Implements ISupportsRuleSets Inherited Members RuleSet.RuleType RuleSet.ToString(Boolean, Int32) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg.ExCSS Assembly : cs.temp.dll.dll Syntax public abstract class AggregateRule : RuleSet, ISupportsRuleSets Constructors AggregateRule() Declaration protected AggregateRule() Properties RuleSets Declaration public List<RuleSet> RuleSets { get; } Property Value Type Description List < RuleSet > Implements ISupportsRuleSets"
  },
  "api/Svg.Exceptions.html": {
    "href": "api/Svg.Exceptions.html",
    "title": "Namespace Svg.Exceptions | SVG.NET API",
    "keywords": "Namespace Svg.Exceptions Classes SvgMemoryException"
  },
  "api/Svg.EnumBaseConverter-1.html": {
    "href": "api/Svg.EnumBaseConverter-1.html",
    "title": "Class EnumBaseConverter<T> | SVG.NET API",
    "keywords": "Class EnumBaseConverter<T> Inheritance Object BaseConverter EnumBaseConverter<T> SvgClipRuleConverter SvgColourInterpolationConverter SvgCoordinateUnitsConverter SvgFillRuleConverter SvgFontStyleConverter SvgFontVariantConverter SvgFontWeightConverter SvgGradientSpreadMethodConverter SvgImageRenderingConverter SvgMarkerUnitsConverter SvgOverflowConverter SvgShapeRenderingConverter SvgStrokeLineCapConverter SvgStrokeLineJoinConverter SvgTextAnchorConverter SvgTextDecorationConverter SvgTextLengthAdjustConverter SvgTextPathMethodConverter SvgTextPathSpacingConverter SvgTextRenderingConverter SvgTextTransformationConverter Inherited Members BaseConverter.CanConvertFrom(ITypeDescriptorContext, Type) BaseConverter.CanConvertTo(ITypeDescriptorContext, Type) Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class EnumBaseConverter<T> : BaseConverter where T : struct Type Parameters Name Description T Constructors EnumBaseConverter() Creates a new instance. Declaration public EnumBaseConverter() EnumBaseConverter(T, EnumBaseConverter<T>.CaseHandling) Creates a new instance. Declaration public EnumBaseConverter(T defaultValue, EnumBaseConverter<T>.CaseHandling caseHandling = EnumBaseConverter<T>.CaseHandling.CamelCase) Parameters Type Name Description T defaultValue Specified the default value of the enum. EnumBaseConverter.CaseHandling <> caseHandling Defines if the value shall be converted to lower camel case or lower case Properties CaseHandlingMode Defines if the enum literal shall be converted to lower camel case or lower case. Declaration public EnumBaseConverter<T>.CaseHandling CaseHandlingMode { get; } Property Value Type Description EnumBaseConverter.CaseHandling <> DefaultValue If specified, upon conversion, the default value will result in 'null'. Declaration public T? DefaultValue { get; protected set; } Property Value Type Description Nullable <T> Methods ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) Attempts to convert the provided value to T . Declaration public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) Parameters Type Name Description ITypeDescriptorContext context CultureInfo culture Object value Returns Type Description Object ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type) Attempts to convert the value to the destination type. Declaration public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType) Parameters Type Name Description ITypeDescriptorContext context CultureInfo culture Object value Type destinationType Returns Type Description Object"
  },
  "api/Svg.EnumBaseConverter-1.CaseHandling.html": {
    "href": "api/Svg.EnumBaseConverter-1.CaseHandling.html",
    "title": "Enum EnumBaseConverter<T>.CaseHandling | SVG.NET API",
    "keywords": "Enum EnumBaseConverter<T>.CaseHandling Namespace : Svg Assembly : cs.temp.dll.dll Syntax public enum CaseHandling Fields Name Description CamelCase LowerCase"
  },
  "api/Svg.DataTypes.html": {
    "href": "api/Svg.DataTypes.html",
    "title": "Namespace Svg.DataTypes | SVG.NET API",
    "keywords": "Namespace Svg.DataTypes Classes SvgOrientConverter SvgPreserveAspectRatioConverter Enums SvgColourInterpolation Specifies the color space for gradient interpolations, color animations and alpha compositing. SvgMarkerUnits Defines the coordinate system for attributes ‘markerWidth’, ‘markerHeight’ and the contents of the ‘marker’."
  },
  "api/Svg.DataTypes.SvgPreserveAspectRatioConverter.html": {
    "href": "api/Svg.DataTypes.SvgPreserveAspectRatioConverter.html",
    "title": "Class SvgPreserveAspectRatioConverter | SVG.NET API",
    "keywords": "Class SvgPreserveAspectRatioConverter Inheritance Object SvgPreserveAspectRatioConverter Namespace : Svg.DataTypes Assembly : cs.temp.dll.dll Syntax public sealed class SvgPreserveAspectRatioConverter : TypeConverter Methods CanConvertFrom(ITypeDescriptorContext, Type) Declaration public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType) Parameters Type Name Description ITypeDescriptorContext context Type sourceType Returns Type Description Boolean CanConvertTo(ITypeDescriptorContext, Type) Declaration public override bool CanConvertTo(ITypeDescriptorContext context, Type destinationType) Parameters Type Name Description ITypeDescriptorContext context Type destinationType Returns Type Description Boolean ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) Declaration public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) Parameters Type Name Description ITypeDescriptorContext context CultureInfo culture Object value Returns Type Description Object ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type) Declaration public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType) Parameters Type Name Description ITypeDescriptorContext context CultureInfo culture Object value Type destinationType Returns Type Description Object"
  },
  "api/Svg.ChildAddedEventArgs.html": {
    "href": "api/Svg.ChildAddedEventArgs.html",
    "title": "Class ChildAddedEventArgs | SVG.NET API",
    "keywords": "Class ChildAddedEventArgs Describes the Attribute which was set Inheritance Object EventArgs SVGArg ChildAddedEventArgs Inherited Members SVGArg.SessionID EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class ChildAddedEventArgs : SVGArg Fields BeforeSibling Declaration public SvgElement BeforeSibling Field Value Type Description SvgElement NewChild Declaration public SvgElement NewChild Field Value Type Description SvgElement"
  },
  "api/Svg.BaseConverter.html": {
    "href": "api/Svg.BaseConverter.html",
    "title": "Class BaseConverter | SVG.NET API",
    "keywords": "Class BaseConverter Inheritance Object BaseConverter EnumBaseConverter<T> SvgBoolConverter Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class BaseConverter : TypeConverter Methods CanConvertFrom(ITypeDescriptorContext, Type) Declaration public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType) Parameters Type Name Description ITypeDescriptorContext context Type sourceType Returns Type Description Boolean CanConvertTo(ITypeDescriptorContext, Type) Declaration public override bool CanConvertTo(ITypeDescriptorContext context, Type destinationType) Parameters Type Name Description ITypeDescriptorContext context Type destinationType Returns Type Description Boolean"
  },
  "api/Svg.AttributeEventArgs.html": {
    "href": "api/Svg.AttributeEventArgs.html",
    "title": "Class AttributeEventArgs | SVG.NET API",
    "keywords": "Class AttributeEventArgs Describes the Attribute which was set Inheritance Object EventArgs SVGArg AttributeEventArgs Inherited Members SVGArg.SessionID EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class AttributeEventArgs : SVGArg Fields Attribute Declaration public string Attribute Field Value Type Description String Value Declaration public object Value Field Value Type Description Object"
  },
  "api/Fizzler.Tokener.html": {
    "href": "api/Fizzler.Tokener.html",
    "title": "Class Tokener | SVG.NET API",
    "keywords": "Class Tokener Lexer for tokens in CSS selector grammar. Inheritance Object Tokener Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Fizzler Assembly : cs.temp.dll.dll Syntax public static class Tokener Methods Tokenize(TextReader) Parses tokens from a given text source. Declaration public static IEnumerable<Token> Tokenize(TextReader reader) Parameters Type Name Description TextReader reader Returns Type Description IEnumerable < Token > Tokenize(String) Parses tokens from a given string. Declaration public static IEnumerable<Token> Tokenize(string input) Parameters Type Name Description String input Returns Type Description IEnumerable < Token >"
  },
  "api/Fizzler.SelectorsCachingCompiler.html": {
    "href": "api/Fizzler.SelectorsCachingCompiler.html",
    "title": "Class SelectorsCachingCompiler | SVG.NET API",
    "keywords": "Class SelectorsCachingCompiler Implementation for a selectors compiler that supports caching. Inheritance Object SelectorsCachingCompiler Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Fizzler Assembly : cs.temp.dll.dll Syntax public static class SelectorsCachingCompiler Remarks This class is primarily targeted for developers of selection over an arbitrary document model. Methods Create<T>(Func<String, T>) Creates a caching selectors compiler on top on an existing compiler. Declaration public static Func<string, T> Create<T>(Func<string, T> compiler) Parameters Type Name Description Func < String , T> compiler Returns Type Description Func < String , T> Type Parameters Name Description T Create<T>(Func<String, T>, IDictionary<String, T>) Creates a caching selectors compiler on top on an existing compiler. An addition parameter specified a dictionary to use as the cache. Declaration public static Func<string, T> Create<T>(Func<string, T> compiler, IDictionary<string, T> cache) Parameters Type Name Description Func < String , T> compiler IDictionary < String , T> cache Returns Type Description Func < String , T> Type Parameters Name Description T Remarks If cache is null then this method uses a the Dictionary<TKey,TValue> implementation with an ordinally case-insensitive selectors text comparer."
  },
  "api/Fizzler.SelectorGenerator-1.html": {
    "href": "api/Fizzler.SelectorGenerator-1.html",
    "title": "Class SelectorGenerator<TElement> | SVG.NET API",
    "keywords": "Class SelectorGenerator<TElement> A selector generator implementation for an arbitrary document/element system. Inheritance Object SelectorGenerator<TElement> Implements ISelectorGenerator Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Fizzler Assembly : cs.temp.dll.dll Syntax public class SelectorGenerator<TElement> : ISelectorGenerator Type Parameters Name Description TElement Constructors SelectorGenerator(IElementOps<TElement>) Initializes a new instance of this object with an instance of IElementOps<TElement> and the default equality comparer that is used for determining if two elements are equal. Declaration public SelectorGenerator(IElementOps<TElement> ops) Parameters Type Name Description IElementOps <TElement> ops SelectorGenerator(IElementOps<TElement>, IEqualityComparer<TElement>) Initializes a new instance of this object with an instance of IElementOps<TElement> and an equality comparer used for determining if two elements are equal. Declaration public SelectorGenerator(IElementOps<TElement> ops, IEqualityComparer<TElement> equalityComparer) Parameters Type Name Description IElementOps <TElement> ops IEqualityComparer <TElement> equalityComparer Properties Ops Gets the IElementOps<TElement> instance that this object was initialized with. Declaration public IElementOps<TElement> Ops { get; } Property Value Type Description IElementOps <TElement> Selector Gets the selector implementation. Declaration public Selector<TElement> Selector { get; } Property Value Type Description Selector <TElement> Remarks If the generation is not complete, this property returns the last generated selector. Methods Add(Selector<TElement>) Adds a generated selector. Declaration protected void Add(Selector<TElement> selector) Parameters Type Name Description Selector <TElement> selector Adjacent() Generates a combinator , which represents elements that share the same parent in the document tree and where the first element immediately precedes the second element. Declaration public virtual void Adjacent() AttributeDashMatch(NamespacePrefix, String, String) Generates an attribute selector that represents an element with the given attribute name , its value either being exactly value or beginning with value immediately followed by \"-\" (U+002D). Declaration public virtual void AttributeDashMatch(NamespacePrefix prefix, string name, string value) Parameters Type Name Description NamespacePrefix prefix String name String value AttributeExact(NamespacePrefix, String, String) Generates an attribute selector that represents an element with the given attribute name and whose value is exactly value . Declaration public virtual void AttributeExact(NamespacePrefix prefix, string name, string value) Parameters Type Name Description NamespacePrefix prefix String name String value AttributeExists(NamespacePrefix, String) Generates an attribute selector that represents an element with the given attribute name whatever the values of the attribute. Declaration public virtual void AttributeExists(NamespacePrefix prefix, string name) Parameters Type Name Description NamespacePrefix prefix String name AttributeIncludes(NamespacePrefix, String, String) Generates an attribute selector that represents an element with the given attribute name and whose value is a whitespace-separated list of words, one of which is exactly value . Declaration public virtual void AttributeIncludes(NamespacePrefix prefix, string name, string value) Parameters Type Name Description NamespacePrefix prefix String name String value AttributePrefixMatch(NamespacePrefix, String, String) Generates an attribute selector that represents an element with the attribute name whose value begins with the prefix value . Declaration public void AttributePrefixMatch(NamespacePrefix prefix, string name, string value) Parameters Type Name Description NamespacePrefix prefix String name String value AttributeSubstring(NamespacePrefix, String, String) Generates an attribute selector that represents an element with the attribute name whose value contains at least one instance of the substring value . Declaration public void AttributeSubstring(NamespacePrefix prefix, string name, string value) Parameters Type Name Description NamespacePrefix prefix String name String value AttributeSuffixMatch(NamespacePrefix, String, String) Generates an attribute selector that represents an element with the attribute name whose value ends with the suffix value . Declaration public void AttributeSuffixMatch(NamespacePrefix prefix, string name, string value) Parameters Type Name Description NamespacePrefix prefix String name String value Child() Generates a combinator , which represents a childhood relationship between two elements. Declaration public virtual void Child() Class(String) Generates a class selector , which is an alternative AttributeIncludes(NamespacePrefix, String, String) when representing the class attribute. Declaration public virtual void Class(string clazz) Parameters Type Name Description String clazz Descendant() Generates a combinator , which represents a relationship between two elements where one element is an arbitrary descendant of some ancestor element. Declaration public virtual void Descendant() Empty() Generates a pseudo-class selector , which represents an element that has no children at all. Declaration public virtual void Empty() FirstChild() Generates a pseudo-class selector , which represents an element that is the first child of some other element. Declaration public virtual void FirstChild() GeneralSibling() Generates a combinator , which separates two sequences of simple selectors. The elements represented by the two sequences share the same parent in the document tree and the element represented by the first sequence precedes (not necessarily immediately) the element represented by the second one. Declaration public virtual void GeneralSibling() GetSelectors() Returns the collection of selector implementations representing a group. Declaration public IEnumerable<Selector<TElement>> GetSelectors() Returns Type Description IEnumerable < Selector <TElement>> Remarks If the generation is not complete, this method return the selectors generated so far in a group. Id(String) Generates a ID selector , which represents an element instance that has an identifier that matches the identifier in the ID selector. Declaration public virtual void Id(string id) Parameters Type Name Description String id LastChild() Generates a pseudo-class selector , which represents an element that is the last child of some other element. Declaration public virtual void LastChild() NthChild(Int32, Int32) Generates a pseudo-class selector , which represents an element that is the N-th child of some other element. Declaration public virtual void NthChild(int a, int b) Parameters Type Name Description Int32 a Int32 b NthLastChild(Int32, Int32) Generates a pseudo-class selector , which represents an element that is the N-th child from bottom up of some other element. Declaration public void NthLastChild(int a, int b) Parameters Type Name Description Int32 a Int32 b OnClose() Delimits the closing/conclusion of a generation. Declaration public virtual void OnClose() OnInit() Delimits the initialization of a generation. Declaration public virtual void OnInit() OnlyChild() Generates a pseudo-class selector , which represents an element that has a parent element and whose parent element has no other element children. Declaration public virtual void OnlyChild() OnSelector() Delimits a selector generation in a group of selectors. Declaration public virtual void OnSelector() Type(NamespacePrefix, String) Generates a type selector , which represents an instance of the element type in the document tree. Declaration public virtual void Type(NamespacePrefix prefix, string type) Parameters Type Name Description NamespacePrefix prefix String type Universal(NamespacePrefix) Generates a universal selector , any single element in the document tree in any namespace (including those without a namespace) if no default namespace has been specified for selectors. Declaration public virtual void Universal(NamespacePrefix prefix) Parameters Type Name Description NamespacePrefix prefix Implements ISelectorGenerator"
  },
  "api/Fizzler.Parser.html": {
    "href": "api/Fizzler.Parser.html",
    "title": "Class Parser | SVG.NET API",
    "keywords": "Class Parser Semantic parser for CSS selector grammar. Inheritance Object Parser Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Fizzler Assembly : cs.temp.dll.dll Syntax public sealed class Parser Methods Parse<TGenerator>(IEnumerable<Token>, TGenerator) Parses a tokenized stream representing a CSS selector group and generates its implementation. Declaration public static TGenerator Parse<TGenerator>(IEnumerable<Token> tokens, TGenerator generator) where TGenerator : ISelectorGenerator Parameters Type Name Description IEnumerable < Token > tokens TGenerator generator Returns Type Description TGenerator Type Parameters Name Description TGenerator Parse<TGenerator>(String, TGenerator) Parses a CSS selector group and generates its implementation. Declaration public static TGenerator Parse<TGenerator>(string selectors, TGenerator generator) where TGenerator : ISelectorGenerator Parameters Type Name Description String selectors TGenerator generator Returns Type Description TGenerator Type Parameters Name Description TGenerator Parse<TGenerator, T>(IEnumerable<Token>, TGenerator, Func<TGenerator, T>) Parses a tokenized stream representing a CSS selector group and generates its implementation. Declaration public static T Parse<TGenerator, T>(IEnumerable<Token> tokens, TGenerator generator, Func<TGenerator, T> resultor) where TGenerator : ISelectorGenerator Parameters Type Name Description IEnumerable < Token > tokens TGenerator generator Func <TGenerator, T> resultor Returns Type Description T Type Parameters Name Description TGenerator T Parse<TGenerator, T>(String, TGenerator, Func<TGenerator, T>) Parses a CSS selector group and generates its implementation. Declaration public static T Parse<TGenerator, T>(string selectors, TGenerator generator, Func<TGenerator, T> resultor) where TGenerator : ISelectorGenerator Parameters Type Name Description String selectors TGenerator generator Func <TGenerator, T> resultor Returns Type Description T Type Parameters Name Description TGenerator T"
  },
  "api/Fizzler.IElementOps-1.html": {
    "href": "api/Fizzler.IElementOps-1.html",
    "title": "Interface IElementOps<TElement> | SVG.NET API",
    "keywords": "Interface IElementOps<TElement> Represents a selectors implementation for an arbitrary document/node system. Namespace : Fizzler Assembly : cs.temp.dll.dll Syntax public interface IElementOps<TElement> Type Parameters Name Description TElement Methods Adjacent() Generates a combinator , which represents elements that share the same parent in the document tree and where the first element immediately precedes the second element. Declaration Selector<TElement> Adjacent() Returns Type Description Selector <TElement> AttributeDashMatch(NamespacePrefix, String, String) Generates an attribute selector that represents an element with the given attribute name , its value either being exactly value or beginning with value immediately followed by \"-\" (U+002D). Declaration Selector<TElement> AttributeDashMatch(NamespacePrefix prefix, string name, string value) Parameters Type Name Description NamespacePrefix prefix String name String value Returns Type Description Selector <TElement> AttributeExact(NamespacePrefix, String, String) Generates an attribute selector that represents an element with the given attribute name and whose value is exactly value . Declaration Selector<TElement> AttributeExact(NamespacePrefix prefix, string name, string value) Parameters Type Name Description NamespacePrefix prefix String name String value Returns Type Description Selector <TElement> AttributeExists(NamespacePrefix, String) Generates an attribute selector that represents an element with the given attribute name whatever the values of the attribute. Declaration Selector<TElement> AttributeExists(NamespacePrefix prefix, string name) Parameters Type Name Description NamespacePrefix prefix String name Returns Type Description Selector <TElement> AttributeIncludes(NamespacePrefix, String, String) Generates an attribute selector that represents an element with the given attribute name and whose value is a whitespace-separated list of words, one of which is exactly value . Declaration Selector<TElement> AttributeIncludes(NamespacePrefix prefix, string name, string value) Parameters Type Name Description NamespacePrefix prefix String name String value Returns Type Description Selector <TElement> AttributePrefixMatch(NamespacePrefix, String, String) Generates an attribute selector that represents an element with the attribute name whose value begins with the prefix value . Declaration Selector<TElement> AttributePrefixMatch(NamespacePrefix prefix, string name, string value) Parameters Type Name Description NamespacePrefix prefix String name String value Returns Type Description Selector <TElement> AttributeSubstring(NamespacePrefix, String, String) Generates an attribute selector that represents an element with the attribute name whose value contains at least one instance of the substring value . Declaration Selector<TElement> AttributeSubstring(NamespacePrefix prefix, string name, string value) Parameters Type Name Description NamespacePrefix prefix String name String value Returns Type Description Selector <TElement> AttributeSuffixMatch(NamespacePrefix, String, String) Generates an attribute selector that represents an element with the attribute name whose value ends with the suffix value . Declaration Selector<TElement> AttributeSuffixMatch(NamespacePrefix prefix, string name, string value) Parameters Type Name Description NamespacePrefix prefix String name String value Returns Type Description Selector <TElement> Child() Generates a combinator , which represents a childhood relationship between two elements. Declaration Selector<TElement> Child() Returns Type Description Selector <TElement> Class(String) Generates a class selector , which is an alternative AttributeIncludes(NamespacePrefix, String, String) when representing the class attribute. Declaration Selector<TElement> Class(string clazz) Parameters Type Name Description String clazz Returns Type Description Selector <TElement> Descendant() Generates a combinator , which represents a relationship between two elements where one element is an arbitrary descendant of some ancestor element. Declaration Selector<TElement> Descendant() Returns Type Description Selector <TElement> Empty() Generates a pseudo-class selector , which represents an element that has no children at all. Declaration Selector<TElement> Empty() Returns Type Description Selector <TElement> FirstChild() Generates a pseudo-class selector , which represents an element that is the first child of some other element. Declaration Selector<TElement> FirstChild() Returns Type Description Selector <TElement> GeneralSibling() Generates a combinator , which separates two sequences of simple selectors. The elements represented by the two sequences share the same parent in the document tree and the element represented by the first sequence precedes (not necessarily immediately) the element represented by the second one. Declaration Selector<TElement> GeneralSibling() Returns Type Description Selector <TElement> Id(String) Generates a ID selector , which represents an element instance that has an identifier that matches the identifier in the ID selector. Declaration Selector<TElement> Id(string id) Parameters Type Name Description String id Returns Type Description Selector <TElement> LastChild() Generates a pseudo-class selector , which represents an element that is the last child of some other element. Declaration Selector<TElement> LastChild() Returns Type Description Selector <TElement> NthChild(Int32, Int32) Generates a pseudo-class selector , which represents an element that is the N-th child of some other element. Declaration Selector<TElement> NthChild(int a, int b) Parameters Type Name Description Int32 a Int32 b Returns Type Description Selector <TElement> NthLastChild(Int32, Int32) Generates a pseudo-class selector , which represents an element that is the N-th child from bottom up of some other element. Declaration Selector<TElement> NthLastChild(int a, int b) Parameters Type Name Description Int32 a Int32 b Returns Type Description Selector <TElement> OnlyChild() Generates a pseudo-class selector , which represents an element that has a parent element and whose parent element has no other element children. Declaration Selector<TElement> OnlyChild() Returns Type Description Selector <TElement> Type(NamespacePrefix, String) Generates a type selector , which represents an instance of the element type in the document tree. Declaration Selector<TElement> Type(NamespacePrefix prefix, string name) Parameters Type Name Description NamespacePrefix prefix String name Returns Type Description Selector <TElement> Universal(NamespacePrefix) Generates a universal selector , any single element in the document tree in any namespace (including those without a namespace) if no default namespace has been specified for selectors. Declaration Selector<TElement> Universal(NamespacePrefix prefix) Parameters Type Name Description NamespacePrefix prefix Returns Type Description Selector <TElement>"
  },
  "api/Svg.SvgUnitCollection.html": {
    "href": "api/Svg.SvgUnitCollection.html",
    "title": "Class SvgUnitCollection | SVG.NET API",
    "keywords": "Class SvgUnitCollection Represents a list of SvgUnit . Inheritance Object SvgUnitCollection Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class SvgUnitCollection : ObservableCollection<SvgUnit> Methods AddRange(IEnumerable<SvgUnit>) Declaration public void AddRange(IEnumerable<SvgUnit> collection) Parameters Type Name Description IEnumerable < SvgUnit > collection IsNullOrEmpty(SvgUnitCollection) Declaration public static bool IsNullOrEmpty(SvgUnitCollection collection) Parameters Type Name Description SvgUnitCollection collection Returns Type Description Boolean ToString() Declaration public override string ToString() Returns Type Description String"
  },
  "api/Svg.SvgUnit.html": {
    "href": "api/Svg.SvgUnit.html",
    "title": "Struct SvgUnit | SVG.NET API",
    "keywords": "Struct SvgUnit Represents a unit in an Scalable Vector Graphics document. Inherited Members Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public struct SvgUnit Constructors SvgUnit(SvgUnitType, Single) Initializes a new instance of the SvgUnit struct. Declaration public SvgUnit(SvgUnitType type, float value) Parameters Type Name Description SvgUnitType type The type. Single value The value. SvgUnit(Single) Initializes a new instance of the SvgUnit struct. Declaration public SvgUnit(float value) Parameters Type Name Description Single value The value. Fields Empty Gets and empty SvgUnit . Declaration public static readonly SvgUnit Empty Field Value Type Description SvgUnit None Gets an SvgUnit with a value of none. Declaration public static readonly SvgUnit None Field Value Type Description SvgUnit Properties IsEmpty Gets a value to determine whether the unit is empty. Declaration public bool IsEmpty { get; } Property Value Type Description Boolean IsNone Gets whether this unit is none. Declaration public bool IsNone { get; } Property Value Type Description Boolean Type Gets the SvgUnitType of unit. Declaration public SvgUnitType Type { get; } Property Value Type Description SvgUnitType Value Gets the value of the unit. Declaration public float Value { get; } Property Value Type Description Single Methods Equals(SvgUnit) Declaration public bool Equals(SvgUnit other) Parameters Type Name Description SvgUnit other Returns Type Description Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) GetDevicePoint(SvgUnit, SvgUnit, ISvgRenderer, SvgElement) Declaration public static Drawing.PointF GetDevicePoint(SvgUnit x, SvgUnit y, ISvgRenderer renderer, SvgElement owner) Parameters Type Name Description SvgUnit x SvgUnit y ISvgRenderer renderer SvgElement owner Returns Type Description Drawing.PointF GetDevicePointOffset(SvgUnit, SvgUnit, ISvgRenderer, SvgElement) Declaration public static Drawing.PointF GetDevicePointOffset(SvgUnit x, SvgUnit y, ISvgRenderer renderer, SvgElement owner) Parameters Type Name Description SvgUnit x SvgUnit y ISvgRenderer renderer SvgElement owner Returns Type Description Drawing.PointF GetDeviceSize(SvgUnit, SvgUnit, ISvgRenderer, SvgElement) Declaration public static Drawing.SizeF GetDeviceSize(SvgUnit width, SvgUnit height, ISvgRenderer renderer, SvgElement owner) Parameters Type Name Description SvgUnit width SvgUnit height ISvgRenderer renderer SvgElement owner Returns Type Description Drawing.SizeF GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() ToDeviceValue(ISvgRenderer, UnitRenderingType, SvgElement) Converts the current unit to one that can be used at render time. Declaration public float ToDeviceValue(ISvgRenderer renderer, UnitRenderingType renderType, SvgElement owner) Parameters Type Name Description ISvgRenderer renderer UnitRenderingType renderType SvgElement owner Returns Type Description Single The representation of the current unit in a device value (usually pixels). ToPercentage() Converts the current unit to a percentage, if applicable. Declaration public SvgUnit ToPercentage() Returns Type Description SvgUnit An SvgUnit of type Percentage . ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators Equality(SvgUnit, SvgUnit) Declaration public static bool operator ==(SvgUnit lhs, SvgUnit rhs) Parameters Type Name Description SvgUnit lhs SvgUnit rhs Returns Type Description Boolean Implicit(SvgUnit to Single) Performs an implicit conversion from SvgUnit to Single . Declaration public static implicit operator float (SvgUnit value) Parameters Type Name Description SvgUnit value The value. Returns Type Description Single The result of the conversion. Implicit(Single to SvgUnit) Performs an implicit conversion from Single to SvgUnit . Declaration public static implicit operator SvgUnit(float value) Parameters Type Name Description Single value The value. Returns Type Description SvgUnit The result of the conversion. Inequality(SvgUnit, SvgUnit) Declaration public static bool operator !=(SvgUnit lhs, SvgUnit rhs) Parameters Type Name Description SvgUnit lhs SvgUnit rhs Returns Type Description Boolean"
  },
  "api/Svg.SvgTextBase.html": {
    "href": "api/Svg.SvgTextBase.html",
    "title": "Class SvgTextBase | SVG.NET API",
    "keywords": "Class SvgTextBase Inheritance Object SvgElement SvgVisualElement SvgTextBase SvgText SvgTextPath SvgTextRef SvgTextSpan Implements ISvgTransformable ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable Inherited Members SvgVisualElement.ISvgBoundable.Location SvgVisualElement.ISvgBoundable.Size SvgVisualElement.Clip SvgVisualElement.ClipPath SvgVisualElement.ClipRule SvgVisualElement.Filter SvgVisualElement.RequiresSmoothRendering SvgVisualElement.Renderable SvgVisualElement.Render(ISvgRenderer) SvgVisualElement.RenderFill(ISvgRenderer) SvgVisualElement.RenderStroke(ISvgRenderer) SvgVisualElement.SetClip(ISvgRenderer) SvgVisualElement.ResetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.SetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.ResetClip(ISvgRenderer) SvgVisualElement.DeepCopy<T>() SvgVisualElement.Visible SvgVisualElement.Display SvgVisualElement.Displayable SvgVisualElement.EnableBackground SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.DeepCopy() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public abstract class SvgTextBase : SvgVisualElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode, ISvgBoundable, ISvgStylable, ISvgClipable Constructors SvgTextBase() Declaration public SvgTextBase() Properties Bounds Gets the bounds of the element. Declaration public override RectangleF Bounds { get; } Property Value Type Description RectangleF The bounds. Overrides SvgVisualElement.Bounds Dx Gets or sets the dX. Declaration public virtual SvgUnitCollection Dx { get; set; } Property Value Type Description SvgUnitCollection The dX. Dy Gets or sets the dY. Declaration public virtual SvgUnitCollection Dy { get; set; } Property Value Type Description SvgUnitCollection The dY. Fill Gets or sets the fill. Declaration public override SvgPaintServer Fill { get; set; } Property Value Type Description SvgPaintServer The fill. Overrides SvgElement.Fill Remarks Unlike other SvgVisualElement s, SvgText has a default fill of black rather than transparent. LengthAdjust Gets or sets the text anchor. Declaration public virtual SvgTextLengthAdjust LengthAdjust { get; set; } Property Value Type Description SvgTextLengthAdjust The text anchor. LetterSpacing Specifies spacing behavior between text characters. Declaration public virtual SvgUnit LetterSpacing { get; set; } Property Value Type Description SvgUnit Rotate Gets or sets the rotate. Declaration public virtual string Rotate { get; set; } Property Value Type Description String The rotate. SpaceHandling Declaration public override XmlSpaceHandling SpaceHandling { get; set; } Property Value Type Description XmlSpaceHandling Overrides SvgElement.SpaceHandling Text Gets or sets the text to be rendered. Declaration public virtual string Text { get; set; } Property Value Type Description String TextLength The pre-calculated length of the text Declaration public virtual SvgUnit TextLength { get; set; } Property Value Type Description SvgUnit WordSpacing Specifies spacing behavior between words. Declaration public virtual SvgUnit WordSpacing { get; set; } Property Value Type Description SvgUnit X Gets or sets the X. Declaration public virtual SvgUnitCollection X { get; set; } Property Value Type Description SvgUnitCollection The X. Y Gets or sets the Y. Declaration public virtual SvgUnitCollection Y { get; set; } Property Value Type Description SvgUnitCollection The Y. Methods GetAuthorPathLength() Declaration protected virtual float GetAuthorPathLength() Returns Type Description Single GetBaselinePath(ISvgRenderer) Declaration protected virtual GraphicsPath GetBaselinePath(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer Returns Type Description GraphicsPath OnChange(String, String) Declaration protected void OnChange(string newString, string sessionID) Parameters Type Name Description String newString String sessionID Path(ISvgRenderer) Gets the for this element. Declaration public override GraphicsPath Path(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer Returns Type Description GraphicsPath Overrides SvgVisualElement.Path(ISvgRenderer) PrepareText(String) Prepare the text according to the whitespace handling rules and text transformations. SVG Spec . Declaration protected string PrepareText(string value) Parameters Type Name Description String value Text to be prepared Returns Type Description String Prepared text RaiseChange(Object, StringArg) Declaration protected void RaiseChange(object sender, StringArg s) Parameters Type Name Description Object sender StringArg s RenderFillAndStroke(ISvgRenderer) Declaration protected override void RenderFillAndStroke(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer Overrides SvgVisualElement.RenderFillAndStroke(ISvgRenderer) ShouldWriteElement() Empty text elements are not legal - only write this element if it has children. Declaration public override bool ShouldWriteElement() Returns Type Description Boolean Overrides SvgElement.ShouldWriteElement() ToString() Returns a String that represents the current Object . Declaration public override string ToString() Returns Type Description String A String that represents the current Object . Overrides Object.ToString() Events Change Declaration public event EventHandler<StringArg> Change Event Type Type Description EventHandler < StringArg > Implements ISvgTransformable System.ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable"
  },
  "api/Svg.SvgTextAnchorConverter.html": {
    "href": "api/Svg.SvgTextAnchorConverter.html",
    "title": "Class SvgTextAnchorConverter | SVG.NET API",
    "keywords": "Class SvgTextAnchorConverter Inheritance Object BaseConverter EnumBaseConverter < SvgTextAnchor > SvgTextAnchorConverter Inherited Members EnumBaseConverter<SvgTextAnchor>.CaseHandlingMode EnumBaseConverter<SvgTextAnchor>.DefaultValue EnumBaseConverter<SvgTextAnchor>.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) EnumBaseConverter<SvgTextAnchor>.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type) BaseConverter.CanConvertFrom(ITypeDescriptorContext, Type) BaseConverter.CanConvertTo(ITypeDescriptorContext, Type) Namespace : Svg Assembly : cs.temp.dll.dll Syntax public sealed class SvgTextAnchorConverter : EnumBaseConverter<SvgTextAnchor> Constructors SvgTextAnchorConverter() Declaration public SvgTextAnchorConverter()"
  },
  "api/Svg.SvgTextAnchor.html": {
    "href": "api/Svg.SvgTextAnchor.html",
    "title": "Enum SvgTextAnchor | SVG.NET API",
    "keywords": "Enum SvgTextAnchor Text anchor is used to align (start-, middle- or end-alignment) a string of text relative to a given point. Namespace : Svg Assembly : cs.temp.dll.dll Syntax public enum SvgTextAnchor Fields Name Description End The rendered characters are aligned such that the end of the text string is at the initial current text position. Inherit The value is inherited from the parent element. Middle The rendered characters are aligned such that the middle of the text string is at the current text position. Start The rendered characters are aligned such that the start of the text string is at the initial current text position."
  },
  "api/Svg.SvgText.html": {
    "href": "api/Svg.SvgText.html",
    "title": "Class SvgText | SVG.NET API",
    "keywords": "Class SvgText The SvgText element defines a graphics element consisting of text. Inheritance Object SvgElement SvgVisualElement SvgTextBase SvgText Implements ISvgTransformable ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable Inherited Members SvgTextBase.Text SvgTextBase.SpaceHandling SvgTextBase.X SvgTextBase.Dx SvgTextBase.Y SvgTextBase.Dy SvgTextBase.Rotate SvgTextBase.TextLength SvgTextBase.LengthAdjust SvgTextBase.LetterSpacing SvgTextBase.WordSpacing SvgTextBase.Fill SvgTextBase.ToString() SvgTextBase.Bounds SvgTextBase.RenderFillAndStroke(ISvgRenderer) SvgTextBase.GetBaselinePath(ISvgRenderer) SvgTextBase.GetAuthorPathLength() SvgTextBase.Path(ISvgRenderer) SvgTextBase.PrepareText(String) SvgTextBase.Change SvgTextBase.OnChange(String, String) SvgTextBase.RaiseChange(Object, StringArg) SvgTextBase.ShouldWriteElement() SvgVisualElement.ISvgBoundable.Location SvgVisualElement.ISvgBoundable.Size SvgVisualElement.Clip SvgVisualElement.ClipPath SvgVisualElement.ClipRule SvgVisualElement.Filter SvgVisualElement.RequiresSmoothRendering SvgVisualElement.Renderable SvgVisualElement.Render(ISvgRenderer) SvgVisualElement.RenderFill(ISvgRenderer) SvgVisualElement.RenderStroke(ISvgRenderer) SvgVisualElement.SetClip(ISvgRenderer) SvgVisualElement.ResetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.SetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.ResetClip(ISvgRenderer) SvgVisualElement.Visible SvgVisualElement.Display SvgVisualElement.Displayable SvgVisualElement.EnableBackground SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"text\")] public class SvgText : SvgTextBase, ISvgElement, ISvgTransformable, ICloneable, ISvgNode, ISvgBoundable, ISvgStylable, ISvgClipable Constructors SvgText() Initializes the SvgText class. Declaration public SvgText() SvgText(String) Initializes a new instance of the SvgText class. Declaration public SvgText(string text) Parameters Type Name Description String text The text. Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgVisualElement.DeepCopy<T>() Implements ISvgTransformable System.ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable"
  },
  "api/Svg.SvgSwitch.html": {
    "href": "api/Svg.SvgSwitch.html",
    "title": "Class SvgSwitch | SVG.NET API",
    "keywords": "Class SvgSwitch The 'switch' element evaluates the 'requiredFeatures', 'requiredExtensions' and 'systemLanguage' attributes on its direct child elements in order, and then processes and renders the first child for which these attributes evaluate to true Inheritance Object SvgElement SvgVisualElement SvgSwitch Implements ISvgTransformable ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable Inherited Members SvgVisualElement.ISvgBoundable.Location SvgVisualElement.ISvgBoundable.Size SvgVisualElement.Clip SvgVisualElement.ClipPath SvgVisualElement.ClipRule SvgVisualElement.Filter SvgVisualElement.RequiresSmoothRendering SvgVisualElement.Renderable SvgVisualElement.RenderFillAndStroke(ISvgRenderer) SvgVisualElement.RenderFill(ISvgRenderer) SvgVisualElement.RenderStroke(ISvgRenderer) SvgVisualElement.SetClip(ISvgRenderer) SvgVisualElement.ResetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.SetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.ResetClip(ISvgRenderer) SvgVisualElement.Visible SvgVisualElement.Display SvgVisualElement.Displayable SvgVisualElement.EnableBackground SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"switch\")] public class SvgSwitch : SvgVisualElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode, ISvgBoundable, ISvgStylable, ISvgClipable Properties Bounds Gets the bounds of the element. Declaration public override Drawing.RectangleF Bounds { get; } Property Value Type Description Drawing.RectangleF The bounds. Overrides SvgVisualElement.Bounds Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgVisualElement.DeepCopy<T>() Path(ISvgRenderer) Gets the for this element. Declaration public override Drawing.Drawing2D.GraphicsPath Path(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer Returns Type Description Drawing.Drawing2D.GraphicsPath Overrides SvgVisualElement.Path(ISvgRenderer) Render(ISvgRenderer) Renders the SvgElement and contents to the specified object. Declaration protected override void Render(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer The object to render to. Overrides SvgVisualElement.Render(ISvgRenderer) Implements ISvgTransformable System.ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable"
  },
  "api/Svg.SvgStrokeLineJoinConverter.html": {
    "href": "api/Svg.SvgStrokeLineJoinConverter.html",
    "title": "Class SvgStrokeLineJoinConverter | SVG.NET API",
    "keywords": "Class SvgStrokeLineJoinConverter Inheritance Object BaseConverter EnumBaseConverter < SvgStrokeLineJoin > SvgStrokeLineJoinConverter Inherited Members EnumBaseConverter<SvgStrokeLineJoin>.CaseHandlingMode EnumBaseConverter<SvgStrokeLineJoin>.DefaultValue EnumBaseConverter<SvgStrokeLineJoin>.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) EnumBaseConverter<SvgStrokeLineJoin>.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type) BaseConverter.CanConvertFrom(ITypeDescriptorContext, Type) BaseConverter.CanConvertTo(ITypeDescriptorContext, Type) Namespace : Svg Assembly : cs.temp.dll.dll Syntax public sealed class SvgStrokeLineJoinConverter : EnumBaseConverter<SvgStrokeLineJoin> Constructors SvgStrokeLineJoinConverter() Declaration public SvgStrokeLineJoinConverter()"
  },
  "api/Svg.SvgStrokeLineJoin.html": {
    "href": "api/Svg.SvgStrokeLineJoin.html",
    "title": "Enum SvgStrokeLineJoin | SVG.NET API",
    "keywords": "Enum SvgStrokeLineJoin Specifies the shape to be used at the corners of paths or basic shapes when they are stroked. Namespace : Svg Assembly : cs.temp.dll.dll Syntax public enum SvgStrokeLineJoin Fields Name Description Bevel The corners of the paths are \"flattened\". Inherit The value is inherited from the parent element. Miter The corners of the paths are joined sharply. Round The corners of the paths are rounded off."
  },
  "api/Svg.SvgStrokeLineCapConverter.html": {
    "href": "api/Svg.SvgStrokeLineCapConverter.html",
    "title": "Class SvgStrokeLineCapConverter | SVG.NET API",
    "keywords": "Class SvgStrokeLineCapConverter Inheritance Object BaseConverter EnumBaseConverter < SvgStrokeLineCap > SvgStrokeLineCapConverter Inherited Members EnumBaseConverter<SvgStrokeLineCap>.CaseHandlingMode EnumBaseConverter<SvgStrokeLineCap>.DefaultValue EnumBaseConverter<SvgStrokeLineCap>.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) EnumBaseConverter<SvgStrokeLineCap>.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type) BaseConverter.CanConvertFrom(ITypeDescriptorContext, Type) BaseConverter.CanConvertTo(ITypeDescriptorContext, Type) Namespace : Svg Assembly : cs.temp.dll.dll Syntax public sealed class SvgStrokeLineCapConverter : EnumBaseConverter<SvgStrokeLineCap> Constructors SvgStrokeLineCapConverter() Declaration public SvgStrokeLineCapConverter()"
  },
  "api/Svg.SvgStrokeLineCap.html": {
    "href": "api/Svg.SvgStrokeLineCap.html",
    "title": "Enum SvgStrokeLineCap | SVG.NET API",
    "keywords": "Enum SvgStrokeLineCap Specifies the shape to be used at the end of open subpaths when they are stroked. Namespace : Svg Assembly : cs.temp.dll.dll Syntax public enum SvgStrokeLineCap Fields Name Description Butt The ends of the subpaths are square but do not extend past the end of the subpath. Inherit The value is inherited from the parent element. Round The ends of the subpaths are rounded. Square The ends of the subpaths are square."
  },
  "api/Svg.SvgUnknownElement.html": {
    "href": "api/Svg.SvgUnknownElement.html",
    "title": "Class SvgUnknownElement | SVG.NET API",
    "keywords": "Class SvgUnknownElement Inheritance Object SvgElement SvgUnknownElement Implements ISvgTransformable ICloneable ISvgNode Inherited Members SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.Render(ISvgRenderer) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public class SvgUnknownElement : SvgElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode Constructors SvgUnknownElement() Declaration public SvgUnknownElement() SvgUnknownElement(String) Declaration public SvgUnknownElement(string elementName) Parameters Type Name Description String elementName Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgElement.DeepCopy<T>() Implements ISvgTransformable System.ICloneable ISvgNode"
  },
  "api/Svg.SvgUnitType.html": {
    "href": "api/Svg.SvgUnitType.html",
    "title": "Enum SvgUnitType | SVG.NET API",
    "keywords": "Enum SvgUnitType Defines the various types of unit an SvgUnit can be. Namespace : Svg Assembly : cs.temp.dll.dll Syntax public enum SvgUnitType Fields Name Description Centimeter Indicates that the unit is in centimeters. Em Indicates that the unit is equal to the pt size of the current font. Ex Indicates that the unit is equal to the x-height of the current font. Inch Indicates the the unit is in inches. Millimeter Indicates that the unit is in millimeters. None Indicates that the unit holds no value. Percentage Indicates that the unit is a percentage. Pica Indicates that the unit is in picas. Pixel Indicates that the unit is in pixels. Point Indicates that the unit is in points, the smallest unit of measure, being a subdivision of the larger Pica . There are 12 points in the Pica . User Indicates that the unit has no unit identifier and is a value in the current user coordinate system."
  },
  "api/Svg.SvgUnitConverter.html": {
    "href": "api/Svg.SvgUnitConverter.html",
    "title": "Class SvgUnitConverter | SVG.NET API",
    "keywords": "Class SvgUnitConverter Inheritance Object SvgUnitConverter Namespace : Svg Assembly : cs.temp.dll.dll Syntax public sealed class SvgUnitConverter : TypeConverter Methods CanConvertFrom(ITypeDescriptorContext, Type) Declaration public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType) Parameters Type Name Description ITypeDescriptorContext context Type sourceType Returns Type Description Boolean CanConvertTo(ITypeDescriptorContext, Type) Declaration public override bool CanConvertTo(ITypeDescriptorContext context, Type destinationType) Parameters Type Name Description ITypeDescriptorContext context Type destinationType Returns Type Description Boolean ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) Declaration public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) Parameters Type Name Description ITypeDescriptorContext context CultureInfo culture Object value Returns Type Description Object ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type) Declaration public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType) Parameters Type Name Description ITypeDescriptorContext context CultureInfo culture Object value Type destinationType Returns Type Description Object"
  },
  "api/Svg.SvgRadialGradientServer.html": {
    "href": "api/Svg.SvgRadialGradientServer.html",
    "title": "Class SvgRadialGradientServer | SVG.NET API",
    "keywords": "Class SvgRadialGradientServer Inheritance Object SvgElement SvgPaintServer SvgGradientServer SvgRadialGradientServer Implements ISvgTransformable ICloneable ISvgNode Inherited Members SvgGradientServer.AddElement(SvgElement, Int32) SvgGradientServer.RemoveElement(SvgElement) SvgGradientServer.Stops SvgGradientServer.SpreadMethod SvgGradientServer.GradientUnits SvgGradientServer.InheritGradient SvgGradientServer.GradientTransform SvgGradientServer.EffectiveGradientTransform SvgGradientServer.GetColorBlend(ISvgRenderer, Single, Boolean) SvgGradientServer.LoadStops(SvgVisualElement) SvgGradientServer.CalculateDistance(PointF, PointF) SvgGradientServer.CalculateLength(PointF) SvgPaintServer.GetCallback SvgPaintServer.None SvgPaintServer.Render(ISvgRenderer) SvgPaintServer.ToString() SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.ChildAdded SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"radialGradient\")] public sealed class SvgRadialGradientServer : SvgGradientServer, ISvgElement, ISvgTransformable, ICloneable, ISvgNode Properties CenterX Declaration public SvgUnit CenterX { get; set; } Property Value Type Description SvgUnit CenterY Declaration public SvgUnit CenterY { get; set; } Property Value Type Description SvgUnit FocalX Declaration public SvgUnit FocalX { get; set; } Property Value Type Description SvgUnit FocalY Declaration public SvgUnit FocalY { get; set; } Property Value Type Description SvgUnit Radius Declaration public SvgUnit Radius { get; set; } Property Value Type Description SvgUnit Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgGradientServer.DeepCopy<T>() GetBrush(SvgVisualElement, ISvgRenderer, Single, Boolean) Declaration public override Brush GetBrush(SvgVisualElement renderingElement, ISvgRenderer renderer, float opacity, bool forStroke = false) Parameters Type Name Description SvgVisualElement renderingElement ISvgRenderer renderer Single opacity Boolean forStroke Returns Type Description Brush Overrides SvgPaintServer.GetBrush(SvgVisualElement, ISvgRenderer, Single, Boolean) Implements ISvgTransformable System.ICloneable ISvgNode"
  },
  "api/Svg.SvgPreserveAspectRatio.html": {
    "href": "api/Svg.SvgPreserveAspectRatio.html",
    "title": "Enum SvgPreserveAspectRatio | SVG.NET API",
    "keywords": "Enum SvgPreserveAspectRatio Namespace : Svg Assembly : cs.temp.dll.dll Syntax public enum SvgPreserveAspectRatio Fields Name Description none xMaxYMax xMaxYMid xMaxYMin xMidYMax xMidYMid xMidYMin xMinYMax xMinYMid xMinYMin"
  },
  "api/Svg.SvgMarker.html": {
    "href": "api/Svg.SvgMarker.html",
    "title": "Class SvgMarker | SVG.NET API",
    "keywords": "Class SvgMarker Inheritance Object SvgElement SvgVisualElement SvgPathBasedElement SvgMarker Implements ISvgTransformable ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable ISvgViewPort Inherited Members SvgPathBasedElement.Bounds SvgVisualElement.ISvgBoundable.Location SvgVisualElement.ISvgBoundable.Size SvgVisualElement.Clip SvgVisualElement.ClipPath SvgVisualElement.ClipRule SvgVisualElement.Filter SvgVisualElement.RequiresSmoothRendering SvgVisualElement.Renderable SvgVisualElement.Render(ISvgRenderer) SvgVisualElement.RenderFillAndStroke(ISvgRenderer) SvgVisualElement.RenderFill(ISvgRenderer) SvgVisualElement.RenderStroke(ISvgRenderer) SvgVisualElement.SetClip(ISvgRenderer) SvgVisualElement.ResetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.SetClip(ISvgRenderer) SvgVisualElement.ISvgClipable.ResetClip(ISvgRenderer) SvgVisualElement.Visible SvgVisualElement.Display SvgVisualElement.Displayable SvgVisualElement.EnableBackground SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.AddElement(SvgElement, Int32) SvgElement.ChildAdded SvgElement.RemoveElement(SvgElement) SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"marker\")] public class SvgMarker : SvgPathBasedElement, ISvgElement, ISvgTransformable, ICloneable, ISvgNode, ISvgBoundable, ISvgStylable, ISvgClipable, ISvgViewPort Properties AspectRatio Declaration public virtual SvgAspectRatio AspectRatio { get; set; } Property Value Type Description SvgAspectRatio Fill If not set set in the marker, consider the attribute in the drawing element. Declaration public override SvgPaintServer Fill { get; } Property Value Type Description SvgPaintServer Overrides SvgElement.Fill MarkerHeight Declaration public virtual SvgUnit MarkerHeight { get; set; } Property Value Type Description SvgUnit MarkerUnits Declaration public virtual SvgMarkerUnits MarkerUnits { get; set; } Property Value Type Description SvgMarkerUnits MarkerWidth Declaration public virtual SvgUnit MarkerWidth { get; set; } Property Value Type Description SvgUnit Orient Declaration public virtual SvgOrient Orient { get; set; } Property Value Type Description SvgOrient Overflow Declaration public virtual SvgOverflow Overflow { get; set; } Property Value Type Description SvgOverflow RefX Declaration public virtual SvgUnit RefX { get; set; } Property Value Type Description SvgUnit RefY Declaration public virtual SvgUnit RefY { get; set; } Property Value Type Description SvgUnit Stroke If not set set in the marker, consider the attribute in the drawing element. Declaration public override SvgPaintServer Stroke { get; } Property Value Type Description SvgPaintServer Overrides SvgElement.Stroke ViewBox Declaration public virtual SvgViewBox ViewBox { get; set; } Property Value Type Description SvgViewBox Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgVisualElement.DeepCopy<T>() Path(ISvgRenderer) Declaration public override Drawing.Drawing2D.GraphicsPath Path(ISvgRenderer renderer) Parameters Type Name Description ISvgRenderer renderer Returns Type Description Drawing.Drawing2D.GraphicsPath Overrides SvgVisualElement.Path(ISvgRenderer) RenderMarker(ISvgRenderer, SvgVisualElement, PointF, PointF, PointF, PointF) Render this marker using the average of the slopes of the two given line segments Declaration public void RenderMarker(ISvgRenderer pRenderer, SvgVisualElement pOwner, PointF pRefPoint, PointF pMarkerPoint1, PointF pMarkerPoint2, PointF pMarkerPoint3) Parameters Type Name Description ISvgRenderer pRenderer SvgVisualElement pOwner PointF pRefPoint PointF pMarkerPoint1 PointF pMarkerPoint2 PointF pMarkerPoint3 RenderMarker(ISvgRenderer, SvgVisualElement, PointF, PointF, PointF, Boolean) Render this marker using the slope of the given line segment Declaration public void RenderMarker(ISvgRenderer pRenderer, SvgVisualElement pOwner, PointF pRefPoint, PointF pMarkerPoint1, PointF pMarkerPoint2, bool isStartMarker) Parameters Type Name Description ISvgRenderer pRenderer SvgVisualElement pOwner PointF pRefPoint PointF pMarkerPoint1 PointF pMarkerPoint2 Boolean isStartMarker Implements ISvgTransformable System.ICloneable ISvgNode ISvgBoundable ISvgStylable ISvgClipable ISvgViewPort"
  },
  "api/Svg.SvgLinearGradientServer.html": {
    "href": "api/Svg.SvgLinearGradientServer.html",
    "title": "Class SvgLinearGradientServer | SVG.NET API",
    "keywords": "Class SvgLinearGradientServer Inheritance Object SvgElement SvgPaintServer SvgGradientServer SvgLinearGradientServer Implements ISvgTransformable ICloneable ISvgNode Inherited Members SvgGradientServer.AddElement(SvgElement, Int32) SvgGradientServer.RemoveElement(SvgElement) SvgGradientServer.Stops SvgGradientServer.SpreadMethod SvgGradientServer.GradientUnits SvgGradientServer.InheritGradient SvgGradientServer.GradientTransform SvgGradientServer.EffectiveGradientTransform SvgGradientServer.GetColorBlend(ISvgRenderer, Single, Boolean) SvgGradientServer.LoadStops(SvgVisualElement) SvgGradientServer.CalculateDistance(PointF, PointF) SvgGradientServer.CalculateLength(PointF) SvgPaintServer.GetCallback SvgPaintServer.None SvgPaintServer.Render(ISvgRenderer) SvgPaintServer.ToString() SvgElement.AddStyle(String, String, Int32) SvgElement.FlushStyles(Boolean) SvgElement.ContainsAttribute(String) SvgElement.TryGetAttribute(String, String) SvgElement.ElementName SvgElement.Color SvgElement.Content SvgElement.Events SvgElement.Load SvgElement.Children SvgElement.Nodes SvgElement.Descendants() SvgElement.HasChildren() SvgElement.Parent SvgElement.Parents SvgElement.ParentsAndSelf SvgElement.OwnerDocument SvgElement.Attributes SvgElement.Inherited SvgElement.GetAttribute<TAttributeType>(String, Boolean, TAttributeType) SvgElement.CustomAttributes SvgElement.PushTransforms(ISvgRenderer) SvgElement.PopTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PushTransforms(ISvgRenderer) SvgElement.ISvgTransformable.PopTransforms(ISvgRenderer) SvgElement.Transforms SvgElement.TransformedBounds(RectangleF) SvgElement.ID SvgElement.SpaceHandling SvgElement.SetAndForceUniqueID(String, Boolean, Action<SvgElement, String, String>) SvgElement.ChildAdded SvgElement.InitialiseFromXML(XmlTextReader, SvgDocument) SvgElement.RenderElement(ISvgRenderer) SvgElement.ShouldWriteElement() SvgElement.WriteStartElement(XmlTextWriter) SvgElement.WriteEndElement(XmlTextWriter) SvgElement.WriteAttributes(XmlTextWriter) SvgElement.AutoPublishEvents SvgElement.Write(XmlTextWriter) SvgElement.WriteChildren(XmlTextWriter) SvgElement.RenderChildren(ISvgRenderer) SvgElement.AddPaths(SvgElement, GraphicsPath) SvgElement.GetPaths(SvgElement, ISvgRenderer) SvgElement.Clone() SvgElement.ISvgNode.DeepCopy() SvgElement.AttributeChanged SvgElement.OnAttributeChanged(AttributeEventArgs) SvgElement.ContentChanged SvgElement.OnContentChanged(ContentEventArgs) SvgElement.Click SvgElement.MouseDown SvgElement.MouseUp SvgElement.MouseMove SvgElement.MouseScroll SvgElement.MouseOver SvgElement.MouseOut SvgElement.RaiseMouseClick(Object, MouseArg) SvgElement.RaiseMouseDown(Object, MouseArg) SvgElement.RaiseMouseUp(Object, MouseArg) SvgElement.RaiseMouseMove(Object, MouseArg) SvgElement.RaiseMouseOver(Object, MouseArg) SvgElement.RaiseMouseOut(Object, MouseArg) SvgElement.OnMouseScroll(Int32, Boolean, Boolean, Boolean, String) SvgElement.RaiseMouseScroll(Object, MouseScrollArg) SvgElement.IsPathDirty SvgElement.InvalidateChildPaths() SvgElement.FixOpacityValue(Single) SvgElement.Fill SvgElement.Stroke SvgElement.FillRule SvgElement.FillOpacity SvgElement.StrokeWidth SvgElement.StrokeLineCap SvgElement.StrokeLineJoin SvgElement.StrokeMiterLimit SvgElement.StrokeDashArray SvgElement.StrokeDashOffset SvgElement.StrokeOpacity SvgElement.StopColor SvgElement.Opacity SvgElement.ShapeRendering SvgElement.TextAnchor SvgElement.BaselineShift SvgElement.FontFamily SvgElement.FontSize SvgElement.FontStyle SvgElement.FontVariant SvgElement.TextDecoration SvgElement.FontWeight SvgElement.TextTransformation SvgElement.Font SvgElement.PrivateFonts SvgElement.ValidateFontFamily(String, SvgDocument) Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Svg Assembly : cs.temp.dll.dll Syntax [SvgElement(\"linearGradient\")] public sealed class SvgLinearGradientServer : SvgGradientServer, ISvgElement, ISvgTransformable, ICloneable, ISvgNode Properties X1 Declaration public SvgUnit X1 { get; set; } Property Value Type Description SvgUnit X2 Declaration public SvgUnit X2 { get; set; } Property Value Type Description SvgUnit Y1 Declaration public SvgUnit Y1 { get; set; } Property Value Type Description SvgUnit Y2 Declaration public SvgUnit Y2 { get; set; } Property Value Type Description SvgUnit Methods DeepCopy() Declaration public override SvgElement DeepCopy() Returns Type Description SvgElement Overrides SvgElement.DeepCopy() DeepCopy<T>() Declaration public override SvgElement DeepCopy<T>() where T : SvgElement, new() Returns Type Description SvgElement Type Parameters Name Description T Overrides SvgGradientServer.DeepCopy<T>() GetBrush(SvgVisualElement, ISvgRenderer, Single, Boolean) Declaration public override Brush GetBrush(SvgVisualElement renderingElement, ISvgRenderer renderer, float opacity, bool forStroke = false) Parameters Type Name Description SvgVisualElement renderingElement ISvgRenderer renderer Single opacity Boolean forStroke Returns Type Description Brush Overrides SvgPaintServer.GetBrush(SvgVisualElement, ISvgRenderer, Single, Boolean) Implements ISvgTransformable System.ICloneable ISvgNode"
  },
  "api/Svg.SvgLinearGradientServer.GradientPoints.html": {
    "href": "api/Svg.SvgLinearGradientServer.GradientPoints.html",
    "title": "Struct SvgLinearGradientServer.GradientPoints | SVG.NET API",
    "keywords": "Struct SvgLinearGradientServer.GradientPoints Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : Svg Assembly : cs.temp.dll.dll Syntax public struct GradientPoints Constructors GradientPoints(PointF, PointF) Declaration public GradientPoints(PointF startPoint, PointF endPoint) Parameters Type Name Description PointF startPoint PointF endPoint Fields EndPoint Declaration public PointF EndPoint Field Value Type Description PointF StartPoint Declaration public PointF StartPoint Field Value Type Description PointF"
  }
}